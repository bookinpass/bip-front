import { AfterViewInit, ElementRef, OnChanges, Renderer2 } from '@angular/core';
import { QRCodeErrorCorrectionLevel, QRCodeVersion, QRCodeElementType } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class QRCodeComponent implements OnChanges, AfterViewInit {
    private renderer;
    private readonly platformId;
    colordark: string;
    colorlight: string;
    level: string;
    hidetitle: boolean;
    size: number;
    usesvg: boolean;
    allowEmptyString: boolean;
    qrdata: string;
    colorDark: string;
    colorLight: string;
    cssClass: string;
    elementType: keyof typeof QRCodeElementType;
    errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel;
    margin: number;
    scale: number;
    version: QRCodeVersion;
    width: number;
    qrcElement: ElementRef;
    qrcode: any;
    constructor(renderer: Renderer2, platformId: any);
    ngAfterViewInit(): void;
    ngOnChanges(): void;
    protected isValidQrCodeText: (data: string) => boolean;
    private toDataURL;
    private toCanvas;
    private renderElement;
    private createQRCode;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<QRCodeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<QRCodeComponent, "qrcode", never, { "colordark": "colordark"; "colorlight": "colorlight"; "level": "level"; "hidetitle": "hidetitle"; "size": "size"; "usesvg": "usesvg"; "allowEmptyString": "allowEmptyString"; "qrdata": "qrdata"; "colorDark": "colorDark"; "colorLight": "colorLight"; "cssClass": "cssClass"; "elementType": "elementType"; "errorCorrectionLevel": "errorCorrectionLevel"; "margin": "margin"; "scale": "scale"; "width": "width"; "version": "version"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcngtcXJjb2RlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyeC1xcmNvZGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFFSQ29kZUVycm9yQ29ycmVjdGlvbkxldmVsLCBRUkNvZGVWZXJzaW9uLCBRUkNvZGVFbGVtZW50VHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUVJDb2RlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0IHtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgcGxhdGZvcm1JZDtcbiAgICBjb2xvcmRhcms6IHN0cmluZztcbiAgICBjb2xvcmxpZ2h0OiBzdHJpbmc7XG4gICAgbGV2ZWw6IHN0cmluZztcbiAgICBoaWRldGl0bGU6IGJvb2xlYW47XG4gICAgc2l6ZTogbnVtYmVyO1xuICAgIHVzZXN2ZzogYm9vbGVhbjtcbiAgICBhbGxvd0VtcHR5U3RyaW5nOiBib29sZWFuO1xuICAgIHFyZGF0YTogc3RyaW5nO1xuICAgIGNvbG9yRGFyazogc3RyaW5nO1xuICAgIGNvbG9yTGlnaHQ6IHN0cmluZztcbiAgICBjc3NDbGFzczogc3RyaW5nO1xuICAgIGVsZW1lbnRUeXBlOiBrZXlvZiB0eXBlb2YgUVJDb2RlRWxlbWVudFR5cGU7XG4gICAgZXJyb3JDb3JyZWN0aW9uTGV2ZWw6IGtleW9mIHR5cGVvZiBRUkNvZGVFcnJvckNvcnJlY3Rpb25MZXZlbDtcbiAgICBtYXJnaW46IG51bWJlcjtcbiAgICBzY2FsZTogbnVtYmVyO1xuICAgIHZlcnNpb246IFFSQ29kZVZlcnNpb247XG4gICAgd2lkdGg6IG51bWJlcjtcbiAgICBxcmNFbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHFyY29kZTogYW55O1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIHBsYXRmb3JtSWQ6IGFueSk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgaXNWYWxpZFFyQ29kZVRleHQ6IChkYXRhOiBzdHJpbmcpID0+IGJvb2xlYW47XG4gICAgcHJpdmF0ZSB0b0RhdGFVUkw7XG4gICAgcHJpdmF0ZSB0b0NhbnZhcztcbiAgICBwcml2YXRlIHJlbmRlckVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBjcmVhdGVRUkNvZGU7XG59XG4iXX0=