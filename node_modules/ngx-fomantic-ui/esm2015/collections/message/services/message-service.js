/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FuiComponentFactory } from '../../../misc/util/internal';
import { MessagePosition, FuiMessageGlobalContainer } from '../components/message-global-container';
import { MessageController } from '../classes/message-controller';
export class FuiMessageService {
    /**
     * @param {?} _componentFactory
     */
    constructor(_componentFactory) {
        this._componentFactory = _componentFactory;
        this._controller = new MessageController();
        this._containerRef = this._componentFactory.createComponent(FuiMessageGlobalContainer);
        this._container.controller = this._controller;
        this._componentFactory.attachToApplication(this._containerRef);
        this._componentFactory.moveToDocumentBody(this._containerRef);
        this.position = MessagePosition.TopRight;
        this.width = 480;
    }
    /**
     * @return {?}
     */
    get position() {
        return this._container.position;
    }
    /**
     * @param {?} position
     * @return {?}
     */
    set position(position) {
        this._container.position = position;
    }
    /**
     * @return {?}
     */
    get width() {
        return this._container.width;
    }
    /**
     * @param {?} width
     * @return {?}
     */
    set width(width) {
        this._container.width = width;
    }
    /**
     * @return {?}
     */
    get maxShown() {
        return this._controller.maxShown;
    }
    /**
     * @param {?} max
     * @return {?}
     */
    set maxShown(max) {
        this._controller.maxShown = max;
    }
    /**
     * @return {?}
     */
    get isNewestOnTop() {
        return this._controller.isNewestOnTop;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isNewestOnTop(value) {
        this._controller.isNewestOnTop = value;
    }
    /**
     * @private
     * @return {?}
     */
    get _container() {
        return this._containerRef.instance;
    }
    /**
     * @param {?} config
     * @return {?}
     */
    show(config) {
        return this._controller.show(config);
    }
    /**
     * @return {?}
     */
    dismissAll() {
        return this._controller.dismissAll();
    }
}
FuiMessageService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FuiMessageService.ctorParameters = () => [
    { type: FuiComponentFactory }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    FuiMessageService.prototype._controller;
    /**
     * @type {?}
     * @private
     */
    FuiMessageService.prototype._containerRef;
    /**
     * @type {?}
     * @private
     */
    FuiMessageService.prototype._componentFactory;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsiY29sbGVjdGlvbnMvbWVzc2FnZS9zZXJ2aWNlcy9tZXNzYWdlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBZSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFDaEUsT0FBTyxFQUFDLGVBQWUsRUFBRSx5QkFBeUIsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQ2xHLE9BQU8sRUFBcUIsaUJBQWlCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUtwRixNQUFNLE9BQU8saUJBQWlCOzs7O0lBSTVCLFlBQW9CLGlCQUFzQztRQUF0QyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQXFCO1FBQ3hELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1FBRTNDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1FBQ3ZGLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFFOUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRTlELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUFDLFFBQVEsQ0FBQztRQUN6QyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztJQUNuQixDQUFDOzs7O0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFDbEMsQ0FBQzs7Ozs7SUFFRCxJQUFXLFFBQVEsQ0FBQyxRQUF5QjtRQUMzQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELElBQVcsS0FBSztRQUNkLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFRCxJQUFXLEtBQUssQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQzs7Ozs7SUFFRCxJQUFXLFFBQVEsQ0FBQyxHQUFXO1FBQzdCLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsSUFBVyxhQUFhO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUM7SUFDeEMsQ0FBQzs7Ozs7SUFFRCxJQUFXLGFBQWEsQ0FBQyxLQUFjO1FBQ3JDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUN6QyxDQUFDOzs7OztJQUVELElBQVksVUFBVTtRQUNwQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRU0sSUFBSSxDQUFDLE1BQXFCO1FBQy9CLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVNLFVBQVU7UUFDZixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdkMsQ0FBQzs7O1lBNURGLFVBQVU7Ozs7WUFOSCxtQkFBbUI7Ozs7Ozs7SUFRekIsd0NBQXVDOzs7OztJQUN2QywwQ0FBK0Q7Ozs7O0lBRW5ELDhDQUE4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50UmVmLCBJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtGdWlDb21wb25lbnRGYWN0b3J5fSBmcm9tICcuLi8uLi8uLi9taXNjL3V0aWwvaW50ZXJuYWwnO1xyXG5pbXBvcnQge01lc3NhZ2VQb3NpdGlvbiwgRnVpTWVzc2FnZUdsb2JhbENvbnRhaW5lcn0gZnJvbSAnLi4vY29tcG9uZW50cy9tZXNzYWdlLWdsb2JhbC1jb250YWluZXInO1xyXG5pbXBvcnQge0lNZXNzYWdlQ29udHJvbGxlciwgTWVzc2FnZUNvbnRyb2xsZXJ9IGZyb20gJy4uL2NsYXNzZXMvbWVzc2FnZS1jb250cm9sbGVyJztcclxuaW1wb3J0IHtNZXNzYWdlQ29uZmlnfSBmcm9tICcuLi9jbGFzc2VzL21lc3NhZ2UtY29uZmlnJztcclxuaW1wb3J0IHtGdWlBY3RpdmVNZXNzYWdlfSBmcm9tICcuLi9jbGFzc2VzL2FjdGl2ZS1tZXNzYWdlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEZ1aU1lc3NhZ2VTZXJ2aWNlIGltcGxlbWVudHMgSU1lc3NhZ2VDb250cm9sbGVyIHtcclxuICBwcml2YXRlIF9jb250cm9sbGVyOiBNZXNzYWdlQ29udHJvbGxlcjtcclxuICBwcml2YXRlIF9jb250YWluZXJSZWY6IENvbXBvbmVudFJlZjxGdWlNZXNzYWdlR2xvYmFsQ29udGFpbmVyPjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY29tcG9uZW50RmFjdG9yeTogRnVpQ29tcG9uZW50RmFjdG9yeSkge1xyXG4gICAgdGhpcy5fY29udHJvbGxlciA9IG5ldyBNZXNzYWdlQ29udHJvbGxlcigpO1xyXG5cclxuICAgIHRoaXMuX2NvbnRhaW5lclJlZiA9IHRoaXMuX2NvbXBvbmVudEZhY3RvcnkuY3JlYXRlQ29tcG9uZW50KEZ1aU1lc3NhZ2VHbG9iYWxDb250YWluZXIpO1xyXG4gICAgdGhpcy5fY29udGFpbmVyLmNvbnRyb2xsZXIgPSB0aGlzLl9jb250cm9sbGVyO1xyXG5cclxuICAgIHRoaXMuX2NvbXBvbmVudEZhY3RvcnkuYXR0YWNoVG9BcHBsaWNhdGlvbih0aGlzLl9jb250YWluZXJSZWYpO1xyXG4gICAgdGhpcy5fY29tcG9uZW50RmFjdG9yeS5tb3ZlVG9Eb2N1bWVudEJvZHkodGhpcy5fY29udGFpbmVyUmVmKTtcclxuXHJcbiAgICB0aGlzLnBvc2l0aW9uID0gTWVzc2FnZVBvc2l0aW9uLlRvcFJpZ2h0O1xyXG4gICAgdGhpcy53aWR0aCA9IDQ4MDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgcG9zaXRpb24oKTogTWVzc2FnZVBvc2l0aW9uIHtcclxuICAgIHJldHVybiB0aGlzLl9jb250YWluZXIucG9zaXRpb247XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHBvc2l0aW9uKHBvc2l0aW9uOiBNZXNzYWdlUG9zaXRpb24pIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wb3NpdGlvbiA9IHBvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCB3aWR0aCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NvbnRhaW5lci53aWR0aDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXQgd2lkdGgod2lkdGg6IG51bWJlcikge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLndpZHRoID0gd2lkdGg7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IG1heFNob3duKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29udHJvbGxlci5tYXhTaG93bjtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXQgbWF4U2hvd24obWF4OiBudW1iZXIpIHtcclxuICAgIHRoaXMuX2NvbnRyb2xsZXIubWF4U2hvd24gPSBtYXg7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGlzTmV3ZXN0T25Ub3AoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29udHJvbGxlci5pc05ld2VzdE9uVG9wO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldCBpc05ld2VzdE9uVG9wKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9jb250cm9sbGVyLmlzTmV3ZXN0T25Ub3AgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0IF9jb250YWluZXIoKTogRnVpTWVzc2FnZUdsb2JhbENvbnRhaW5lciB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29udGFpbmVyUmVmLmluc3RhbmNlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNob3coY29uZmlnOiBNZXNzYWdlQ29uZmlnKTogRnVpQWN0aXZlTWVzc2FnZSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29udHJvbGxlci5zaG93KGNvbmZpZyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGlzbWlzc0FsbCgpOiB2b2lkIHtcclxuICAgIHJldHVybiB0aGlzLl9jb250cm9sbGVyLmRpc21pc3NBbGwoKTtcclxuICB9XHJcbn1cclxuIl19