/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
export class FuiActiveMessage {
}
if (false) {
    /**
     * @abstract
     * @param {?} callback
     * @return {?}
     */
    FuiActiveMessage.prototype.onClick = function (callback) { };
    /**
     * @abstract
     * @param {?} callback
     * @return {?}
     */
    FuiActiveMessage.prototype.onDismiss = function (callback) { };
    /**
     * @abstract
     * @return {?}
     */
    FuiActiveMessage.prototype.dismiss = function () { };
}
export class ActiveMessage {
    /**
     * @param {?} config
     * @param {?} componentRef
     */
    constructor(config, componentRef) {
        this.config = config;
        this.componentRef = componentRef;
        this.component.onDismiss.subscribe((/**
         * @return {?}
         */
        () => this.componentRef.destroy()));
    }
    /**
     * @return {?}
     */
    get component() {
        return this.componentRef.instance;
    }
    /**
     * @param {?} callback
     * @return {?}
     */
    onClick(callback) {
        this.config.onClick.subscribe((/**
         * @return {?}
         */
        () => callback()));
        return this;
    }
    /**
     * @param {?} callback
     * @return {?}
     */
    onDismiss(callback) {
        this.config.onDismiss.subscribe((/**
         * @return {?}
         */
        () => callback()));
        return this;
    }
    /**
     * @return {?}
     */
    dismiss() {
        this.component.dismiss();
    }
}
if (false) {
    /** @type {?} */
    ActiveMessage.prototype.config;
    /** @type {?} */
    ActiveMessage.prototype.componentRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLW1lc3NhZ2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJjb2xsZWN0aW9ucy9tZXNzYWdlL2NsYXNzZXMvYWN0aXZlLW1lc3NhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLE1BQU0sT0FBZ0IsZ0JBQWdCO0NBTXJDOzs7Ozs7O0lBTEMsNkRBQWdFOzs7Ozs7SUFFaEUsK0RBQWtFOzs7OztJQUVsRSxxREFBZ0M7O0FBR2xDLE1BQU0sT0FBTyxhQUFhOzs7OztJQUl4QixZQUFZLE1BQXFCLEVBQUUsWUFBc0M7UUFDdkUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFFakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsU0FBUzs7O1FBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsRUFBQyxDQUFDO0lBQ3hFLENBQUM7Ozs7SUFFRCxJQUFXLFNBQVM7UUFDbEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztJQUNwQyxDQUFDOzs7OztJQUVNLE9BQU8sQ0FBQyxRQUFvQjtRQUNqQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTOzs7UUFBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBQyxDQUFDO1FBQ2hELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Ozs7SUFFTSxTQUFTLENBQUMsUUFBb0I7UUFDbkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUzs7O1FBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUMsQ0FBQztRQUNsRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Ozs7SUFFTSxPQUFPO1FBQ1osSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMzQixDQUFDO0NBQ0Y7OztJQTNCQywrQkFBNkI7O0lBQzdCLHFDQUE4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TWVzc2FnZUNvbmZpZ30gZnJvbSAnLi9tZXNzYWdlLWNvbmZpZyc7XHJcbmltcG9ydCB7Q29tcG9uZW50UmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtGdWlNZXNzYWdlfSBmcm9tICcuLi9jb21wb25lbnRzL21lc3NhZ2UnO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEZ1aUFjdGl2ZU1lc3NhZ2Uge1xyXG4gIHB1YmxpYyBhYnN0cmFjdCBvbkNsaWNrKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogRnVpQWN0aXZlTWVzc2FnZTtcclxuXHJcbiAgcHVibGljIGFic3RyYWN0IG9uRGlzbWlzcyhjYWxsYmFjazogKCkgPT4gdm9pZCk6IEZ1aUFjdGl2ZU1lc3NhZ2U7XHJcblxyXG4gIHB1YmxpYyBhYnN0cmFjdCBkaXNtaXNzKCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBY3RpdmVNZXNzYWdlIGltcGxlbWVudHMgRnVpQWN0aXZlTWVzc2FnZSB7XHJcbiAgcHVibGljIGNvbmZpZzogTWVzc2FnZUNvbmZpZztcclxuICBwdWJsaWMgY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8RnVpTWVzc2FnZT47XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogTWVzc2FnZUNvbmZpZywgY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8RnVpTWVzc2FnZT4pIHtcclxuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgdGhpcy5jb21wb25lbnRSZWYgPSBjb21wb25lbnRSZWY7XHJcblxyXG4gICAgdGhpcy5jb21wb25lbnQub25EaXNtaXNzLnN1YnNjcmliZSgoKSA9PiB0aGlzLmNvbXBvbmVudFJlZi5kZXN0cm95KCkpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBjb21wb25lbnQoKTogRnVpTWVzc2FnZSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25DbGljayhjYWxsYmFjazogKCkgPT4gdm9pZCk6IEFjdGl2ZU1lc3NhZ2Uge1xyXG4gICAgdGhpcy5jb25maWcub25DbGljay5zdWJzY3JpYmUoKCkgPT4gY2FsbGJhY2soKSk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvbkRpc21pc3MoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiBBY3RpdmVNZXNzYWdlIHtcclxuICAgIHRoaXMuY29uZmlnLm9uRGlzbWlzcy5zdWJzY3JpYmUoKCkgPT4gY2FsbGJhY2soKSk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkaXNtaXNzKCk6IHZvaWQge1xyXG4gICAgdGhpcy5jb21wb25lbnQuZGlzbWlzcygpO1xyXG4gIH1cclxufVxyXG4iXX0=