/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { forwardRef } from '@angular/core';
/**
 * @record
 * @template T
 */
export function ICustomValueAccessorHost() { }
if (false) {
    /**
     * @param {?} value
     * @return {?}
     */
    ICustomValueAccessorHost.prototype.writeValue = function (value) { };
}
/**
 * @template U, T
 */
export class CustomValueAccessor {
    /**
     * @param {?} _host
     */
    constructor(_host) {
        this._host = _host;
        this.onChange = (/**
         * @param {?} event
         * @return {?}
         */
        (event) => {
        });
        this.onTouched = (/**
         * @return {?}
         */
        () => {
        });
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this._host.writeValue(value);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
}
if (false) {
    /** @type {?} */
    CustomValueAccessor.prototype.onChange;
    /** @type {?} */
    CustomValueAccessor.prototype.onTouched;
    /**
     * @type {?}
     * @private
     */
    CustomValueAccessor.prototype._host;
}
/**
 * @record
 */
export function IValueAccessorProvider() { }
if (false) {
    /** @type {?} */
    IValueAccessorProvider.prototype.provide;
    /** @type {?} */
    IValueAccessorProvider.prototype.useExisting;
    /** @type {?} */
    IValueAccessorProvider.prototype.multi;
}
/**
 * @param {?} type
 * @return {?}
 */
export function customValueAccessorFactory(type) {
    return {
        provide: NG_VALUE_ACCESSOR,
        useExisting: forwardRef((/**
         * @return {?}
         */
        () => type)),
        multi: true
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXZhbHVlLWFjY2Vzc29yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibWlzYy91dGlsL2hlbHBlcnMvY3VzdG9tLXZhbHVlLWFjY2Vzc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQXVCLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDdkUsT0FBTyxFQUFDLFVBQVUsRUFBdUIsTUFBTSxlQUFlLENBQUM7Ozs7O0FBRS9ELDhDQUVDOzs7Ozs7SUFEQyxxRUFBMkI7Ozs7O0FBRzdCLE1BQU0sT0FBTyxtQkFBbUI7Ozs7SUFNOUIsWUFBb0IsS0FBUTtRQUFSLFVBQUssR0FBTCxLQUFLLENBQUc7UUFMckIsYUFBUTs7OztRQUFHLENBQUMsS0FBWSxFQUFFLEVBQUU7UUFDbkMsQ0FBQyxFQUFBO1FBQ00sY0FBUzs7O1FBQUcsR0FBRyxFQUFFO1FBQ3hCLENBQUMsRUFBQTtJQUdELENBQUM7Ozs7O0lBRU0sVUFBVSxDQUFDLEtBQVE7UUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFTSxnQkFBZ0IsQ0FBQyxFQUFjO1FBQ3BDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7O0lBRU0saUJBQWlCLENBQUMsRUFBYztRQUNyQyxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0NBQ0Y7OztJQW5CQyx1Q0FDQzs7SUFDRCx3Q0FDQzs7Ozs7SUFFVyxvQ0FBZ0I7Ozs7O0FBZ0I5Qiw0Q0FJQzs7O0lBSEMseUNBQThDOztJQUM5Qyw2Q0FBdUI7O0lBQ3ZCLHVDQUFlOzs7Ozs7QUFHakIsTUFBTSxVQUFVLDBCQUEwQixDQUFDLElBQWM7SUFDdkQsT0FBTztRQUNMLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsV0FBVyxFQUFFLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBQztRQUNuQyxLQUFLLEVBQUUsSUFBSTtLQUNaLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHtmb3J3YXJkUmVmLCBJbmplY3Rpb25Ub2tlbiwgVHlwZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElDdXN0b21WYWx1ZUFjY2Vzc29ySG9zdDxUPiB7XHJcbiAgd3JpdGVWYWx1ZSh2YWx1ZTogVCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21WYWx1ZUFjY2Vzc29yPFUsIFQgZXh0ZW5kcyBJQ3VzdG9tVmFsdWVBY2Nlc3Nvckhvc3Q8VT4+IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xyXG4gIHB1YmxpYyBvbkNoYW5nZSA9IChldmVudDogRXZlbnQpID0+IHtcclxuICB9XHJcbiAgcHVibGljIG9uVG91Y2hlZCA9ICgpID0+IHtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2hvc3Q6IFQpIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB3cml0ZVZhbHVlKHZhbHVlOiBVKTogdm9pZCB7XHJcbiAgICB0aGlzLl9ob3N0LndyaXRlVmFsdWUodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlZ2lzdGVyT25DaGFuZ2UoZm46ICgpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVZhbHVlQWNjZXNzb3JQcm92aWRlciB7XHJcbiAgcHJvdmlkZTogSW5qZWN0aW9uVG9rZW48Q29udHJvbFZhbHVlQWNjZXNzb3I+O1xyXG4gIHVzZUV4aXN0aW5nOiBUeXBlPGFueT47XHJcbiAgbXVsdGk6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjdXN0b21WYWx1ZUFjY2Vzc29yRmFjdG9yeSh0eXBlOiBGdW5jdGlvbik6IElWYWx1ZUFjY2Vzc29yUHJvdmlkZXIge1xyXG4gIHJldHVybiB7XHJcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcclxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IHR5cGUpLFxyXG4gICAgbXVsdGk6IHRydWVcclxuICB9O1xyXG59XHJcbiJdfQ==