/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NG_VALIDATORS } from '@angular/forms';
import { forwardRef } from '@angular/core';
/**
 * @record
 */
export function ICustomValidatorHost() { }
if (false) {
    /**
     * @param {?} c
     * @return {?}
     */
    ICustomValidatorHost.prototype.validate = function (c) { };
}
/**
 * @template T
 */
export class CustomValidator {
    /**
     * @param {?} _host
     */
    constructor(_host) {
        this._host = _host;
        this.onValidatorChange = (/**
         * @return {?}
         */
        () => {
        });
    }
    /**
     * @param {?} c
     * @return {?}
     */
    validate(c) {
        return this._host.validate(c);
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnValidatorChange(fn) {
        this.onValidatorChange = fn;
    }
}
if (false) {
    /** @type {?} */
    CustomValidator.prototype.onValidatorChange;
    /**
     * @type {?}
     * @private
     */
    CustomValidator.prototype._host;
}
/**
 * @record
 */
export function IValidationProvider() { }
if (false) {
    /** @type {?} */
    IValidationProvider.prototype.provide;
    /** @type {?} */
    IValidationProvider.prototype.useExisting;
    /** @type {?} */
    IValidationProvider.prototype.multi;
}
/**
 * @param {?} type
 * @return {?}
 */
export function customValidatorFactory(type) {
    return {
        provide: NG_VALIDATORS,
        useExisting: forwardRef((/**
         * @return {?}
         */
        () => type)),
        multi: true
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mb21hbnRpYy11aS8iLCJzb3VyY2VzIjpbIm1pc2MvdXRpbC9oZWxwZXJzL2N1c3RvbS12YWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBa0IsYUFBYSxFQUE4QixNQUFNLGdCQUFnQixDQUFDO0FBQzNGLE9BQU8sRUFBQyxVQUFVLEVBQXVCLE1BQU0sZUFBZSxDQUFDOzs7O0FBRS9ELDBDQUVDOzs7Ozs7SUFEQywyREFBc0Q7Ozs7O0FBR3hELE1BQU0sT0FBTyxlQUFlOzs7O0lBSTFCLFlBQW9CLEtBQVE7UUFBUixVQUFLLEdBQUwsS0FBSyxDQUFHO1FBSHJCLHNCQUFpQjs7O1FBQUcsR0FBRyxFQUFFO1FBQ2hDLENBQUMsRUFBQTtJQUdELENBQUM7Ozs7O0lBRU0sUUFBUSxDQUFDLENBQWtCO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFTSx5QkFBeUIsQ0FBQyxFQUFjO1FBQzdDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLENBQUM7SUFDOUIsQ0FBQztDQUNGOzs7SUFiQyw0Q0FDQzs7Ozs7SUFFVyxnQ0FBZ0I7Ozs7O0FBWTlCLHlDQUlDOzs7SUFIQyxzQ0FBa0Q7O0lBQ2xELDBDQUF1Qjs7SUFDdkIsb0NBQWU7Ozs7OztBQUdqQixNQUFNLFVBQVUsc0JBQXNCLENBQUMsSUFBYztJQUNuRCxPQUFPO1FBQ0wsT0FBTyxFQUFFLGFBQWE7UUFDdEIsV0FBVyxFQUFFLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBQztRQUNuQyxLQUFLLEVBQUUsSUFBSTtLQUNaLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTElEQVRPUlMsIFZhbGlkYXRpb25FcnJvcnMsIFZhbGlkYXRvcn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQge2ZvcndhcmRSZWYsIEluamVjdGlvblRva2VuLCBUeXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUN1c3RvbVZhbGlkYXRvckhvc3Qge1xyXG4gIHZhbGlkYXRlKGM6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ3VzdG9tVmFsaWRhdG9yPFQgZXh0ZW5kcyBJQ3VzdG9tVmFsaWRhdG9ySG9zdD4gaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xyXG4gIHB1YmxpYyBvblZhbGlkYXRvckNoYW5nZSA9ICgpID0+IHtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2hvc3Q6IFQpIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB2YWxpZGF0ZShjOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCB7XHJcbiAgICByZXR1cm4gdGhpcy5faG9zdC52YWxpZGF0ZShjKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlKGZuOiAoKSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICB0aGlzLm9uVmFsaWRhdG9yQ2hhbmdlID0gZm47XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElWYWxpZGF0aW9uUHJvdmlkZXIge1xyXG4gIHByb3ZpZGU6IEluamVjdGlvblRva2VuPChGdW5jdGlvbiB8IFZhbGlkYXRvcilbXT47XHJcbiAgdXNlRXhpc3Rpbmc6IFR5cGU8YW55PjtcclxuICBtdWx0aTogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGN1c3RvbVZhbGlkYXRvckZhY3RvcnkodHlwZTogRnVuY3Rpb24pOiBJVmFsaWRhdGlvblByb3ZpZGVyIHtcclxuICByZXR1cm4ge1xyXG4gICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IHR5cGUpLFxyXG4gICAgbXVsdGk6IHRydWVcclxuICB9O1xyXG59XHJcbiJdfQ==