/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input } from '@angular/core';
import { PositioningPlacement } from '../../../misc/util/internal';
export class FuiPopupArrow {
    /**
     * @return {?}
     */
    get direction() {
        if (this.placement) {
            return this.placement.split(' ').shift();
        }
    }
    /**
     * @return {?}
     */
    get alignment() {
        if (this.placement) {
            /** @type {?} */
            const alignment = this.placement.split(' ').pop();
            if (alignment === this.direction) {
                return 'center';
            }
            return alignment;
        }
    }
}
FuiPopupArrow.decorators = [
    { type: Component, args: [{
                selector: 'fui-popup-arrow',
                template: `
<div class="dynamic arrow" [attr.direction]="direction" *ngIf="alignment == 'center'"></div>
<div class="static arrow" [attr.direction]="direction" [attr.alignment]="alignment" *ngIf="alignment != 'center'"></div>
`,
                styles: [`
.arrow {
    position: absolute;
    width: 0.71428571em;
    height: 0.71428571em;
    background: #ffffff;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
    z-index: 2;
}

:host.inverted .arrow {
    background: #1b1c1d;
}

.arrow[direction="top"] {
    bottom: -0.30714286em;
    box-shadow: 1px 1px 0 0 #bababc;
}

.arrow[direction="left"] {
    right: -0.30714286em;
    box-shadow: 1px -1px 1px 0 #bababc;
}

.arrow[direction="bottom"] {
    top: -0.30714286em;
    box-shadow: -1px -1px 0 0 #bababc;
}

.arrow[direction="right"] {
    left: -0.30714286em;
    box-shadow: -1px 1px 1px 0 #bababc;
}

.static.arrow[direction="bottom"][alignment="left"],
.static.arrow[direction="top"][alignment="left"] {
    left: 1em;
    right: auto;
}

.static.arrow[direction="left"][alignment="top"],
.static.arrow[direction="right"][alignment="top"] {
    top: 1em;
    bottom: auto;
}

.static.arrow[direction="bottom"][alignment="right"],
.static.arrow[direction="top"][alignment="right"] {
    left: auto;
    right: 1em;
}

.static.arrow[direction="left"][alignment="bottom"],
.static.arrow[direction="right"][alignment="bottom"] {
    top: auto;
    bottom: 1em;
}
`]
            }] }
];
FuiPopupArrow.propDecorators = {
    placement: [{ type: Input }],
    inverted: [{ type: HostBinding, args: ['class.inverted',] }, { type: Input }]
};
if (false) {
    /** @type {?} */
    FuiPopupArrow.prototype.placement;
    /** @type {?} */
    FuiPopupArrow.prototype.inverted;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtYXJyb3cuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL3BvcHVwL2NvbXBvbmVudHMvcG9wdXAtYXJyb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQXFFakUsTUFBTSxPQUFPLGFBQWE7Ozs7SUFReEIsSUFBVyxTQUFTO1FBQ2xCLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzFDO0lBQ0gsQ0FBQzs7OztJQUVELElBQVcsU0FBUztRQUNsQixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7O2tCQUNaLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUU7WUFDakQsSUFBSSxTQUFTLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDaEMsT0FBTyxRQUFRLENBQUM7YUFDakI7WUFDRCxPQUFPLFNBQVMsQ0FBQztTQUNsQjtJQUNILENBQUM7OztZQXpGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFOzs7Q0FHWDt5QkFDVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0EyRFY7YUFDQTs7O3dCQUVFLEtBQUs7dUJBR0wsV0FBVyxTQUFDLGdCQUFnQixjQUM1QixLQUFLOzs7O0lBSk4sa0NBQ3VDOztJQUV2QyxpQ0FFeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtQb3NpdGlvbmluZ1BsYWNlbWVudH0gZnJvbSAnLi4vLi4vLi4vbWlzYy91dGlsL2ludGVybmFsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZnVpLXBvcHVwLWFycm93JyxcclxuICB0ZW1wbGF0ZTogYFxyXG48ZGl2IGNsYXNzPVwiZHluYW1pYyBhcnJvd1wiIFthdHRyLmRpcmVjdGlvbl09XCJkaXJlY3Rpb25cIiAqbmdJZj1cImFsaWdubWVudCA9PSAnY2VudGVyJ1wiPjwvZGl2PlxyXG48ZGl2IGNsYXNzPVwic3RhdGljIGFycm93XCIgW2F0dHIuZGlyZWN0aW9uXT1cImRpcmVjdGlvblwiIFthdHRyLmFsaWdubWVudF09XCJhbGlnbm1lbnRcIiAqbmdJZj1cImFsaWdubWVudCAhPSAnY2VudGVyJ1wiPjwvZGl2PlxyXG5gLFxyXG4gIHN0eWxlczogW2BcclxuLmFycm93IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAwLjcxNDI4NTcxZW07XHJcbiAgICBoZWlnaHQ6IDAuNzE0Mjg1NzFlbTtcclxuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB6LWluZGV4OiAyO1xyXG59XHJcblxyXG46aG9zdC5pbnZlcnRlZCAuYXJyb3cge1xyXG4gICAgYmFja2dyb3VuZDogIzFiMWMxZDtcclxufVxyXG5cclxuLmFycm93W2RpcmVjdGlvbj1cInRvcFwiXSB7XHJcbiAgICBib3R0b206IC0wLjMwNzE0Mjg2ZW07XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDAgMCAjYmFiYWJjO1xyXG59XHJcblxyXG4uYXJyb3dbZGlyZWN0aW9uPVwibGVmdFwiXSB7XHJcbiAgICByaWdodDogLTAuMzA3MTQyODZlbTtcclxuICAgIGJveC1zaGFkb3c6IDFweCAtMXB4IDFweCAwICNiYWJhYmM7XHJcbn1cclxuXHJcbi5hcnJvd1tkaXJlY3Rpb249XCJib3R0b21cIl0ge1xyXG4gICAgdG9wOiAtMC4zMDcxNDI4NmVtO1xyXG4gICAgYm94LXNoYWRvdzogLTFweCAtMXB4IDAgMCAjYmFiYWJjO1xyXG59XHJcblxyXG4uYXJyb3dbZGlyZWN0aW9uPVwicmlnaHRcIl0ge1xyXG4gICAgbGVmdDogLTAuMzA3MTQyODZlbTtcclxuICAgIGJveC1zaGFkb3c6IC0xcHggMXB4IDFweCAwICNiYWJhYmM7XHJcbn1cclxuXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwiYm90dG9tXCJdW2FsaWdubWVudD1cImxlZnRcIl0sXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwidG9wXCJdW2FsaWdubWVudD1cImxlZnRcIl0ge1xyXG4gICAgbGVmdDogMWVtO1xyXG4gICAgcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwibGVmdFwiXVthbGlnbm1lbnQ9XCJ0b3BcIl0sXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwicmlnaHRcIl1bYWxpZ25tZW50PVwidG9wXCJdIHtcclxuICAgIHRvcDogMWVtO1xyXG4gICAgYm90dG9tOiBhdXRvO1xyXG59XHJcblxyXG4uc3RhdGljLmFycm93W2RpcmVjdGlvbj1cImJvdHRvbVwiXVthbGlnbm1lbnQ9XCJyaWdodFwiXSxcclxuLnN0YXRpYy5hcnJvd1tkaXJlY3Rpb249XCJ0b3BcIl1bYWxpZ25tZW50PVwicmlnaHRcIl0ge1xyXG4gICAgbGVmdDogYXV0bztcclxuICAgIHJpZ2h0OiAxZW07XHJcbn1cclxuXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwibGVmdFwiXVthbGlnbm1lbnQ9XCJib3R0b21cIl0sXHJcbi5zdGF0aWMuYXJyb3dbZGlyZWN0aW9uPVwicmlnaHRcIl1bYWxpZ25tZW50PVwiYm90dG9tXCJdIHtcclxuICAgIHRvcDogYXV0bztcclxuICAgIGJvdHRvbTogMWVtO1xyXG59XHJcbmBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGdWlQb3B1cEFycm93IHtcclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBwbGFjZW1lbnQ6IFBvc2l0aW9uaW5nUGxhY2VtZW50O1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmludmVydGVkJylcclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBpbnZlcnRlZDogYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIGdldCBkaXJlY3Rpb24oKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcclxuICAgIGlmICh0aGlzLnBsYWNlbWVudCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5wbGFjZW1lbnQuc3BsaXQoJyAnKS5zaGlmdCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBhbGlnbm1lbnQoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcclxuICAgIGlmICh0aGlzLnBsYWNlbWVudCkge1xyXG4gICAgICBjb25zdCBhbGlnbm1lbnQgPSB0aGlzLnBsYWNlbWVudC5zcGxpdCgnICcpLnBvcCgpO1xyXG4gICAgICBpZiAoYWxpZ25tZW50ID09PSB0aGlzLmRpcmVjdGlvbikge1xyXG4gICAgICAgIHJldHVybiAnY2VudGVyJztcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gYWxpZ25tZW50O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=