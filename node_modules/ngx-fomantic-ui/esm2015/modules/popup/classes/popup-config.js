/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PositioningPlacement } from '../../../misc/util/internal';
/** @type {?} */
export const PopupTrigger = {
    Hover: (/** @type {?} */ ('hover')),
    Click: (/** @type {?} */ ('click')),
    OutsideClick: (/** @type {?} */ ('outsideClick')),
    Focus: (/** @type {?} */ ('focus')),
    Manual: (/** @type {?} */ ('manual'))
};
/**
 * @record
 */
export function IPopupConfig() { }
if (false) {
    /** @type {?|undefined} */
    IPopupConfig.prototype.header;
    /** @type {?|undefined} */
    IPopupConfig.prototype.text;
    /** @type {?|undefined} */
    IPopupConfig.prototype.placement;
    /** @type {?|undefined} */
    IPopupConfig.prototype.trigger;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isInverted;
    /** @type {?|undefined} */
    IPopupConfig.prototype.delay;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isBasic;
    /** @type {?|undefined} */
    IPopupConfig.prototype.transition;
    /** @type {?|undefined} */
    IPopupConfig.prototype.transitionDuration;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isFlowing;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isInline;
}
export class PopupConfig {
    /**
     * @param {?=} defaults
     */
    constructor(defaults = {}) {
        this.placement = PositioningPlacement.TopLeft;
        this.trigger = PopupTrigger.Hover;
        this.isInverted = false;
        this.delay = 0;
        this.isBasic = false;
        this.transition = 'scale';
        this.transitionDuration = 200;
        this.isFlowing = false;
        this.isInline = false;
        Object.assign(this, defaults);
    }
}
if (false) {
    /** @type {?} */
    PopupConfig.prototype.header;
    /** @type {?} */
    PopupConfig.prototype.text;
    /** @type {?} */
    PopupConfig.prototype.placement;
    /** @type {?} */
    PopupConfig.prototype.trigger;
    /** @type {?} */
    PopupConfig.prototype.isInverted;
    /** @type {?} */
    PopupConfig.prototype.delay;
    /** @type {?} */
    PopupConfig.prototype.isBasic;
    /** @type {?} */
    PopupConfig.prototype.transition;
    /** @type {?} */
    PopupConfig.prototype.size;
    /** @type {?} */
    PopupConfig.prototype.width;
    /** @type {?} */
    PopupConfig.prototype.transitionDuration;
    /** @type {?} */
    PopupConfig.prototype.isFlowing;
    /** @type {?} */
    PopupConfig.prototype.isInline;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy9wb3B1cC9jbGFzc2VzL3BvcHVwLWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7O0FBTWpFLE1BQU0sT0FBTyxZQUFZLEdBQUc7SUFDMUIsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsWUFBWSxFQUFFLG1CQUFBLGNBQWMsRUFBZ0I7SUFDNUMsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsTUFBTSxFQUFFLG1CQUFBLFFBQVEsRUFBZ0I7Q0FDakM7Ozs7QUFFRCxrQ0FZQzs7O0lBWEMsOEJBQWdCOztJQUNoQiw0QkFBYzs7SUFDZCxpQ0FBaUM7O0lBQ2pDLCtCQUF1Qjs7SUFDdkIsa0NBQXFCOztJQUNyQiw2QkFBZTs7SUFDZiwrQkFBa0I7O0lBQ2xCLGtDQUFvQjs7SUFDcEIsMENBQTRCOztJQUM1QixpQ0FBb0I7O0lBQ3BCLGdDQUFtQjs7QUFHckIsTUFBTSxPQUFPLFdBQVc7Ozs7SUFldEIsWUFBWSxXQUF5QixFQUFFO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDO1FBQzlDLElBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUNsQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDO1FBQzFCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLENBQUM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztDQUNGOzs7SUExQkMsNkJBQXVCOztJQUN2QiwyQkFBcUI7O0lBQ3JCLGdDQUF1Qzs7SUFDdkMsOEJBQTZCOztJQUM3QixpQ0FBMkI7O0lBQzNCLDRCQUFxQjs7SUFDckIsOEJBQXdCOztJQUN4QixpQ0FBMEI7O0lBQzFCLDJCQUF1Qjs7SUFDdkIsNEJBQXlCOztJQUN6Qix5Q0FBa0M7O0lBQ2xDLGdDQUEwQjs7SUFDMUIsK0JBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQb3NpdGlvbmluZ1BsYWNlbWVudH0gZnJvbSAnLi4vLi4vLi4vbWlzYy91dGlsL2ludGVybmFsJztcclxuXHJcbmV4cG9ydCB0eXBlIFBvcHVwVHJpZ2dlciA9ICdob3ZlcicgfCAnY2xpY2snIHwgJ291dHNpZGVDbGljaycgfCAnZm9jdXMnIHwgJ21hbnVhbCc7XHJcbmV4cG9ydCB0eXBlIFBvcHVwU2l6ZSA9ICdtaW5pJyB8ICd0aW55JyB8ICdzbWFsbCcgfCAnbGFyZ2UnIHwgJ2h1Z2UnO1xyXG5leHBvcnQgdHlwZSBQb3B1cFdpZHRoID0gJ3dpZGUnIHwgJ3Zlcnkgd2lkZScgfCAnZmxvd2luZyc7XHJcblxyXG5leHBvcnQgY29uc3QgUG9wdXBUcmlnZ2VyID0ge1xyXG4gIEhvdmVyOiAnaG92ZXInIGFzIFBvcHVwVHJpZ2dlcixcclxuICBDbGljazogJ2NsaWNrJyBhcyBQb3B1cFRyaWdnZXIsXHJcbiAgT3V0c2lkZUNsaWNrOiAnb3V0c2lkZUNsaWNrJyBhcyBQb3B1cFRyaWdnZXIsXHJcbiAgRm9jdXM6ICdmb2N1cycgYXMgUG9wdXBUcmlnZ2VyLFxyXG4gIE1hbnVhbDogJ21hbnVhbCcgYXMgUG9wdXBUcmlnZ2VyXHJcbn07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElQb3B1cENvbmZpZyB7XHJcbiAgaGVhZGVyPzogc3RyaW5nO1xyXG4gIHRleHQ/OiBzdHJpbmc7XHJcbiAgcGxhY2VtZW50PzogUG9zaXRpb25pbmdQbGFjZW1lbnQ7XHJcbiAgdHJpZ2dlcj86IFBvcHVwVHJpZ2dlcjtcclxuICBpc0ludmVydGVkPzogYm9vbGVhbjtcclxuICBkZWxheT86IG51bWJlcjtcclxuICBpc0Jhc2ljPzogYm9vbGVhbjtcclxuICB0cmFuc2l0aW9uPzogc3RyaW5nO1xyXG4gIHRyYW5zaXRpb25EdXJhdGlvbj86IG51bWJlcjtcclxuICBpc0Zsb3dpbmc/OiBib29sZWFuO1xyXG4gIGlzSW5saW5lPzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFBvcHVwQ29uZmlnIGltcGxlbWVudHMgSVBvcHVwQ29uZmlnIHtcclxuICBwdWJsaWMgaGVhZGVyPzogc3RyaW5nO1xyXG4gIHB1YmxpYyB0ZXh0Pzogc3RyaW5nO1xyXG4gIHB1YmxpYyBwbGFjZW1lbnQ6IFBvc2l0aW9uaW5nUGxhY2VtZW50O1xyXG4gIHB1YmxpYyB0cmlnZ2VyOiBQb3B1cFRyaWdnZXI7XHJcbiAgcHVibGljIGlzSW52ZXJ0ZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIGRlbGF5OiBudW1iZXI7XHJcbiAgcHVibGljIGlzQmFzaWM6IGJvb2xlYW47XHJcbiAgcHVibGljIHRyYW5zaXRpb246IHN0cmluZztcclxuICBwdWJsaWMgc2l6ZTogUG9wdXBTaXplO1xyXG4gIHB1YmxpYyB3aWR0aDogUG9wdXBXaWR0aDtcclxuICBwdWJsaWMgdHJhbnNpdGlvbkR1cmF0aW9uOiBudW1iZXI7XHJcbiAgcHVibGljIGlzRmxvd2luZzogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNJbmxpbmU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKGRlZmF1bHRzOiBJUG9wdXBDb25maWcgPSB7fSkge1xyXG4gICAgdGhpcy5wbGFjZW1lbnQgPSBQb3NpdGlvbmluZ1BsYWNlbWVudC5Ub3BMZWZ0O1xyXG4gICAgdGhpcy50cmlnZ2VyID0gUG9wdXBUcmlnZ2VyLkhvdmVyO1xyXG4gICAgdGhpcy5pc0ludmVydGVkID0gZmFsc2U7XHJcbiAgICB0aGlzLmRlbGF5ID0gMDtcclxuICAgIHRoaXMuaXNCYXNpYyA9IGZhbHNlO1xyXG4gICAgdGhpcy50cmFuc2l0aW9uID0gJ3NjYWxlJztcclxuICAgIHRoaXMudHJhbnNpdGlvbkR1cmF0aW9uID0gMjAwO1xyXG4gICAgdGhpcy5pc0Zsb3dpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMuaXNJbmxpbmUgPSBmYWxzZTtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgZGVmYXVsdHMpO1xyXG4gIH1cclxufVxyXG4iXX0=