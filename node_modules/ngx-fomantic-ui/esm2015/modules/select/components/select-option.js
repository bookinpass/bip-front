/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';
import { FuiDropdownMenuItem } from '../../dropdown/internal';
import { HandledEvent } from '../../../misc/util/internal';
/**
 * @template T
 */
export class FuiSelectOption extends FuiDropdownMenuItem {
    /**
     * @param {?} renderer
     * @param {?} element
     * @param {?} changeDetector
     */
    constructor(renderer, element, changeDetector) {
        // We inherit FuiDropdownMenuItem to automatically gain all keyboard navigation functionality.
        // This is not done via adding the .item class because it isn't supported by Angular.
        super(renderer, element);
        this.changeDetector = changeDetector;
        this.hasClasses = true;
        this.isActive = false;
        this.onSelected = new EventEmitter();
        // By default we make the default text an empty label, for the brief moment when it isn't displaying the correct one.
        this.renderedText = '';
        this.usesTemplate = false;
    }
    /**
     * @param {?} formatter
     * @return {?}
     */
    set formatter(formatter) {
        if (!this.usesTemplate) {
            this.renderedText = formatter(this.value);
        }
        else {
            this.renderedText = '';
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onClick(e) {
        e.eventHandled = true;
        setTimeout((/**
         * @return {?}
         */
        () => this.onSelected.emit(this.value)));
    }
}
FuiSelectOption.decorators = [
    { type: Component, args: [{
                selector: 'fui-select-option',
                template: `
<span #templateSibling></span>
<span [innerHTML]="renderedText"></span>
`
            }] }
];
/** @nocollapse */
FuiSelectOption.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: ChangeDetectorRef }
];
FuiSelectOption.propDecorators = {
    hasClasses: [{ type: HostBinding, args: ['class.item',] }],
    value: [{ type: Input }],
    onSelected: [{ type: Output }],
    isActive: [{ type: HostBinding, args: ['class.active',] }],
    templateSibling: [{ type: ViewChild, args: ['templateSibling', { read: ViewContainerRef, static: false },] }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    FuiSelectOption.prototype.hasClasses;
    /** @type {?} */
    FuiSelectOption.prototype.value;
    /** @type {?} */
    FuiSelectOption.prototype.onSelected;
    /** @type {?} */
    FuiSelectOption.prototype.isActive;
    /** @type {?} */
    FuiSelectOption.prototype.renderedText;
    /** @type {?} */
    FuiSelectOption.prototype.usesTemplate;
    /** @type {?} */
    FuiSelectOption.prototype.templateSibling;
    /** @type {?} */
    FuiSelectOption.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9wdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mb21hbnRpYy11aS8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvc2VsZWN0L2NvbXBvbmVudHMvc2VsZWN0LW9wdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsRUFDVCxnQkFBZ0IsRUFDakIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDZCQUE2QixDQUFDOzs7O0FBU3pELE1BQU0sT0FBTyxlQUFtQixTQUFRLG1CQUFtQjs7Ozs7O0lBcUJ6RCxZQUFZLFFBQW1CLEVBQUUsT0FBbUIsRUFBUyxjQUFpQztRQUM1Riw4RkFBOEY7UUFDOUYscUZBQXFGO1FBQ3JGLEtBQUssQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFIa0MsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBSzVGLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxZQUFZLEVBQUssQ0FBQztRQUV4QyxxSEFBcUg7UUFDckgsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFFdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCxJQUFXLFNBQVMsQ0FBQyxTQUE2QjtRQUNoRCxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN0QixJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0M7YUFBTTtZQUNMLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQzs7Ozs7SUFHTSxPQUFPLENBQUMsQ0FBZTtRQUM1QixDQUFDLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUV0QixVQUFVOzs7UUFBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUMsQ0FBQztJQUNyRCxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLFFBQVEsRUFBRTs7O0NBR1g7YUFDQTs7OztZQWJDLFNBQVM7WUFOVCxVQUFVO1lBRlYsaUJBQWlCOzs7eUJBd0JoQixXQUFXLFNBQUMsWUFBWTtvQkFHeEIsS0FBSzt5QkFJTCxNQUFNO3VCQUdOLFdBQVcsU0FBQyxjQUFjOzhCQU0xQixTQUFTLFNBQUMsaUJBQWlCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQztzQkEwQnBFLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7Ozs7SUExQ2pDLHFDQUNvQzs7SUFFcEMsZ0NBQ2dCOztJQUdoQixxQ0FDbUM7O0lBRW5DLG1DQUN5Qjs7SUFFekIsdUNBQTZCOztJQUM3Qix1Q0FBNkI7O0lBRTdCLDBDQUN5Qzs7SUFFYSx5Q0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENoYW5nZURldGVjdG9yUmVmLFxyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBIb3N0QmluZGluZyxcclxuICBIb3N0TGlzdGVuZXIsXHJcbiAgSW5wdXQsXHJcbiAgT3V0cHV0LFxyXG4gIFJlbmRlcmVyMixcclxuICBWaWV3Q2hpbGQsXHJcbiAgVmlld0NvbnRhaW5lclJlZlxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Z1aURyb3Bkb3duTWVudUl0ZW19IGZyb20gJy4uLy4uL2Ryb3Bkb3duL2ludGVybmFsJztcclxuaW1wb3J0IHtIYW5kbGVkRXZlbnR9IGZyb20gJy4uLy4uLy4uL21pc2MvdXRpbC9pbnRlcm5hbCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Z1aS1zZWxlY3Qtb3B0aW9uJyxcclxuICB0ZW1wbGF0ZTogYFxyXG48c3BhbiAjdGVtcGxhdGVTaWJsaW5nPjwvc3Bhbj5cclxuPHNwYW4gW2lubmVySFRNTF09XCJyZW5kZXJlZFRleHRcIj48L3NwYW4+XHJcbmBcclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aVNlbGVjdE9wdGlvbjxUPiBleHRlbmRzIEZ1aURyb3Bkb3duTWVudUl0ZW0ge1xyXG4gIC8vIFNldHMgdGhlIEZvbWFudGljIFVJIGNsYXNzZXMgb24gdGhlIGhvc3QgZWxlbWVudC5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLml0ZW0nKVxyXG4gIHB1YmxpYyByZWFkb25seSBoYXNDbGFzc2VzOiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyB2YWx1ZTogVDtcclxuXHJcbiAgLy8gRmlyZXMgd2hlbiB0aGUgb3B0aW9uIGlzIHNlbGVjdGVkLCB3aGV0aGVyIGJ5IGNsaWNraW5nIG9yIGJ5IGtleWJvYXJkLlxyXG4gIEBPdXRwdXQoKVxyXG4gIHB1YmxpYyBvblNlbGVjdGVkOiBFdmVudEVtaXR0ZXI8VD47XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYWN0aXZlJylcclxuICBwdWJsaWMgaXNBY3RpdmU6IGJvb2xlYW47XHJcblxyXG4gIHB1YmxpYyByZW5kZXJlZFRleHQ/OiBzdHJpbmc7XHJcbiAgcHVibGljIHVzZXNUZW1wbGF0ZTogYm9vbGVhbjtcclxuICAvLyBQbGFjZWhvbGRlciB0byBkcmF3IHRlbXBsYXRlIGJlc2lkZS5cclxuICBAVmlld0NoaWxkKCd0ZW1wbGF0ZVNpYmxpbmcnLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiBmYWxzZX0pXHJcbiAgcHVibGljIHRlbXBsYXRlU2libGluZzogVmlld0NvbnRhaW5lclJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudDogRWxlbWVudFJlZiwgcHVibGljIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikge1xyXG4gICAgLy8gV2UgaW5oZXJpdCBGdWlEcm9wZG93bk1lbnVJdGVtIHRvIGF1dG9tYXRpY2FsbHkgZ2FpbiBhbGwga2V5Ym9hcmQgbmF2aWdhdGlvbiBmdW5jdGlvbmFsaXR5LlxyXG4gICAgLy8gVGhpcyBpcyBub3QgZG9uZSB2aWEgYWRkaW5nIHRoZSAuaXRlbSBjbGFzcyBiZWNhdXNlIGl0IGlzbid0IHN1cHBvcnRlZCBieSBBbmd1bGFyLlxyXG4gICAgc3VwZXIocmVuZGVyZXIsIGVsZW1lbnQpO1xyXG5cclxuICAgIHRoaXMuaGFzQ2xhc3NlcyA9IHRydWU7XHJcbiAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XHJcbiAgICB0aGlzLm9uU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPFQ+KCk7XHJcblxyXG4gICAgLy8gQnkgZGVmYXVsdCB3ZSBtYWtlIHRoZSBkZWZhdWx0IHRleHQgYW4gZW1wdHkgbGFiZWwsIGZvciB0aGUgYnJpZWYgbW9tZW50IHdoZW4gaXQgaXNuJ3QgZGlzcGxheWluZyB0aGUgY29ycmVjdCBvbmUuXHJcbiAgICB0aGlzLnJlbmRlcmVkVGV4dCA9ICcnO1xyXG5cclxuICAgIHRoaXMudXNlc1RlbXBsYXRlID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IGZvcm1hdHRlcihmb3JtYXR0ZXI6IChvYmo6IFQpID0+IHN0cmluZykge1xyXG4gICAgaWYgKCF0aGlzLnVzZXNUZW1wbGF0ZSkge1xyXG4gICAgICB0aGlzLnJlbmRlcmVkVGV4dCA9IGZvcm1hdHRlcih0aGlzLnZhbHVlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMucmVuZGVyZWRUZXh0ID0gJyc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXHJcbiAgcHVibGljIG9uQ2xpY2soZTogSGFuZGxlZEV2ZW50KTogdm9pZCB7XHJcbiAgICBlLmV2ZW50SGFuZGxlZCA9IHRydWU7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLm9uU2VsZWN0ZWQuZW1pdCh0aGlzLnZhbHVlKSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==