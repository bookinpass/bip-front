/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter } from '@angular/core';
/** @type {?} */
export const SidebarTransition = {
    Overlay: (/** @type {?} */ ('overlay')),
    Push: (/** @type {?} */ ('push')),
    ScaleDown: (/** @type {?} */ ('scale down')),
    Uncover: (/** @type {?} */ ('uncover')),
    SlideAlong: (/** @type {?} */ ('slide along')),
    SlideOut: (/** @type {?} */ ('slide out'))
};
/** @type {?} */
export const SidebarDirection = {
    Left: (/** @type {?} */ ('left')),
    Right: (/** @type {?} */ ('right')),
    Top: (/** @type {?} */ ('top')),
    Bottom: (/** @type {?} */ ('bottom'))
};
export class SidebarService {
    /**
     * @param {?=} isVisible
     */
    constructor(isVisible = false) {
        this.isVisible = isVisible;
        this.isAnimating = false;
        this.wasJustOpened = false;
        this.isVisibleChange = new EventEmitter();
        this.widthChange = new EventEmitter();
        this.heightChange = new EventEmitter();
        this.width = 260;
        this.height = 0;
        this.transition = SidebarTransition.Uncover;
    }
    /**
     * @return {?}
     */
    get width() {
        if (this.direction === SidebarDirection.Left) {
            return this._width;
        }
        if (this.direction === SidebarDirection.Right) {
            return -this._width;
        }
        return 0;
    }
    /**
     * @param {?} width
     * @return {?}
     */
    set width(width) {
        this._width = width;
        this.widthChange.emit();
    }
    /**
     * @return {?}
     */
    get height() {
        if (this.direction === SidebarDirection.Top) {
            return this._height;
        }
        if (this.direction === SidebarDirection.Bottom) {
            return -this._height;
        }
        return 0;
    }
    /**
     * @param {?} height
     * @return {?}
     */
    set height(height) {
        this._height = height;
        this.heightChange.emit();
    }
    /**
     * @param {?} isVisible
     * @return {?}
     */
    setVisibleState(isVisible) {
        if (this.isVisible !== isVisible) {
            this.isVisible = isVisible;
            this.isAnimating = true;
            this.wasJustOpened = true;
            this.isVisibleChange.emit(isVisible);
            setTimeout((/**
             * @return {?}
             */
            () => this.wasJustOpened = false));
            clearTimeout(this._isAnimatingTimeout);
            this._isAnimatingTimeout = window.setTimeout((/**
             * @return {?}
             */
            () => this.isAnimating = false), 500);
        }
    }
    /**
     * @return {?}
     */
    toggleVisibleState() {
        this.setVisibleState(!this.isVisible);
    }
}
if (false) {
    /** @type {?} */
    SidebarService.prototype.isVisible;
    /** @type {?} */
    SidebarService.prototype.isAnimating;
    /** @type {?} */
    SidebarService.prototype.wasJustOpened;
    /** @type {?} */
    SidebarService.prototype.direction;
    /** @type {?} */
    SidebarService.prototype.isVisibleChange;
    /** @type {?} */
    SidebarService.prototype.widthChange;
    /** @type {?} */
    SidebarService.prototype.heightChange;
    /** @type {?} */
    SidebarService.prototype.transition;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._isAnimatingTimeout;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._width;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._height;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy9zaWRlYmFyL3NlcnZpY2VzL3NpZGViYXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFJM0MsTUFBTSxPQUFPLGlCQUFpQixHQUFHO0lBQy9CLE9BQU8sRUFBRSxtQkFBQSxTQUFTLEVBQXFCO0lBQ3ZDLElBQUksRUFBRSxtQkFBQSxNQUFNLEVBQXFCO0lBQ2pDLFNBQVMsRUFBRSxtQkFBQSxZQUFZLEVBQXFCO0lBQzVDLE9BQU8sRUFBRSxtQkFBQSxTQUFTLEVBQXFCO0lBQ3ZDLFVBQVUsRUFBRSxtQkFBQSxhQUFhLEVBQXFCO0lBQzlDLFFBQVEsRUFBRSxtQkFBQSxXQUFXLEVBQXFCO0NBQzNDOztBQUlELE1BQU0sT0FBTyxnQkFBZ0IsR0FBRztJQUM5QixJQUFJLEVBQUUsbUJBQUEsTUFBTSxFQUFvQjtJQUNoQyxLQUFLLEVBQUUsbUJBQUEsT0FBTyxFQUFvQjtJQUNsQyxHQUFHLEVBQUUsbUJBQUEsS0FBSyxFQUFvQjtJQUM5QixNQUFNLEVBQUUsbUJBQUEsUUFBUSxFQUFvQjtDQUNyQztBQUVELE1BQU0sT0FBTyxjQUFjOzs7O0lBWXpCLFlBQVksWUFBcUIsS0FBSztRQUNwQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUUzQixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFDbkQsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUU3QyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNqQixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUVoQixJQUFJLENBQUMsVUFBVSxHQUFHLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUM5QyxDQUFDOzs7O0lBSUQsSUFBVyxLQUFLO1FBQ2QsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLElBQUksRUFBRTtZQUM1QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7U0FDcEI7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssZ0JBQWdCLENBQUMsS0FBSyxFQUFFO1lBQzdDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQ3JCO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDOzs7OztJQUVELElBQVcsS0FBSyxDQUFDLEtBQWE7UUFDNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMxQixDQUFDOzs7O0lBSUQsSUFBVyxNQUFNO1FBQ2YsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLEdBQUcsRUFBRTtZQUMzQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDckI7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssZ0JBQWdCLENBQUMsTUFBTSxFQUFFO1lBQzlDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ3RCO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDOzs7OztJQUVELElBQVcsTUFBTSxDQUFDLE1BQWM7UUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVNLGVBQWUsQ0FBQyxTQUFrQjtRQUN2QyxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBRTFCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRXJDLFVBQVU7OztZQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxFQUFDLENBQUM7WUFDN0MsWUFBWSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsVUFBVTs7O1lBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLEdBQUUsR0FBRyxDQUFDLENBQUM7U0FDbkY7SUFDSCxDQUFDOzs7O0lBRU0sa0JBQWtCO1FBQ3ZCLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEMsQ0FBQztDQUNGOzs7SUE1RUMsbUNBQTBCOztJQUMxQixxQ0FBNEI7O0lBQzVCLHVDQUE4Qjs7SUFDOUIsbUNBQW1DOztJQUNuQyx5Q0FBOEM7O0lBQzlDLHFDQUF1Qzs7SUFDdkMsc0NBQXdDOztJQUN4QyxvQ0FBcUM7Ozs7O0lBQ3JDLDZDQUFvQzs7Ozs7SUFpQnBDLGdDQUF1Qjs7Ozs7SUFpQnZCLGlDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RXZlbnRFbWl0dGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCB0eXBlIFNpZGViYXJUcmFuc2l0aW9uID0gJ292ZXJsYXknIHwgJ3B1c2gnIHwgJ3NjYWxlIGRvd24nIHwgJ3VuY292ZXInIHwgJ3NsaWRlIGFsb25nJyB8ICdzbGlkZSBvdXQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNpZGViYXJUcmFuc2l0aW9uID0ge1xyXG4gIE92ZXJsYXk6ICdvdmVybGF5JyBhcyBTaWRlYmFyVHJhbnNpdGlvbixcclxuICBQdXNoOiAncHVzaCcgYXMgU2lkZWJhclRyYW5zaXRpb24sXHJcbiAgU2NhbGVEb3duOiAnc2NhbGUgZG93bicgYXMgU2lkZWJhclRyYW5zaXRpb24sXHJcbiAgVW5jb3ZlcjogJ3VuY292ZXInIGFzIFNpZGViYXJUcmFuc2l0aW9uLFxyXG4gIFNsaWRlQWxvbmc6ICdzbGlkZSBhbG9uZycgYXMgU2lkZWJhclRyYW5zaXRpb24sXHJcbiAgU2xpZGVPdXQ6ICdzbGlkZSBvdXQnIGFzIFNpZGViYXJUcmFuc2l0aW9uXHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBTaWRlYmFyRGlyZWN0aW9uID0gJ2xlZnQnIHwgJ3JpZ2h0JyB8ICd0b3AnIHwgJ2JvdHRvbSc7XHJcblxyXG5leHBvcnQgY29uc3QgU2lkZWJhckRpcmVjdGlvbiA9IHtcclxuICBMZWZ0OiAnbGVmdCcgYXMgU2lkZWJhckRpcmVjdGlvbixcclxuICBSaWdodDogJ3JpZ2h0JyBhcyBTaWRlYmFyRGlyZWN0aW9uLFxyXG4gIFRvcDogJ3RvcCcgYXMgU2lkZWJhckRpcmVjdGlvbixcclxuICBCb3R0b206ICdib3R0b20nIGFzIFNpZGViYXJEaXJlY3Rpb25cclxufTtcclxuXHJcbmV4cG9ydCBjbGFzcyBTaWRlYmFyU2VydmljZSB7XHJcblxyXG4gIHB1YmxpYyBpc1Zpc2libGU6IGJvb2xlYW47XHJcbiAgcHVibGljIGlzQW5pbWF0aW5nOiBib29sZWFuO1xyXG4gIHB1YmxpYyB3YXNKdXN0T3BlbmVkOiBib29sZWFuO1xyXG4gIHB1YmxpYyBkaXJlY3Rpb246IFNpZGViYXJEaXJlY3Rpb247XHJcbiAgcHVibGljIGlzVmlzaWJsZUNoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xyXG4gIHB1YmxpYyB3aWR0aENoYW5nZTogRXZlbnRFbWl0dGVyPHZvaWQ+O1xyXG4gIHB1YmxpYyBoZWlnaHRDaGFuZ2U6IEV2ZW50RW1pdHRlcjx2b2lkPjtcclxuICBwdWJsaWMgdHJhbnNpdGlvbjogU2lkZWJhclRyYW5zaXRpb247XHJcbiAgcHJpdmF0ZSBfaXNBbmltYXRpbmdUaW1lb3V0OiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGlzVmlzaWJsZTogYm9vbGVhbiA9IGZhbHNlKSB7XHJcbiAgICB0aGlzLmlzVmlzaWJsZSA9IGlzVmlzaWJsZTtcclxuICAgIHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZTtcclxuICAgIHRoaXMud2FzSnVzdE9wZW5lZCA9IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuaXNWaXNpYmxlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xyXG4gICAgdGhpcy53aWR0aENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcclxuICAgIHRoaXMuaGVpZ2h0Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xyXG5cclxuICAgIHRoaXMud2lkdGggPSAyNjA7XHJcbiAgICB0aGlzLmhlaWdodCA9IDA7XHJcblxyXG4gICAgdGhpcy50cmFuc2l0aW9uID0gU2lkZWJhclRyYW5zaXRpb24uVW5jb3ZlcjtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX3dpZHRoOiBudW1iZXI7XHJcblxyXG4gIHB1YmxpYyBnZXQgd2lkdGgoKTogbnVtYmVyIHtcclxuICAgIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gU2lkZWJhckRpcmVjdGlvbi5MZWZ0KSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl93aWR0aDtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gU2lkZWJhckRpcmVjdGlvbi5SaWdodCkge1xyXG4gICAgICByZXR1cm4gLXRoaXMuX3dpZHRoO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHdpZHRoKHdpZHRoOiBudW1iZXIpIHtcclxuICAgIHRoaXMuX3dpZHRoID0gd2lkdGg7XHJcbiAgICB0aGlzLndpZHRoQ2hhbmdlLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX2hlaWdodDogbnVtYmVyO1xyXG5cclxuICBwdWJsaWMgZ2V0IGhlaWdodCgpOiBudW1iZXIge1xyXG4gICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSBTaWRlYmFyRGlyZWN0aW9uLlRvcCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5faGVpZ2h0O1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSBTaWRlYmFyRGlyZWN0aW9uLkJvdHRvbSkge1xyXG4gICAgICByZXR1cm4gLXRoaXMuX2hlaWdodDtcclxuICAgIH1cclxuICAgIHJldHVybiAwO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldCBoZWlnaHQoaGVpZ2h0OiBudW1iZXIpIHtcclxuICAgIHRoaXMuX2hlaWdodCA9IGhlaWdodDtcclxuICAgIHRoaXMuaGVpZ2h0Q2hhbmdlLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXRWaXNpYmxlU3RhdGUoaXNWaXNpYmxlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5pc1Zpc2libGUgIT09IGlzVmlzaWJsZSkge1xyXG4gICAgICB0aGlzLmlzVmlzaWJsZSA9IGlzVmlzaWJsZTtcclxuICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IHRydWU7XHJcbiAgICAgIHRoaXMud2FzSnVzdE9wZW5lZCA9IHRydWU7XHJcblxyXG4gICAgICB0aGlzLmlzVmlzaWJsZUNoYW5nZS5lbWl0KGlzVmlzaWJsZSk7XHJcblxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMud2FzSnVzdE9wZW5lZCA9IGZhbHNlKTtcclxuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX2lzQW5pbWF0aW5nVGltZW91dCk7XHJcbiAgICAgIHRoaXMuX2lzQW5pbWF0aW5nVGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZSwgNTAwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyB0b2dnbGVWaXNpYmxlU3RhdGUoKTogdm9pZCB7XHJcbiAgICB0aGlzLnNldFZpc2libGVTdGF0ZSghdGhpcy5pc1Zpc2libGUpO1xyXG4gIH1cclxufVxyXG4iXX0=