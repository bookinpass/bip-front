/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, HostBinding } from '@angular/core';
import { FuiSidebar } from './sidebar';
import { FuiSidebarSibling } from './sidebar-sibling';
export class FuiSidebarContainer {
    constructor() {
        this.hasClasses = true;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        if (!this.sidebar) {
            throw new Error('You must include a <fui-sidebar> element within the container.');
        }
        this.service = this.sidebar.service;
        if (!this.sibling) {
            throw new Error('You must include a <fui-sidebar-sibling> element within the container.');
        }
        this.sibling.service = this.service;
    }
}
FuiSidebarContainer.decorators = [
    { type: Component, args: [{
                selector: 'fui-sidebar-container',
                template: `<ng-content></ng-content>`,
                styles: [`
:host {
    display: block;
}
`]
            }] }
];
/** @nocollapse */
FuiSidebarContainer.ctorParameters = () => [];
FuiSidebarContainer.propDecorators = {
    hasClasses: [{ type: HostBinding, args: ['class.pushable',] }],
    sidebar: [{ type: ContentChild, args: [FuiSidebar, { static: false },] }],
    sibling: [{ type: ContentChild, args: [FuiSidebarSibling, { static: false },] }]
};
if (false) {
    /** @type {?} */
    FuiSidebarContainer.prototype.service;
    /** @type {?} */
    FuiSidebarContainer.prototype.hasClasses;
    /** @type {?} */
    FuiSidebarContainer.prototype.sidebar;
    /** @type {?} */
    FuiSidebarContainer.prototype.sibling;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1jb250YWluZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL3NpZGViYXIvY29tcG9uZW50cy9zaWRlYmFyLWNvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFtQixTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVyRixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ3JDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBV3BELE1BQU0sT0FBTyxtQkFBbUI7SUFZOUI7UUFDRSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDOzs7O0lBRU0sa0JBQWtCO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0VBQWdFLENBQUMsQ0FBQztTQUNuRjtRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFFcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakIsTUFBTSxJQUFJLEtBQUssQ0FBQyx3RUFBd0UsQ0FBQyxDQUFDO1NBQzNGO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QyxDQUFDOzs7WUFuQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRSwyQkFBMkI7eUJBQzVCOzs7O0NBSVY7YUFDQTs7Ozs7eUJBSUUsV0FBVyxTQUFDLGdCQUFnQjtzQkFHNUIsWUFBWSxTQUFDLFVBQVUsRUFBRSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUM7c0JBR3hDLFlBQVksU0FBQyxpQkFBaUIsRUFBRSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUM7Ozs7SUFSaEQsc0NBQStCOztJQUUvQix5Q0FDb0M7O0lBRXBDLHNDQUMyQjs7SUFFM0Isc0NBQ2tDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZnRlckNvbnRlbnRJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSG9zdEJpbmRpbmd9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1NpZGViYXJTZXJ2aWNlfSBmcm9tICcuLi9zZXJ2aWNlcy9zaWRlYmFyLnNlcnZpY2UnO1xyXG5pbXBvcnQge0Z1aVNpZGViYXJ9IGZyb20gJy4vc2lkZWJhcic7XHJcbmltcG9ydCB7RnVpU2lkZWJhclNpYmxpbmd9IGZyb20gJy4vc2lkZWJhci1zaWJsaW5nJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZnVpLXNpZGViYXItY29udGFpbmVyJyxcclxuICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50PjwvbmctY29udGVudD5gLFxyXG4gIHN0eWxlczogW2BcclxuOmhvc3Qge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aVNpZGViYXJDb250YWluZXIgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcclxuICBwdWJsaWMgc2VydmljZTogU2lkZWJhclNlcnZpY2U7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MucHVzaGFibGUnKVxyXG4gIHB1YmxpYyByZWFkb25seSBoYXNDbGFzc2VzOiBib29sZWFuO1xyXG5cclxuICBAQ29udGVudENoaWxkKEZ1aVNpZGViYXIsIHtzdGF0aWM6IGZhbHNlfSlcclxuICBwdWJsaWMgc2lkZWJhcjogRnVpU2lkZWJhcjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChGdWlTaWRlYmFyU2libGluZywge3N0YXRpYzogZmFsc2V9KVxyXG4gIHB1YmxpYyBzaWJsaW5nOiBGdWlTaWRlYmFyU2libGluZztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmhhc0NsYXNzZXMgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5zaWRlYmFyKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG11c3QgaW5jbHVkZSBhIDxmdWktc2lkZWJhcj4gZWxlbWVudCB3aXRoaW4gdGhlIGNvbnRhaW5lci4nKTtcclxuICAgIH1cclxuICAgIHRoaXMuc2VydmljZSA9IHRoaXMuc2lkZWJhci5zZXJ2aWNlO1xyXG5cclxuICAgIGlmICghdGhpcy5zaWJsaW5nKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG11c3QgaW5jbHVkZSBhIDxmdWktc2lkZWJhci1zaWJsaW5nPiBlbGVtZW50IHdpdGhpbiB0aGUgY29udGFpbmVyLicpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zaWJsaW5nLnNlcnZpY2UgPSB0aGlzLnNlcnZpY2U7XHJcbiAgfVxyXG59XHJcbiJdfQ==