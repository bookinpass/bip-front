/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FuiPopupModule } from '../popup/internal';
import { FuiLocalizationModule } from '../../behaviors/localization/internal';
import { FuiUtilityModule } from '../../misc/util/internal';
import { FuiCalendarViewTitle } from './components/calendar-view-title';
import { FuiCalendarYearView } from './views/year-view';
import { FuiCalendarMonthView } from './views/month-view';
import { FuiCalendarItem } from './directives/calendar-item';
import { FuiCalendarDateView } from './views/date-view';
import { FuiDatepicker } from './components/datepicker';
import { FuiCalendarHourView } from './views/hour-view';
import { FuiCalendarMinuteView } from './views/minute-view';
import { FuiDatepickerInputDirective } from './directives/input.directive';
import { FuiDatepickerDirective, FuiDatepickerDirectiveValidator, FuiDatepickerDirectiveValueAccessor } from './directives/datepicker.directive';
export class FuiDatepickerModule {
}
FuiDatepickerModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    FuiPopupModule,
                    FuiLocalizationModule,
                    FuiUtilityModule
                ],
                declarations: [
                    FuiCalendarItem,
                    FuiCalendarViewTitle,
                    FuiCalendarYearView,
                    FuiCalendarMonthView,
                    FuiCalendarDateView,
                    FuiCalendarHourView,
                    FuiCalendarMinuteView,
                    FuiDatepicker,
                    FuiDatepickerDirective,
                    FuiDatepickerDirectiveValueAccessor,
                    FuiDatepickerDirectiveValidator,
                    FuiDatepickerInputDirective
                ],
                exports: [
                    FuiDatepickerDirective,
                    FuiDatepickerDirectiveValueAccessor,
                    FuiDatepickerDirectiveValidator,
                    FuiDatepickerInputDirective
                ],
                entryComponents: [
                    FuiDatepicker
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdkMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDNUUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDdEQsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUN6RSxPQUFPLEVBQ0wsc0JBQXNCLEVBQ3RCLCtCQUErQixFQUMvQixtQ0FBbUMsRUFDcEMsTUFBTSxtQ0FBbUMsQ0FBQztBQW9DM0MsTUFBTSxPQUFPLG1CQUFtQjs7O1lBbEMvQixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osV0FBVztvQkFDWCxjQUFjO29CQUNkLHFCQUFxQjtvQkFDckIsZ0JBQWdCO2lCQUNqQjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osZUFBZTtvQkFFZixvQkFBb0I7b0JBQ3BCLG1CQUFtQjtvQkFDbkIsb0JBQW9CO29CQUNwQixtQkFBbUI7b0JBQ25CLG1CQUFtQjtvQkFDbkIscUJBQXFCO29CQUVyQixhQUFhO29CQUNiLHNCQUFzQjtvQkFDdEIsbUNBQW1DO29CQUNuQywrQkFBK0I7b0JBQy9CLDJCQUEyQjtpQkFDNUI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLHNCQUFzQjtvQkFDdEIsbUNBQW1DO29CQUNuQywrQkFBK0I7b0JBQy9CLDJCQUEyQjtpQkFDNUI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNmLGFBQWE7aUJBQ2Q7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHtGb3Jtc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQge0Z1aVBvcHVwTW9kdWxlfSBmcm9tICcuLi9wb3B1cC9pbnRlcm5hbCc7XHJcbmltcG9ydCB7RnVpTG9jYWxpemF0aW9uTW9kdWxlfSBmcm9tICcuLi8uLi9iZWhhdmlvcnMvbG9jYWxpemF0aW9uL2ludGVybmFsJztcclxuaW1wb3J0IHtGdWlVdGlsaXR5TW9kdWxlfSBmcm9tICcuLi8uLi9taXNjL3V0aWwvaW50ZXJuYWwnO1xyXG5pbXBvcnQge0Z1aUNhbGVuZGFyVmlld1RpdGxlfSBmcm9tICcuL2NvbXBvbmVudHMvY2FsZW5kYXItdmlldy10aXRsZSc7XHJcbmltcG9ydCB7RnVpQ2FsZW5kYXJZZWFyVmlld30gZnJvbSAnLi92aWV3cy95ZWFyLXZpZXcnO1xyXG5pbXBvcnQge0Z1aUNhbGVuZGFyTW9udGhWaWV3fSBmcm9tICcuL3ZpZXdzL21vbnRoLXZpZXcnO1xyXG5pbXBvcnQge0Z1aUNhbGVuZGFySXRlbX0gZnJvbSAnLi9kaXJlY3RpdmVzL2NhbGVuZGFyLWl0ZW0nO1xyXG5pbXBvcnQge0Z1aUNhbGVuZGFyRGF0ZVZpZXd9IGZyb20gJy4vdmlld3MvZGF0ZS12aWV3JztcclxuaW1wb3J0IHtGdWlEYXRlcGlja2VyfSBmcm9tICcuL2NvbXBvbmVudHMvZGF0ZXBpY2tlcic7XHJcbmltcG9ydCB7RnVpQ2FsZW5kYXJIb3VyVmlld30gZnJvbSAnLi92aWV3cy9ob3VyLXZpZXcnO1xyXG5pbXBvcnQge0Z1aUNhbGVuZGFyTWludXRlVmlld30gZnJvbSAnLi92aWV3cy9taW51dGUtdmlldyc7XHJcbmltcG9ydCB7RnVpRGF0ZXBpY2tlcklucHV0RGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvaW5wdXQuZGlyZWN0aXZlJztcclxuaW1wb3J0IHtcclxuICBGdWlEYXRlcGlja2VyRGlyZWN0aXZlLFxyXG4gIEZ1aURhdGVwaWNrZXJEaXJlY3RpdmVWYWxpZGF0b3IsXHJcbiAgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZVZhbHVlQWNjZXNzb3JcclxufSBmcm9tICcuL2RpcmVjdGl2ZXMvZGF0ZXBpY2tlci5kaXJlY3RpdmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIEZ1aVBvcHVwTW9kdWxlLFxyXG4gICAgRnVpTG9jYWxpemF0aW9uTW9kdWxlLFxyXG4gICAgRnVpVXRpbGl0eU1vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBGdWlDYWxlbmRhckl0ZW0sXHJcblxyXG4gICAgRnVpQ2FsZW5kYXJWaWV3VGl0bGUsXHJcbiAgICBGdWlDYWxlbmRhclllYXJWaWV3LFxyXG4gICAgRnVpQ2FsZW5kYXJNb250aFZpZXcsXHJcbiAgICBGdWlDYWxlbmRhckRhdGVWaWV3LFxyXG4gICAgRnVpQ2FsZW5kYXJIb3VyVmlldyxcclxuICAgIEZ1aUNhbGVuZGFyTWludXRlVmlldyxcclxuXHJcbiAgICBGdWlEYXRlcGlja2VyLFxyXG4gICAgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZSxcclxuICAgIEZ1aURhdGVwaWNrZXJEaXJlY3RpdmVWYWx1ZUFjY2Vzc29yLFxyXG4gICAgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZVZhbGlkYXRvcixcclxuICAgIEZ1aURhdGVwaWNrZXJJbnB1dERpcmVjdGl2ZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZSxcclxuICAgIEZ1aURhdGVwaWNrZXJEaXJlY3RpdmVWYWx1ZUFjY2Vzc29yLFxyXG4gICAgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZVZhbGlkYXRvcixcclxuICAgIEZ1aURhdGVwaWNrZXJJbnB1dERpcmVjdGl2ZVxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBGdWlEYXRlcGlja2VyXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRnVpRGF0ZXBpY2tlck1vZHVsZSB7XHJcbn1cclxuIl19