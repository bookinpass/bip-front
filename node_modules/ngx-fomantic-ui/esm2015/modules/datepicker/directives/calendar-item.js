/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Directive, EventEmitter, HostBinding, HostListener, Input } from '@angular/core';
export class CalendarItem {
    /**
     * @param {?} date
     */
    constructor(date) {
        this.date = date;
    }
}
if (false) {
    /** @type {?} */
    CalendarItem.prototype.date;
    /** @type {?} */
    CalendarItem.prototype.humanReadable;
    /** @type {?} */
    CalendarItem.prototype.isDisabled;
    /** @type {?} */
    CalendarItem.prototype.isActive;
    /** @type {?} */
    CalendarItem.prototype.isOutsideRange;
    /** @type {?} */
    CalendarItem.prototype.isToday;
    /** @type {?} */
    CalendarItem.prototype.isSelectable;
}
export class FuiCalendarItem {
    /**
     * @param {?} changeDetector
     */
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this.hasFocus = false;
        this.onFocussed = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get isSelectable() {
        return this.item.isSelectable;
    }
    /**
     * @return {?}
     */
    get isActive() {
        return this.item.isActive;
    }
    /**
     * @return {?}
     */
    get isToday() {
        return this.item.isToday;
    }
    /**
     * @return {?}
     */
    onMouseMove() {
        if (!this.hasFocus) {
            this.hasFocus = true;
            this.onFocussed.emit(this.hasFocus);
        }
    }
    /**
     * @return {?}
     */
    onMouseLeave() {
        this.hasFocus = false;
        this.onFocussed.emit(this.hasFocus);
    }
}
FuiCalendarItem.decorators = [
    { type: Directive, args: [{
                selector: '[calendarItem]'
            },] }
];
/** @nocollapse */
FuiCalendarItem.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
FuiCalendarItem.propDecorators = {
    item: [{ type: Input, args: ['calendarItem',] }],
    hasFocus: [{ type: HostBinding, args: ['class.focus',] }],
    isSelectable: [{ type: HostBinding, args: ['class.disabled',] }],
    isActive: [{ type: HostBinding, args: ['class.active',] }],
    isToday: [{ type: HostBinding, args: ['class.today',] }],
    onMouseMove: [{ type: HostListener, args: ['mousemove',] }],
    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]
};
if (false) {
    /** @type {?} */
    FuiCalendarItem.prototype.item;
    /** @type {?} */
    FuiCalendarItem.prototype.hasFocus;
    /** @type {?} */
    FuiCalendarItem.prototype.onFocussed;
    /** @type {?} */
    FuiCalendarItem.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItaXRlbS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mb21hbnRpYy11aS8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvZGF0ZXBpY2tlci9kaXJlY3RpdmVzL2NhbGVuZGFyLWl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNHLE1BQU0sT0FBTyxZQUFZOzs7O0lBU3ZCLFlBQVksSUFBVTtRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7OztJQVhDLDRCQUFrQjs7SUFDbEIscUNBQTZCOztJQUM3QixrQ0FBMkI7O0lBQzNCLGdDQUF5Qjs7SUFDekIsc0NBQStCOztJQUMvQiwrQkFBd0I7O0lBQ3hCLG9DQUE2Qjs7QUFVL0IsTUFBTSxPQUFPLGVBQWU7Ozs7SUFPMUIsWUFBbUIsY0FBaUM7UUFBakMsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBQ2xELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXRCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQUNoRCxDQUFDOzs7O0lBRUQsSUFDVyxZQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELElBQ1csUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFFRCxJQUNXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMzQixDQUFDOzs7O0lBR00sV0FBVztRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDckM7SUFDSCxDQUFDOzs7O0lBR00sWUFBWTtRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7O1lBM0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2FBQzNCOzs7O1lBbEJPLGlCQUFpQjs7O21CQW9CdEIsS0FBSyxTQUFDLGNBQWM7dUJBRXBCLFdBQVcsU0FBQyxhQUFhOzJCQVV6QixXQUFXLFNBQUMsZ0JBQWdCO3VCQUs1QixXQUFXLFNBQUMsY0FBYztzQkFLMUIsV0FBVyxTQUFDLGFBQWE7MEJBS3pCLFlBQVksU0FBQyxXQUFXOzJCQVF4QixZQUFZLFNBQUMsWUFBWTs7OztJQW5DMUIsK0JBQzBCOztJQUMxQixtQ0FDeUI7O0lBQ3pCLHFDQUF5Qzs7SUFFN0IseUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3RvclJlZiwgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDYWxlbmRhckl0ZW0ge1xyXG4gIHB1YmxpYyBkYXRlOiBEYXRlO1xyXG4gIHB1YmxpYyBodW1hblJlYWRhYmxlOiBzdHJpbmc7XHJcbiAgcHVibGljIGlzRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuO1xyXG4gIHB1YmxpYyBpc091dHNpZGVSYW5nZTogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNUb2RheTogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNTZWxlY3RhYmxlOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihkYXRlOiBEYXRlKSB7XHJcbiAgICB0aGlzLmRhdGUgPSBkYXRlO1xyXG4gIH1cclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbY2FsZW5kYXJJdGVtXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aUNhbGVuZGFySXRlbSB7XHJcbiAgQElucHV0KCdjYWxlbmRhckl0ZW0nKVxyXG4gIHB1YmxpYyBpdGVtOiBDYWxlbmRhckl0ZW07XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mb2N1cycpXHJcbiAgcHVibGljIGhhc0ZvY3VzOiBib29sZWFuO1xyXG4gIHB1YmxpYyBvbkZvY3Vzc2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcclxuICAgIHRoaXMuaGFzRm9jdXMgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLm9uRm9jdXNzZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcbiAgfVxyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmRpc2FibGVkJylcclxuICBwdWJsaWMgZ2V0IGlzU2VsZWN0YWJsZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLml0ZW0uaXNTZWxlY3RhYmxlO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3RpdmUnKVxyXG4gIHB1YmxpYyBnZXQgaXNBY3RpdmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5pdGVtLmlzQWN0aXZlO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy50b2RheScpXHJcbiAgcHVibGljIGdldCBpc1RvZGF5KCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaXRlbS5pc1RvZGF5O1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vtb3ZlJylcclxuICBwdWJsaWMgb25Nb3VzZU1vdmUoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuaGFzRm9jdXMpIHtcclxuICAgICAgdGhpcy5oYXNGb2N1cyA9IHRydWU7XHJcbiAgICAgIHRoaXMub25Gb2N1c3NlZC5lbWl0KHRoaXMuaGFzRm9jdXMpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpXHJcbiAgcHVibGljIG9uTW91c2VMZWF2ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuaGFzRm9jdXMgPSBmYWxzZTtcclxuICAgIHRoaXMub25Gb2N1c3NlZC5lbWl0KHRoaXMuaGFzRm9jdXMpO1xyXG4gIH1cclxufVxyXG4iXX0=