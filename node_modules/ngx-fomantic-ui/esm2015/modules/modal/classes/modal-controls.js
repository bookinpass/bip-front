/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Used to pass ability to control a modal to a component.
/**
 * @template T, U
 */
export class ModalControls {
    /**
     * @param {?} approve
     * @param {?} deny
     */
    constructor(approve, deny) {
        this.approve = approve;
        this.deny = deny;
    }
    // Use method here rather than arrow variables to make intellisense show they're methods.
    /**
     * @param {?} result
     * @return {?}
     */
    approve(result) {
    }
    /**
     * @param {?} result
     * @return {?}
     */
    deny(result) {
    }
}
// Injected into custom modal components, to allow control of the modal, and access to a context object.
/**
 * @template T, U, V
 */
export class Modal extends ModalControls {
    /**
     * @param {?} controls
     * @param {?} context
     */
    constructor(controls, context) {
        // Instances of `ModalControls` are only created in the `FuiModal` constructor,
        // so we take an initialised instance rather than remaking one each time.
        super(controls.approve, controls.deny);
        this.context = context;
    }
}
if (false) {
    /** @type {?} */
    Modal.prototype.context;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29udHJvbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL21vZGFsL2NsYXNzZXMvbW9kYWwtY29udHJvbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFJQSxNQUFNLE9BQU8sYUFBYTs7Ozs7SUFDeEIsWUFBWSxPQUF1QixFQUFFLElBQW9CO1FBQ3ZELElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Ozs7OztJQUdNLE9BQU8sQ0FBQyxNQUFTO0lBQ3hCLENBQUM7Ozs7O0lBRU0sSUFBSSxDQUFDLE1BQVM7SUFDckIsQ0FBQztDQUNGOzs7OztBQUdELE1BQU0sT0FBTyxLQUF1QyxTQUFRLGFBQW1COzs7OztJQUc3RSxZQUFZLFFBQTZCLEVBQUUsT0FBVTtRQUNuRCwrRUFBK0U7UUFDL0UseUVBQXlFO1FBQ3pFLEtBQUssQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV2QyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0NBQ0Y7OztJQVRDLHdCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNob3J0aGFuZCB0byBhdm9pZCB3cml0aW5nIGFycm93IHR5cGVzIGV2ZXJ5d2hlcmUuXHJcbmV4cG9ydCB0eXBlIE1vZGFsUmVzdWx0PFQ+ID0gKHJlc3VsdDogVCkgPT4gdm9pZDtcclxuXHJcbi8vIFVzZWQgdG8gcGFzcyBhYmlsaXR5IHRvIGNvbnRyb2wgYSBtb2RhbCB0byBhIGNvbXBvbmVudC5cclxuZXhwb3J0IGNsYXNzIE1vZGFsQ29udHJvbHM8VCwgVT4ge1xyXG4gIGNvbnN0cnVjdG9yKGFwcHJvdmU6IE1vZGFsUmVzdWx0PFQ+LCBkZW55OiBNb2RhbFJlc3VsdDxVPikge1xyXG4gICAgdGhpcy5hcHByb3ZlID0gYXBwcm92ZTtcclxuICAgIHRoaXMuZGVueSA9IGRlbnk7XHJcbiAgfVxyXG5cclxuICAvLyBVc2UgbWV0aG9kIGhlcmUgcmF0aGVyIHRoYW4gYXJyb3cgdmFyaWFibGVzIHRvIG1ha2UgaW50ZWxsaXNlbnNlIHNob3cgdGhleSdyZSBtZXRob2RzLlxyXG4gIHB1YmxpYyBhcHByb3ZlKHJlc3VsdDogVCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGRlbnkocmVzdWx0OiBVKTogdm9pZCB7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBJbmplY3RlZCBpbnRvIGN1c3RvbSBtb2RhbCBjb21wb25lbnRzLCB0byBhbGxvdyBjb250cm9sIG9mIHRoZSBtb2RhbCwgYW5kIGFjY2VzcyB0byBhIGNvbnRleHQgb2JqZWN0LlxyXG5leHBvcnQgY2xhc3MgTW9kYWw8VCwgVSA9IHVuZGVmaW5lZCwgViA9IHVuZGVmaW5lZD4gZXh0ZW5kcyBNb2RhbENvbnRyb2xzPFUsIFY+IHtcclxuICBwdWJsaWMgY29udGV4dDogVDtcclxuXHJcbiAgY29uc3RydWN0b3IoY29udHJvbHM6IE1vZGFsQ29udHJvbHM8VSwgVj4sIGNvbnRleHQ6IFQpIHtcclxuICAgIC8vIEluc3RhbmNlcyBvZiBgTW9kYWxDb250cm9sc2AgYXJlIG9ubHkgY3JlYXRlZCBpbiB0aGUgYEZ1aU1vZGFsYCBjb25zdHJ1Y3RvcixcclxuICAgIC8vIHNvIHdlIHRha2UgYW4gaW5pdGlhbGlzZWQgaW5zdGFuY2UgcmF0aGVyIHRoYW4gcmVtYWtpbmcgb25lIGVhY2ggdGltZS5cclxuICAgIHN1cGVyKGNvbnRyb2xzLmFwcHJvdmUsIGNvbnRyb2xzLmRlbnkpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ==