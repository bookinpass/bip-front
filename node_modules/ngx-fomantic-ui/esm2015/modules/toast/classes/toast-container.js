/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
export class FuiToastContainer {
    constructor() {
        this.toastData = [];
        this.timeoutIds = {};
        this.maxId = 0;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    addToast(data) {
        data.id = data.id || ++this.maxId;
        data.showProgress = data.showProgress || 'bottom';
        data.class = data.class || 'info';
        data.displayTime = data.displayTime || 5000;
        this.toastData.unshift(data);
        this.timeoutIds[data.id] = window.setTimeout((/**
         * @return {?}
         */
        () => this.closeToast(data.id)), data.displayTime);
    }
    /**
     * @param {?} toastId
     * @return {?}
     */
    closeToast(toastId) {
        /** @type {?} */
        const x = this.toastData.findIndex((/**
         * @param {?} t
         * @return {?}
         */
        t => t.id === toastId));
        if (x > -1) {
            /** @type {?} */
            const id = this.toastData[x].id;
            window.clearTimeout(this.timeoutIds[id]);
            delete this.timeoutIds[id];
            this.toastData.splice(x, 1);
        }
    }
}
FuiToastContainer.decorators = [
    { type: Component, args: [{
                selector: 'fui-toast-container',
                exportAs: 'fuiToastContainer',
                template: `
    <fui-toast *ngFor="let toast of toastData"
               [id]="toast.id"
               [title]="toast.title"
               [message]="toast.message"
               [class]="toast.class"
               [showProgress]="toast.showProgress"
               [displayTime]="toast.displayTime"
               [showIcon]="toast.showIcon"
               [closeIcon]="toast.closeIcon"
               [progressUp]="toast.progressUp"
               [className]="toast.className"
               (close)="closeToast(toast.id)"></fui-toast>`
            }] }
];
if (false) {
    /** @type {?} */
    FuiToastContainer.prototype.toastData;
    /** @type {?} */
    FuiToastContainer.prototype.timeoutIds;
    /**
     * @type {?}
     * @private
     */
    FuiToastContainer.prototype.maxId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QtY29udGFpbmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy90b2FzdC9jbGFzc2VzL3RvYXN0LWNvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQW9CeEMsTUFBTSxPQUFPLGlCQUFpQjtJQWpCOUI7UUFrQkUsY0FBUyxHQUEwQixFQUFFLENBQUM7UUFDdEMsZUFBVSxHQUFrQyxFQUFFLENBQUM7UUFDdkMsVUFBSyxHQUFHLENBQUMsQ0FBQztJQXNCcEIsQ0FBQzs7Ozs7SUFwQkMsUUFBUSxDQUFDLElBQW9CO1FBQzNCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxJQUFJLFFBQVEsQ0FBQztRQUNsRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7UUFFNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFVBQVU7OztRQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqRyxDQUFDOzs7OztJQUVELFVBQVUsQ0FBQyxPQUFlOztjQUNsQixDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLE9BQU8sRUFBQztRQUV6RCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTs7a0JBQ0osRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUMvQixNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN6QyxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzdCO0lBQ0gsQ0FBQzs7O1lBekNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7OzsyREFZK0M7YUFDMUQ7Ozs7SUFFQyxzQ0FBc0M7O0lBQ3RDLHVDQUErQzs7Ozs7SUFDL0Msa0NBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0Z1aVRvYXN0Q29uZmlnfSBmcm9tICcuL3RvYXN0LWNvbmZpZyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Z1aS10b2FzdC1jb250YWluZXInLFxyXG4gIGV4cG9ydEFzOiAnZnVpVG9hc3RDb250YWluZXInLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZnVpLXRvYXN0ICpuZ0Zvcj1cImxldCB0b2FzdCBvZiB0b2FzdERhdGFcIlxyXG4gICAgICAgICAgICAgICBbaWRdPVwidG9hc3QuaWRcIlxyXG4gICAgICAgICAgICAgICBbdGl0bGVdPVwidG9hc3QudGl0bGVcIlxyXG4gICAgICAgICAgICAgICBbbWVzc2FnZV09XCJ0b2FzdC5tZXNzYWdlXCJcclxuICAgICAgICAgICAgICAgW2NsYXNzXT1cInRvYXN0LmNsYXNzXCJcclxuICAgICAgICAgICAgICAgW3Nob3dQcm9ncmVzc109XCJ0b2FzdC5zaG93UHJvZ3Jlc3NcIlxyXG4gICAgICAgICAgICAgICBbZGlzcGxheVRpbWVdPVwidG9hc3QuZGlzcGxheVRpbWVcIlxyXG4gICAgICAgICAgICAgICBbc2hvd0ljb25dPVwidG9hc3Quc2hvd0ljb25cIlxyXG4gICAgICAgICAgICAgICBbY2xvc2VJY29uXT1cInRvYXN0LmNsb3NlSWNvblwiXHJcbiAgICAgICAgICAgICAgIFtwcm9ncmVzc1VwXT1cInRvYXN0LnByb2dyZXNzVXBcIlxyXG4gICAgICAgICAgICAgICBbY2xhc3NOYW1lXT1cInRvYXN0LmNsYXNzTmFtZVwiXHJcbiAgICAgICAgICAgICAgIChjbG9zZSk9XCJjbG9zZVRvYXN0KHRvYXN0LmlkKVwiPjwvZnVpLXRvYXN0PmBcclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aVRvYXN0Q29udGFpbmVyIHtcclxuICB0b2FzdERhdGE6IEFycmF5PEZ1aVRvYXN0Q29uZmlnPiA9IFtdO1xyXG4gIHRpbWVvdXRJZHM6IHsgW3RvYXN0SWQ6IG51bWJlcl06IG51bWJlciB9ID0ge307XHJcbiAgcHJpdmF0ZSBtYXhJZCA9IDA7XHJcblxyXG4gIGFkZFRvYXN0KGRhdGE6IEZ1aVRvYXN0Q29uZmlnKSB7XHJcbiAgICBkYXRhLmlkID0gZGF0YS5pZCB8fCArK3RoaXMubWF4SWQ7XHJcbiAgICBkYXRhLnNob3dQcm9ncmVzcyA9IGRhdGEuc2hvd1Byb2dyZXNzIHx8ICdib3R0b20nO1xyXG4gICAgZGF0YS5jbGFzcyA9IGRhdGEuY2xhc3MgfHwgJ2luZm8nO1xyXG4gICAgZGF0YS5kaXNwbGF5VGltZSA9IGRhdGEuZGlzcGxheVRpbWUgfHwgNTAwMDtcclxuXHJcbiAgICB0aGlzLnRvYXN0RGF0YS51bnNoaWZ0KGRhdGEpO1xyXG4gICAgdGhpcy50aW1lb3V0SWRzW2RhdGEuaWRdID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gdGhpcy5jbG9zZVRvYXN0KGRhdGEuaWQpLCBkYXRhLmRpc3BsYXlUaW1lKTtcclxuICB9XHJcblxyXG4gIGNsb3NlVG9hc3QodG9hc3RJZDogbnVtYmVyKSB7XHJcbiAgICBjb25zdCB4ID0gdGhpcy50b2FzdERhdGEuZmluZEluZGV4KHQgPT4gdC5pZCA9PT0gdG9hc3RJZCk7XHJcblxyXG4gICAgaWYgKHggPiAtMSkge1xyXG4gICAgICBjb25zdCBpZCA9IHRoaXMudG9hc3REYXRhW3hdLmlkO1xyXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkc1tpZF0pO1xyXG4gICAgICBkZWxldGUgdGhpcy50aW1lb3V0SWRzW2lkXTtcclxuICAgICAgdGhpcy50b2FzdERhdGEuc3BsaWNlKHgsIDEpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=