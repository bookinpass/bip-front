/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input } from '@angular/core';
var FuiProgress = /** @class */ (function () {
    function FuiProgress() {
        this.value = 0;
        this.maximum = 100;
        this.precision = 0;
        this._overrideSuccess = false;
        this.autoSuccess = true;
        this.showProgress = true;
        this.hasClasses = true;
    }
    Object.defineProperty(FuiProgress.prototype, "reachedMaximum", {
        get: /**
         * @return {?}
         */
        function () {
            return this._overrideSuccess || ((this.value >= this.maximum) && this.autoSuccess);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiProgress.prototype, "percentage", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var boundedValue = Math.min(Math.max(this.value, 0), this.maximum);
            /** @type {?} */
            var percentage = (boundedValue / this.maximum) * 100;
            return percentage.toFixed(this.precision);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiProgress.prototype, "classValue", {
        set: /**
         * @param {?} classes
         * @return {?}
         */
        function (classes) {
            if (classes.includes('attached') || classes.includes('tiny')) {
                this.showProgress = false;
            }
            if (classes.includes('success')) {
                this._overrideSuccess = true;
            }
            this.transition = 'ease';
            this.transitionDuration = 350;
            this.canCompletelyEmpty = false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiProgress.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            // Convert value from string to number where necessary.
            /** @type {?} */
            var converted = +value;
            if (Number.isNaN(converted)) {
                return;
            }
            this._value = converted;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiProgress.prototype, "maximum", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maximum;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            // Convert value from string to number where necessary.
            /** @type {?} */
            var converted = +value;
            if (Number.isNaN(converted)) {
                return;
            }
            this._maximum = converted;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiProgress.prototype, "precision", {
        get: /**
         * @return {?}
         */
        function () {
            return this._precision;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            // Convert value from string to number where necessary.
            /** @type {?} */
            var converted = +value;
            if (Number.isNaN(converted)) {
                return;
            }
            this._precision = Math.min(Math.max(converted, 0), 20);
        },
        enumerable: true,
        configurable: true
    });
    FuiProgress.decorators = [
        { type: Component, args: [{
                    selector: 'fui-progress',
                    template: "\n<div class=\"bar\"\n    [style.width.%]=\"percentage\"\n    [style.minWidth]=\"canCompletelyEmpty ? 0 : null\"\n    [style.transitionTimingFunction]=\"transition\"\n    [style.transitionDuration.ms]=\"transitionDuration\">\n    <div class=\"progress\" *ngIf=\"showProgress\">{{ percentage }}%</div>\n</div>\n<div class=\"label\">\n    <ng-content></ng-content>\n</div>\n",
                    styles: ["\n.bar {\n    transition-duration: 300ms !important;\n    z-index: 1;\n}\n"]
                }] }
    ];
    /** @nocollapse */
    FuiProgress.ctorParameters = function () { return []; };
    FuiProgress.propDecorators = {
        transition: [{ type: Input }],
        transitionDuration: [{ type: Input }],
        canCompletelyEmpty: [{ type: Input }],
        hasClasses: [{ type: HostBinding, args: ['class.ui',] }, { type: HostBinding, args: ['class.progress',] }],
        autoSuccess: [{ type: Input }],
        showProgress: [{ type: Input }],
        reachedMaximum: [{ type: HostBinding, args: ['class.success',] }],
        percentage: [{ type: HostBinding, args: ['attr.data-percent',] }],
        classValue: [{ type: Input, args: ['class',] }],
        value: [{ type: Input }],
        maximum: [{ type: Input }],
        precision: [{ type: Input }]
    };
    return FuiProgress;
}());
export { FuiProgress };
if (false) {
    /** @type {?} */
    FuiProgress.prototype.transition;
    /** @type {?} */
    FuiProgress.prototype.transitionDuration;
    /** @type {?} */
    FuiProgress.prototype.canCompletelyEmpty;
    /** @type {?} */
    FuiProgress.prototype.hasClasses;
    /** @type {?} */
    FuiProgress.prototype.autoSuccess;
    /** @type {?} */
    FuiProgress.prototype.showProgress;
    /**
     * @type {?}
     * @private
     */
    FuiProgress.prototype._overrideSuccess;
    /**
     * @type {?}
     * @private
     */
    FuiProgress.prototype._value;
    /**
     * @type {?}
     * @private
     */
    FuiProgress.prototype._maximum;
    /**
     * @type {?}
     * @private
     */
    FuiProgress.prototype._precision;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL3Byb2dyZXNzL2NvbXBvbmVudHMvcHJvZ3Jlc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU1RDtJQXVDRTtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUM7UUFDbkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFFbkIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUV6QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDO0lBRUQsc0JBQ1csdUNBQWM7Ozs7UUFEekI7WUFFRSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3JGLENBQUM7OztPQUFBO0lBRUQsc0JBQ1csbUNBQVU7Ozs7UUFEckI7O2dCQUVRLFlBQVksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDOztnQkFFOUQsVUFBVSxHQUFHLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHO1lBRXRELE9BQU8sVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUMsQ0FBQzs7O09BQUE7SUFFRCxzQkFDVyxtQ0FBVTs7Ozs7UUFEckIsVUFDc0IsT0FBZTtZQUNuQyxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDNUQsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7YUFDM0I7WUFDRCxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQy9CLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7YUFDOUI7WUFFRCxJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQztZQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsR0FBRyxDQUFDO1lBQzlCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7SUFJRCxzQkFDVyw4QkFBSzs7OztRQURoQjtZQUVFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDOzs7OztRQUVELFVBQWlCLEtBQWE7OztnQkFFdEIsU0FBUyxHQUFHLENBQUMsS0FBSztZQUV4QixJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQzNCLE9BQU87YUFDUjtZQUVELElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1FBQzFCLENBQUM7OztPQVhBO0lBZUQsc0JBQ1csZ0NBQU87Ozs7UUFEbEI7WUFFRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQzs7Ozs7UUFFRCxVQUFtQixLQUFhOzs7Z0JBRXhCLFNBQVMsR0FBRyxDQUFDLEtBQUs7WUFFeEIsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPO2FBQ1I7WUFFRCxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQztRQUM1QixDQUFDOzs7T0FYQTtJQWVELHNCQUNXLGtDQUFTOzs7O1FBRHBCO1lBRUUsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7Ozs7O1FBRUQsVUFBcUIsS0FBYTs7O2dCQUUxQixTQUFTLEdBQUcsQ0FBQyxLQUFLO1lBRXhCLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDM0IsT0FBTzthQUNSO1lBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELENBQUM7OztPQVhBOztnQkF4SEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsc1hBV1g7NkJBQ1UsNEVBS1Y7aUJBQ0E7Ozs7OzZCQUVFLEtBQUs7cUNBR0wsS0FBSztxQ0FHTCxLQUFLOzZCQUVMLFdBQVcsU0FBQyxVQUFVLGNBQ3RCLFdBQVcsU0FBQyxnQkFBZ0I7OEJBRTVCLEtBQUs7K0JBRUwsS0FBSztpQ0FnQkwsV0FBVyxTQUFDLGVBQWU7NkJBSzNCLFdBQVcsU0FBQyxtQkFBbUI7NkJBUy9CLEtBQUssU0FBQyxPQUFPO3dCQWdCYixLQUFLOzBCQWtCTCxLQUFLOzRCQWtCTCxLQUFLOztJQWVSLGtCQUFDO0NBQUEsQUFwSUQsSUFvSUM7U0EvR1ksV0FBVzs7O0lBQ3RCLGlDQUMwQjs7SUFFMUIseUNBQ2tDOztJQUVsQyx5Q0FDbUM7O0lBQ25DLGlDQUVvQzs7SUFDcEMsa0NBQzRCOztJQUM1QixtQ0FDNkI7Ozs7O0lBQzdCLHVDQUFrQzs7Ozs7SUEwQ2xDLDZCQUF1Qjs7Ozs7SUFrQnZCLCtCQUF5Qjs7Ozs7SUFrQnpCLGlDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmdWktcHJvZ3Jlc3MnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbjxkaXYgY2xhc3M9XCJiYXJcIlxyXG4gICAgW3N0eWxlLndpZHRoLiVdPVwicGVyY2VudGFnZVwiXHJcbiAgICBbc3R5bGUubWluV2lkdGhdPVwiY2FuQ29tcGxldGVseUVtcHR5ID8gMCA6IG51bGxcIlxyXG4gICAgW3N0eWxlLnRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbl09XCJ0cmFuc2l0aW9uXCJcclxuICAgIFtzdHlsZS50cmFuc2l0aW9uRHVyYXRpb24ubXNdPVwidHJhbnNpdGlvbkR1cmF0aW9uXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3NcIiAqbmdJZj1cInNob3dQcm9ncmVzc1wiPnt7IHBlcmNlbnRhZ2UgfX0lPC9kaXY+XHJcbjwvZGl2PlxyXG48ZGl2IGNsYXNzPVwibGFiZWxcIj5cclxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cclxuPC9kaXY+XHJcbmAsXHJcbiAgc3R5bGVzOiBbYFxyXG4uYmFyIHtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDMwMG1zICFpbXBvcnRhbnQ7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcbmBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGdWlQcm9ncmVzcyB7XHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgdHJhbnNpdGlvbjogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyB0cmFuc2l0aW9uRHVyYXRpb246IG51bWJlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgY2FuQ29tcGxldGVseUVtcHR5OiBib29sZWFuO1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MudWknKVxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MucHJvZ3Jlc3MnKVxyXG4gIHB1YmxpYyByZWFkb25seSBoYXNDbGFzc2VzOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIGF1dG9TdWNjZXNzOiBib29sZWFuO1xyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIHNob3dQcm9ncmVzczogYm9vbGVhbjtcclxuICBwcml2YXRlIF9vdmVycmlkZVN1Y2Nlc3M6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy52YWx1ZSA9IDA7XHJcbiAgICB0aGlzLm1heGltdW0gPSAxMDA7XHJcbiAgICB0aGlzLnByZWNpc2lvbiA9IDA7XHJcblxyXG4gICAgdGhpcy5fb3ZlcnJpZGVTdWNjZXNzID0gZmFsc2U7XHJcbiAgICB0aGlzLmF1dG9TdWNjZXNzID0gdHJ1ZTtcclxuICAgIHRoaXMuc2hvd1Byb2dyZXNzID0gdHJ1ZTtcclxuXHJcbiAgICB0aGlzLmhhc0NsYXNzZXMgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5zdWNjZXNzJylcclxuICBwdWJsaWMgZ2V0IHJlYWNoZWRNYXhpbXVtKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX292ZXJyaWRlU3VjY2VzcyB8fCAoKHRoaXMudmFsdWUgPj0gdGhpcy5tYXhpbXVtKSAmJiB0aGlzLmF1dG9TdWNjZXNzKTtcclxuICB9XHJcblxyXG4gIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXBlcmNlbnQnKVxyXG4gIHB1YmxpYyBnZXQgcGVyY2VudGFnZSgpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgYm91bmRlZFZhbHVlID0gTWF0aC5taW4oTWF0aC5tYXgodGhpcy52YWx1ZSwgMCksIHRoaXMubWF4aW11bSk7XHJcblxyXG4gICAgY29uc3QgcGVyY2VudGFnZSA9IChib3VuZGVkVmFsdWUgLyB0aGlzLm1heGltdW0pICogMTAwO1xyXG5cclxuICAgIHJldHVybiBwZXJjZW50YWdlLnRvRml4ZWQodGhpcy5wcmVjaXNpb24pO1xyXG4gIH1cclxuXHJcbiAgQElucHV0KCdjbGFzcycpXHJcbiAgcHVibGljIHNldCBjbGFzc1ZhbHVlKGNsYXNzZXM6IHN0cmluZykge1xyXG4gICAgaWYgKGNsYXNzZXMuaW5jbHVkZXMoJ2F0dGFjaGVkJykgfHwgY2xhc3Nlcy5pbmNsdWRlcygndGlueScpKSB7XHJcbiAgICAgIHRoaXMuc2hvd1Byb2dyZXNzID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoY2xhc3Nlcy5pbmNsdWRlcygnc3VjY2VzcycpKSB7XHJcbiAgICAgIHRoaXMuX292ZXJyaWRlU3VjY2VzcyA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy50cmFuc2l0aW9uID0gJ2Vhc2UnO1xyXG4gICAgdGhpcy50cmFuc2l0aW9uRHVyYXRpb24gPSAzNTA7XHJcbiAgICB0aGlzLmNhbkNvbXBsZXRlbHlFbXB0eSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfdmFsdWU6IG51bWJlcjtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgZ2V0IHZhbHVlKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHZhbHVlKHZhbHVlOiBudW1iZXIpIHtcclxuICAgIC8vIENvbnZlcnQgdmFsdWUgZnJvbSBzdHJpbmcgdG8gbnVtYmVyIHdoZXJlIG5lY2Vzc2FyeS5cclxuICAgIGNvbnN0IGNvbnZlcnRlZCA9ICt2YWx1ZTtcclxuXHJcbiAgICBpZiAoTnVtYmVyLmlzTmFOKGNvbnZlcnRlZCkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX3ZhbHVlID0gY29udmVydGVkO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfbWF4aW11bTogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBnZXQgbWF4aW11bSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX21heGltdW07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IG1heGltdW0odmFsdWU6IG51bWJlcikge1xyXG4gICAgLy8gQ29udmVydCB2YWx1ZSBmcm9tIHN0cmluZyB0byBudW1iZXIgd2hlcmUgbmVjZXNzYXJ5LlxyXG4gICAgY29uc3QgY29udmVydGVkID0gK3ZhbHVlO1xyXG5cclxuICAgIGlmIChOdW1iZXIuaXNOYU4oY29udmVydGVkKSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fbWF4aW11bSA9IGNvbnZlcnRlZDtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgX3ByZWNpc2lvbjogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBnZXQgcHJlY2lzaW9uKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fcHJlY2lzaW9uO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldCBwcmVjaXNpb24odmFsdWU6IG51bWJlcikge1xyXG4gICAgLy8gQ29udmVydCB2YWx1ZSBmcm9tIHN0cmluZyB0byBudW1iZXIgd2hlcmUgbmVjZXNzYXJ5LlxyXG4gICAgY29uc3QgY29udmVydGVkID0gK3ZhbHVlO1xyXG5cclxuICAgIGlmIChOdW1iZXIuaXNOYU4oY29udmVydGVkKSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcHJlY2lzaW9uID0gTWF0aC5taW4oTWF0aC5tYXgoY29udmVydGVkLCAwKSwgMjApO1xyXG4gIH1cclxufVxyXG4iXX0=