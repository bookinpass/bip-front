/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// Used to pass ability to control a modal to a component.
/**
 * @template T, U
 */
var 
// Used to pass ability to control a modal to a component.
/**
 * @template T, U
 */
ModalControls = /** @class */ (function () {
    function ModalControls(approve, deny) {
        this.approve = approve;
        this.deny = deny;
    }
    // Use method here rather than arrow variables to make intellisense show they're methods.
    // Use method here rather than arrow variables to make intellisense show they're methods.
    /**
     * @param {?} result
     * @return {?}
     */
    ModalControls.prototype.approve = 
    // Use method here rather than arrow variables to make intellisense show they're methods.
    /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
    };
    /**
     * @param {?} result
     * @return {?}
     */
    ModalControls.prototype.deny = /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
    };
    return ModalControls;
}());
// Used to pass ability to control a modal to a component.
/**
 * @template T, U
 */
export { ModalControls };
// Injected into custom modal components, to allow control of the modal, and access to a context object.
/**
 * @template T, U, V
 */
var 
// Injected into custom modal components, to allow control of the modal, and access to a context object.
/**
 * @template T, U, V
 */
Modal = /** @class */ (function (_super) {
    tslib_1.__extends(Modal, _super);
    function Modal(controls, context) {
        var _this = 
        // Instances of `ModalControls` are only created in the `FuiModal` constructor,
        // so we take an initialised instance rather than remaking one each time.
        _super.call(this, controls.approve, controls.deny) || this;
        _this.context = context;
        return _this;
    }
    return Modal;
}(ModalControls));
// Injected into custom modal components, to allow control of the modal, and access to a context object.
/**
 * @template T, U, V
 */
export { Modal };
if (false) {
    /** @type {?} */
    Modal.prototype.context;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29udHJvbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZm9tYW50aWMtdWkvIiwic291cmNlcyI6WyJtb2R1bGVzL21vZGFsL2NsYXNzZXMvbW9kYWwtY29udHJvbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSUE7Ozs7OztJQUNFLHVCQUFZLE9BQXVCLEVBQUUsSUFBb0I7UUFDdkQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztJQUVELHlGQUF5Rjs7Ozs7O0lBQ2xGLCtCQUFPOzs7Ozs7SUFBZCxVQUFlLE1BQVM7SUFDeEIsQ0FBQzs7Ozs7SUFFTSw0QkFBSTs7OztJQUFYLFVBQVksTUFBUztJQUNyQixDQUFDO0lBQ0gsb0JBQUM7QUFBRCxDQUFDLEFBWkQsSUFZQzs7Ozs7Ozs7OztBQUdEOzs7Ozs7SUFBNEQsaUNBQW1CO0lBRzdFLGVBQVksUUFBNkIsRUFBRSxPQUFVO1FBQXJEO1FBQ0UsK0VBQStFO1FBQy9FLHlFQUF5RTtRQUN6RSxrQkFBTSxRQUFRLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FHdkM7UUFEQyxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQzs7SUFDekIsQ0FBQztJQUNILFlBQUM7QUFBRCxDQUFDLEFBVkQsQ0FBNEQsYUFBYSxHQVV4RTs7Ozs7Ozs7SUFUQyx3QkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaG9ydGhhbmQgdG8gYXZvaWQgd3JpdGluZyBhcnJvdyB0eXBlcyBldmVyeXdoZXJlLlxyXG5leHBvcnQgdHlwZSBNb2RhbFJlc3VsdDxUPiA9IChyZXN1bHQ6IFQpID0+IHZvaWQ7XHJcblxyXG4vLyBVc2VkIHRvIHBhc3MgYWJpbGl0eSB0byBjb250cm9sIGEgbW9kYWwgdG8gYSBjb21wb25lbnQuXHJcbmV4cG9ydCBjbGFzcyBNb2RhbENvbnRyb2xzPFQsIFU+IHtcclxuICBjb25zdHJ1Y3RvcihhcHByb3ZlOiBNb2RhbFJlc3VsdDxUPiwgZGVueTogTW9kYWxSZXN1bHQ8VT4pIHtcclxuICAgIHRoaXMuYXBwcm92ZSA9IGFwcHJvdmU7XHJcbiAgICB0aGlzLmRlbnkgPSBkZW55O1xyXG4gIH1cclxuXHJcbiAgLy8gVXNlIG1ldGhvZCBoZXJlIHJhdGhlciB0aGFuIGFycm93IHZhcmlhYmxlcyB0byBtYWtlIGludGVsbGlzZW5zZSBzaG93IHRoZXkncmUgbWV0aG9kcy5cclxuICBwdWJsaWMgYXBwcm92ZShyZXN1bHQ6IFQpOiB2b2lkIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkZW55KHJlc3VsdDogVSk6IHZvaWQge1xyXG4gIH1cclxufVxyXG5cclxuLy8gSW5qZWN0ZWQgaW50byBjdXN0b20gbW9kYWwgY29tcG9uZW50cywgdG8gYWxsb3cgY29udHJvbCBvZiB0aGUgbW9kYWwsIGFuZCBhY2Nlc3MgdG8gYSBjb250ZXh0IG9iamVjdC5cclxuZXhwb3J0IGNsYXNzIE1vZGFsPFQsIFUgPSB1bmRlZmluZWQsIFYgPSB1bmRlZmluZWQ+IGV4dGVuZHMgTW9kYWxDb250cm9sczxVLCBWPiB7XHJcbiAgcHVibGljIGNvbnRleHQ6IFQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNvbnRyb2xzOiBNb2RhbENvbnRyb2xzPFUsIFY+LCBjb250ZXh0OiBUKSB7XHJcbiAgICAvLyBJbnN0YW5jZXMgb2YgYE1vZGFsQ29udHJvbHNgIGFyZSBvbmx5IGNyZWF0ZWQgaW4gdGhlIGBGdWlNb2RhbGAgY29uc3RydWN0b3IsXHJcbiAgICAvLyBzbyB3ZSB0YWtlIGFuIGluaXRpYWxpc2VkIGluc3RhbmNlIHJhdGhlciB0aGFuIHJlbWFraW5nIG9uZSBlYWNoIHRpbWUuXHJcbiAgICBzdXBlcihjb250cm9scy5hcHByb3ZlLCBjb250cm9scy5kZW55KTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gIH1cclxufVxyXG4iXX0=