/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Helper class to support method chaining when calling `FuiModalService.open(...)`.
/**
 * @template T, U, V
 */
var 
// Helper class to support method chaining when calling `FuiModalService.open(...)`.
/**
 * @template T, U, V
 */
ActiveModal = /** @class */ (function () {
    function ActiveModal(instance, componentRef) {
        var _this = this;
        this._config = instance;
        this._componentRef = componentRef;
        // Automatically destroy the modal component when it has been dismissed.
        this.component.onDismiss.subscribe((/**
         * @return {?}
         */
        function () { return _this._componentRef.destroy(); }));
    }
    Object.defineProperty(ActiveModal.prototype, "component", {
        // Shorthand for direct access to the `FuiModal` instance.
        get: 
        // Shorthand for direct access to the `FuiModal` instance.
        /**
         * @return {?}
         */
        function () {
            return this._componentRef.instance;
        },
        enumerable: true,
        configurable: true
    });
    // Registers a callback for when `onApprove` is fired.
    // Registers a callback for when `onApprove` is fired.
    /**
     * @param {?} callback
     * @return {?}
     */
    ActiveModal.prototype.onApprove = 
    // Registers a callback for when `onApprove` is fired.
    /**
     * @param {?} callback
     * @return {?}
     */
    function (callback) {
        this.component.onApprove.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) { return callback(res); }));
        return this;
    };
    // Registers a callback for when `onDeny` is fired.
    // Registers a callback for when `onDeny` is fired.
    /**
     * @param {?} callback
     * @return {?}
     */
    ActiveModal.prototype.onDeny = 
    // Registers a callback for when `onDeny` is fired.
    /**
     * @param {?} callback
     * @return {?}
     */
    function (callback) {
        this.component.onDeny.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) { return callback(res); }));
        return this;
    };
    // Fires the approve event of the modal manually.
    // Fires the approve event of the modal manually.
    /**
     * @param {?} result
     * @return {?}
     */
    ActiveModal.prototype.approve = 
    // Fires the approve event of the modal manually.
    /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
        this.component.approve(result);
    };
    // Fires the deny event of the modal manually.
    // Fires the deny event of the modal manually.
    /**
     * @param {?} result
     * @return {?}
     */
    ActiveModal.prototype.deny = 
    // Fires the deny event of the modal manually.
    /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
        this.component.deny(result);
    };
    // Removes the modal component instantly, without transitions or firing any events.
    // Removes the modal component instantly, without transitions or firing any events.
    /**
     * @return {?}
     */
    ActiveModal.prototype.destroy = 
    // Removes the modal component instantly, without transitions or firing any events.
    /**
     * @return {?}
     */
    function () {
        this._componentRef.destroy();
    };
    return ActiveModal;
}());
// Helper class to support method chaining when calling `FuiModalService.open(...)`.
/**
 * @template T, U, V
 */
export { ActiveModal };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActiveModal.prototype._config;
    /**
     * @type {?}
     * @private
     */
    ActiveModal.prototype._componentRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlLW1vZGFsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy9tb2RhbC9jbGFzc2VzL2FjdGl2ZS1tb2RhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUtBOzs7Ozs7SUFJRSxxQkFBWSxRQUE4QixFQUFFLFlBQTBDO1FBQXRGLGlCQU1DO1FBTEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUM7UUFDeEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7UUFFbEMsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLFNBQVM7OztRQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxFQUE1QixDQUE0QixFQUFDLENBQUM7SUFDekUsQ0FBQztJQUdELHNCQUFXLGtDQUFTO1FBRHBCLDBEQUEwRDs7Ozs7O1FBQzFEO1lBQ0UsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTtJQUVELHNEQUFzRDs7Ozs7O0lBQy9DLCtCQUFTOzs7Ozs7SUFBaEIsVUFBaUIsUUFBNkI7UUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsR0FBTSxJQUFLLE9BQUEsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFiLENBQWEsRUFBQyxDQUFDO1FBQzlELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG1EQUFtRDs7Ozs7O0lBQzVDLDRCQUFNOzs7Ozs7SUFBYixVQUFjLFFBQTZCO1FBQ3pDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFNBQVM7Ozs7UUFBQyxVQUFDLEdBQU0sSUFBSyxPQUFBLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBYixDQUFhLEVBQUMsQ0FBQztRQUMzRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxpREFBaUQ7Ozs7OztJQUMxQyw2QkFBTzs7Ozs7O0lBQWQsVUFBZSxNQUFTO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCw4Q0FBOEM7Ozs7OztJQUN2QywwQkFBSTs7Ozs7O0lBQVgsVUFBWSxNQUFTO1FBQ25CLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRCxtRkFBbUY7Ozs7O0lBQzVFLDZCQUFPOzs7OztJQUFkO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBQ0gsa0JBQUM7QUFBRCxDQUFDLEFBM0NELElBMkNDOzs7Ozs7Ozs7OztJQTFDQyw4QkFBc0M7Ozs7O0lBQ3RDLG9DQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50UmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtNb2RhbENvbmZpZ30gZnJvbSAnLi9tb2RhbC1jb25maWcnO1xyXG5pbXBvcnQge0Z1aU1vZGFsfSBmcm9tICcuLi9jb21wb25lbnRzL21vZGFsJztcclxuXHJcbi8vIEhlbHBlciBjbGFzcyB0byBzdXBwb3J0IG1ldGhvZCBjaGFpbmluZyB3aGVuIGNhbGxpbmcgYEZ1aU1vZGFsU2VydmljZS5vcGVuKC4uLilgLlxyXG5leHBvcnQgY2xhc3MgQWN0aXZlTW9kYWw8VCwgVSwgVj4ge1xyXG4gIHByaXZhdGUgX2NvbmZpZzogTW9kYWxDb25maWc8VCwgVSwgVj47XHJcbiAgcHJpdmF0ZSBfY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8RnVpTW9kYWw8VSwgVj4+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihpbnN0YW5jZTogTW9kYWxDb25maWc8VCwgVSwgVj4sIGNvbXBvbmVudFJlZjogQ29tcG9uZW50UmVmPEZ1aU1vZGFsPFUsIFY+Pikge1xyXG4gICAgdGhpcy5fY29uZmlnID0gaW5zdGFuY2U7XHJcbiAgICB0aGlzLl9jb21wb25lbnRSZWYgPSBjb21wb25lbnRSZWY7XHJcblxyXG4gICAgLy8gQXV0b21hdGljYWxseSBkZXN0cm95IHRoZSBtb2RhbCBjb21wb25lbnQgd2hlbiBpdCBoYXMgYmVlbiBkaXNtaXNzZWQuXHJcbiAgICB0aGlzLmNvbXBvbmVudC5vbkRpc21pc3Muc3Vic2NyaWJlKCgpID0+IHRoaXMuX2NvbXBvbmVudFJlZi5kZXN0cm95KCkpO1xyXG4gIH1cclxuXHJcbiAgLy8gU2hvcnRoYW5kIGZvciBkaXJlY3QgYWNjZXNzIHRvIHRoZSBgRnVpTW9kYWxgIGluc3RhbmNlLlxyXG4gIHB1YmxpYyBnZXQgY29tcG9uZW50KCk6IEZ1aU1vZGFsPFUsIFY+IHtcclxuICAgIHJldHVybiB0aGlzLl9jb21wb25lbnRSZWYuaW5zdGFuY2U7XHJcbiAgfVxyXG5cclxuICAvLyBSZWdpc3RlcnMgYSBjYWxsYmFjayBmb3Igd2hlbiBgb25BcHByb3ZlYCBpcyBmaXJlZC5cclxuICBwdWJsaWMgb25BcHByb3ZlKGNhbGxiYWNrOiAocmVzdWx0OiBVKSA9PiB2b2lkKTogQWN0aXZlTW9kYWw8VCwgVSwgVj4ge1xyXG4gICAgdGhpcy5jb21wb25lbnQub25BcHByb3ZlLnN1YnNjcmliZSgocmVzOiBVKSA9PiBjYWxsYmFjayhyZXMpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgLy8gUmVnaXN0ZXJzIGEgY2FsbGJhY2sgZm9yIHdoZW4gYG9uRGVueWAgaXMgZmlyZWQuXHJcbiAgcHVibGljIG9uRGVueShjYWxsYmFjazogKHJlc3VsdDogVikgPT4gdm9pZCk6IEFjdGl2ZU1vZGFsPFQsIFUsIFY+IHtcclxuICAgIHRoaXMuY29tcG9uZW50Lm9uRGVueS5zdWJzY3JpYmUoKHJlczogVikgPT4gY2FsbGJhY2socmVzKSk7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8vIEZpcmVzIHRoZSBhcHByb3ZlIGV2ZW50IG9mIHRoZSBtb2RhbCBtYW51YWxseS5cclxuICBwdWJsaWMgYXBwcm92ZShyZXN1bHQ6IFUpOiB2b2lkIHtcclxuICAgIHRoaXMuY29tcG9uZW50LmFwcHJvdmUocmVzdWx0KTtcclxuICB9XHJcblxyXG4gIC8vIEZpcmVzIHRoZSBkZW55IGV2ZW50IG9mIHRoZSBtb2RhbCBtYW51YWxseS5cclxuICBwdWJsaWMgZGVueShyZXN1bHQ6IFYpOiB2b2lkIHtcclxuICAgIHRoaXMuY29tcG9uZW50LmRlbnkocmVzdWx0KTtcclxuICB9XHJcblxyXG4gIC8vIFJlbW92ZXMgdGhlIG1vZGFsIGNvbXBvbmVudCBpbnN0YW50bHksIHdpdGhvdXQgdHJhbnNpdGlvbnMgb3IgZmlyaW5nIGFueSBldmVudHMuXHJcbiAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLl9jb21wb25lbnRSZWYuZGVzdHJveSgpO1xyXG4gIH1cclxufVxyXG4iXX0=