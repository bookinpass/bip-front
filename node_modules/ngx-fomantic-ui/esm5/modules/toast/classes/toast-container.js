/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
var FuiToastContainer = /** @class */ (function () {
    function FuiToastContainer() {
        this.toastData = [];
        this.timeoutIds = {};
        this.maxId = 0;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    FuiToastContainer.prototype.addToast = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        data.id = data.id || ++this.maxId;
        data.showProgress = data.showProgress || 'bottom';
        data.class = data.class || 'info';
        data.displayTime = data.displayTime || 5000;
        this.toastData.unshift(data);
        this.timeoutIds[data.id] = window.setTimeout((/**
         * @return {?}
         */
        function () { return _this.closeToast(data.id); }), data.displayTime);
    };
    /**
     * @param {?} toastId
     * @return {?}
     */
    FuiToastContainer.prototype.closeToast = /**
     * @param {?} toastId
     * @return {?}
     */
    function (toastId) {
        /** @type {?} */
        var x = this.toastData.findIndex((/**
         * @param {?} t
         * @return {?}
         */
        function (t) { return t.id === toastId; }));
        if (x > -1) {
            /** @type {?} */
            var id = this.toastData[x].id;
            window.clearTimeout(this.timeoutIds[id]);
            delete this.timeoutIds[id];
            this.toastData.splice(x, 1);
        }
    };
    FuiToastContainer.decorators = [
        { type: Component, args: [{
                    selector: 'fui-toast-container',
                    exportAs: 'fuiToastContainer',
                    template: "\n    <fui-toast *ngFor=\"let toast of toastData\"\n               [id]=\"toast.id\"\n               [title]=\"toast.title\"\n               [message]=\"toast.message\"\n               [class]=\"toast.class\"\n               [showProgress]=\"toast.showProgress\"\n               [displayTime]=\"toast.displayTime\"\n               [showIcon]=\"toast.showIcon\"\n               [closeIcon]=\"toast.closeIcon\"\n               [progressUp]=\"toast.progressUp\"\n               [className]=\"toast.className\"\n               (close)=\"closeToast(toast.id)\"></fui-toast>"
                }] }
    ];
    return FuiToastContainer;
}());
export { FuiToastContainer };
if (false) {
    /** @type {?} */
    FuiToastContainer.prototype.toastData;
    /** @type {?} */
    FuiToastContainer.prototype.timeoutIds;
    /**
     * @type {?}
     * @private
     */
    FuiToastContainer.prototype.maxId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QtY29udGFpbmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy90b2FzdC9jbGFzc2VzL3RvYXN0LWNvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUd4QztJQUFBO1FBa0JFLGNBQVMsR0FBMEIsRUFBRSxDQUFDO1FBQ3RDLGVBQVUsR0FBa0MsRUFBRSxDQUFDO1FBQ3ZDLFVBQUssR0FBRyxDQUFDLENBQUM7SUFzQnBCLENBQUM7Ozs7O0lBcEJDLG9DQUFROzs7O0lBQVIsVUFBUyxJQUFvQjtRQUE3QixpQkFRQztRQVBDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxJQUFJLFFBQVEsQ0FBQztRQUNsRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUM7UUFFNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLFVBQVU7OztRQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBeEIsQ0FBd0IsR0FBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakcsQ0FBQzs7Ozs7SUFFRCxzQ0FBVTs7OztJQUFWLFVBQVcsT0FBZTs7WUFDbEIsQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEVBQUUsS0FBSyxPQUFPLEVBQWhCLENBQWdCLEVBQUM7UUFFekQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7O2dCQUNKLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDL0IsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDekMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM3QjtJQUNILENBQUM7O2dCQXpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLDBqQkFZK0M7aUJBQzFEOztJQTBCRCx3QkFBQztDQUFBLEFBMUNELElBMENDO1NBekJZLGlCQUFpQjs7O0lBQzVCLHNDQUFzQzs7SUFDdEMsdUNBQStDOzs7OztJQUMvQyxrQ0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7RnVpVG9hc3RDb25maWd9IGZyb20gJy4vdG9hc3QtY29uZmlnJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZnVpLXRvYXN0LWNvbnRhaW5lcicsXHJcbiAgZXhwb3J0QXM6ICdmdWlUb2FzdENvbnRhaW5lcicsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxmdWktdG9hc3QgKm5nRm9yPVwibGV0IHRvYXN0IG9mIHRvYXN0RGF0YVwiXHJcbiAgICAgICAgICAgICAgIFtpZF09XCJ0b2FzdC5pZFwiXHJcbiAgICAgICAgICAgICAgIFt0aXRsZV09XCJ0b2FzdC50aXRsZVwiXHJcbiAgICAgICAgICAgICAgIFttZXNzYWdlXT1cInRvYXN0Lm1lc3NhZ2VcIlxyXG4gICAgICAgICAgICAgICBbY2xhc3NdPVwidG9hc3QuY2xhc3NcIlxyXG4gICAgICAgICAgICAgICBbc2hvd1Byb2dyZXNzXT1cInRvYXN0LnNob3dQcm9ncmVzc1wiXHJcbiAgICAgICAgICAgICAgIFtkaXNwbGF5VGltZV09XCJ0b2FzdC5kaXNwbGF5VGltZVwiXHJcbiAgICAgICAgICAgICAgIFtzaG93SWNvbl09XCJ0b2FzdC5zaG93SWNvblwiXHJcbiAgICAgICAgICAgICAgIFtjbG9zZUljb25dPVwidG9hc3QuY2xvc2VJY29uXCJcclxuICAgICAgICAgICAgICAgW3Byb2dyZXNzVXBdPVwidG9hc3QucHJvZ3Jlc3NVcFwiXHJcbiAgICAgICAgICAgICAgIFtjbGFzc05hbWVdPVwidG9hc3QuY2xhc3NOYW1lXCJcclxuICAgICAgICAgICAgICAgKGNsb3NlKT1cImNsb3NlVG9hc3QodG9hc3QuaWQpXCI+PC9mdWktdG9hc3Q+YFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRnVpVG9hc3RDb250YWluZXIge1xyXG4gIHRvYXN0RGF0YTogQXJyYXk8RnVpVG9hc3RDb25maWc+ID0gW107XHJcbiAgdGltZW91dElkczogeyBbdG9hc3RJZDogbnVtYmVyXTogbnVtYmVyIH0gPSB7fTtcclxuICBwcml2YXRlIG1heElkID0gMDtcclxuXHJcbiAgYWRkVG9hc3QoZGF0YTogRnVpVG9hc3RDb25maWcpIHtcclxuICAgIGRhdGEuaWQgPSBkYXRhLmlkIHx8ICsrdGhpcy5tYXhJZDtcclxuICAgIGRhdGEuc2hvd1Byb2dyZXNzID0gZGF0YS5zaG93UHJvZ3Jlc3MgfHwgJ2JvdHRvbSc7XHJcbiAgICBkYXRhLmNsYXNzID0gZGF0YS5jbGFzcyB8fCAnaW5mbyc7XHJcbiAgICBkYXRhLmRpc3BsYXlUaW1lID0gZGF0YS5kaXNwbGF5VGltZSB8fCA1MDAwO1xyXG5cclxuICAgIHRoaXMudG9hc3REYXRhLnVuc2hpZnQoZGF0YSk7XHJcbiAgICB0aGlzLnRpbWVvdXRJZHNbZGF0YS5pZF0gPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB0aGlzLmNsb3NlVG9hc3QoZGF0YS5pZCksIGRhdGEuZGlzcGxheVRpbWUpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2VUb2FzdCh0b2FzdElkOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IHggPSB0aGlzLnRvYXN0RGF0YS5maW5kSW5kZXgodCA9PiB0LmlkID09PSB0b2FzdElkKTtcclxuXHJcbiAgICBpZiAoeCA+IC0xKSB7XHJcbiAgICAgIGNvbnN0IGlkID0gdGhpcy50b2FzdERhdGFbeF0uaWQ7XHJcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWRzW2lkXSk7XHJcbiAgICAgIGRlbGV0ZSB0aGlzLnRpbWVvdXRJZHNbaWRdO1xyXG4gICAgICB0aGlzLnRvYXN0RGF0YS5zcGxpY2UoeCwgMSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==