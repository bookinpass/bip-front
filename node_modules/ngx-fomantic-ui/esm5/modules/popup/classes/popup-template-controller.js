/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { TemplateRef } from '@angular/core';
import { FuiPopupController } from './popup-controller';
import { PopupConfig } from './popup-config';
/** @type {?} */
var templateRef = TemplateRef;
/**
 * @record
 * @template T
 */
export function ITemplatePopupContext() { }
if (false) {
    /** @type {?|undefined} */
    ITemplatePopupContext.prototype.context;
}
/**
 * @record
 * @template T
 */
export function ITemplatePopupConfig() { }
if (false) {
    /** @type {?|undefined} */
    ITemplatePopupConfig.prototype.template;
    /** @type {?|undefined} */
    ITemplatePopupConfig.prototype.context;
}
/**
 * @template T
 */
var /**
 * @template T
 */
TemplatePopupConfig = /** @class */ (function (_super) {
    tslib_1.__extends(TemplatePopupConfig, _super);
    function TemplatePopupConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TemplatePopupConfig;
}(PopupConfig));
/**
 * @template T
 */
export { TemplatePopupConfig };
if (false) {
    /** @type {?} */
    TemplatePopupConfig.prototype.template;
    /** @type {?} */
    TemplatePopupConfig.prototype.context;
}
/**
 * @template T
 */
var /**
 * @template T
 */
FuiPopupTemplateController = /** @class */ (function (_super) {
    tslib_1.__extends(FuiPopupTemplateController, _super);
    function FuiPopupTemplateController(renderer, element, componentFactory, config) {
        return _super.call(this, renderer, element, componentFactory, config) || this;
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    FuiPopupTemplateController.prototype.configure = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        _super.prototype.configure.call(this, config);
        if (config) {
            this.template = config.template;
            this.context = config.context;
        }
    };
    /**
     * @return {?}
     */
    FuiPopupTemplateController.prototype.open = /**
     * @return {?}
     */
    function () {
        // If there is a template, inject it into the view.
        if (this.template) {
            this.popup.templateSibling.clear();
            this._componentFactory.createView(this.popup.templateSibling, this.template, {
                $implicit: this.popup,
                context: this.context
            });
        }
        _super.prototype.open.call(this);
    };
    return FuiPopupTemplateController;
}(FuiPopupController));
/**
 * @template T
 */
export { FuiPopupTemplateController };
if (false) {
    /** @type {?} */
    FuiPopupTemplateController.prototype.template;
    /** @type {?} */
    FuiPopupTemplateController.prototype.context;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtdGVtcGxhdGUtY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mb21hbnRpYy11aS8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvcG9wdXAvY2xhc3Nlcy9wb3B1cC10ZW1wbGF0ZS1jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUF3QixXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFTLGtCQUFrQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFOUQsT0FBTyxFQUFlLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDOztJQUVuRCxXQUFXLEdBQUcsV0FBVzs7Ozs7QUFFL0IsMkNBRUM7OztJQURDLHdDQUFZOzs7Ozs7QUFHZCwwQ0FHQzs7O0lBRkMsd0NBQWlEOztJQUNqRCx1Q0FBWTs7Ozs7QUFHZDs7OztJQUE0QywrQ0FBVztJQUF2RDs7SUFHQSxDQUFDO0lBQUQsMEJBQUM7QUFBRCxDQUFDLEFBSEQsQ0FBNEMsV0FBVyxHQUd0RDs7Ozs7OztJQUZDLHVDQUF3RDs7SUFDeEQsc0NBQW1COzs7OztBQUdyQjs7OztJQUFtRCxzREFBa0I7SUFJbkUsb0NBQVksUUFBbUIsRUFDbkIsT0FBbUIsRUFDbkIsZ0JBQXFDLEVBQ3JDLE1BQW1CO2VBRTdCLGtCQUFNLFFBQVEsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDO0lBQ3BELENBQUM7Ozs7O0lBRU0sOENBQVM7Ozs7SUFBaEIsVUFBaUIsTUFBZ0M7UUFDL0MsaUJBQU0sU0FBUyxZQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXhCLElBQUksTUFBTSxFQUFFO1lBQ1YsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1lBQ2hDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztTQUMvQjtJQUNILENBQUM7Ozs7SUFFTSx5Q0FBSTs7O0lBQVg7UUFDRSxtREFBbUQ7UUFDbkQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBRW5DLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDM0UsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLO2dCQUNyQixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87YUFDdEIsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxpQkFBTSxJQUFJLFdBQUUsQ0FBQztJQUNmLENBQUM7SUFDSCxpQ0FBQztBQUFELENBQUMsQUFsQ0QsQ0FBbUQsa0JBQWtCLEdBa0NwRTs7Ozs7OztJQWpDQyw4Q0FBd0Q7O0lBQ3hELDZDQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RWxlbWVudFJlZiwgUmVuZGVyZXIyLCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7SVBvcHVwLCBGdWlQb3B1cENvbnRyb2xsZXJ9IGZyb20gJy4vcG9wdXAtY29udHJvbGxlcic7XHJcbmltcG9ydCB7SUltcGxpY2l0Q29udGV4dCwgRnVpQ29tcG9uZW50RmFjdG9yeX0gZnJvbSAnLi4vLi4vLi4vbWlzYy91dGlsL2ludGVybmFsJztcclxuaW1wb3J0IHtJUG9wdXBDb25maWcsIFBvcHVwQ29uZmlnfSBmcm9tICcuL3BvcHVwLWNvbmZpZyc7XHJcblxyXG5jb25zdCB0ZW1wbGF0ZVJlZiA9IFRlbXBsYXRlUmVmO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJVGVtcGxhdGVQb3B1cENvbnRleHQ8VD4gZXh0ZW5kcyBJSW1wbGljaXRDb250ZXh0PElQb3B1cD4ge1xyXG4gIGNvbnRleHQ/OiBUO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElUZW1wbGF0ZVBvcHVwQ29uZmlnPFQ+IGV4dGVuZHMgSVBvcHVwQ29uZmlnIHtcclxuICB0ZW1wbGF0ZT86IFRlbXBsYXRlUmVmPElUZW1wbGF0ZVBvcHVwQ29udGV4dDxUPj47XHJcbiAgY29udGV4dD86IFQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUZW1wbGF0ZVBvcHVwQ29uZmlnPFQ+IGV4dGVuZHMgUG9wdXBDb25maWcge1xyXG4gIHB1YmxpYyB0ZW1wbGF0ZT86IFRlbXBsYXRlUmVmPElUZW1wbGF0ZVBvcHVwQ29udGV4dDxUPj47XHJcbiAgcHVibGljIGNvbnRleHQ/OiBUO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRnVpUG9wdXBUZW1wbGF0ZUNvbnRyb2xsZXI8VD4gZXh0ZW5kcyBGdWlQb3B1cENvbnRyb2xsZXIge1xyXG4gIHB1YmxpYyB0ZW1wbGF0ZT86IFRlbXBsYXRlUmVmPElUZW1wbGF0ZVBvcHVwQ29udGV4dDxUPj47XHJcbiAgcHVibGljIGNvbnRleHQ/OiBUO1xyXG5cclxuICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLFxyXG4gICAgICAgICAgICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgY29tcG9uZW50RmFjdG9yeTogRnVpQ29tcG9uZW50RmFjdG9yeSxcclxuICAgICAgICAgICAgICBjb25maWc6IFBvcHVwQ29uZmlnKSB7XHJcblxyXG4gICAgc3VwZXIocmVuZGVyZXIsIGVsZW1lbnQsIGNvbXBvbmVudEZhY3RvcnksIGNvbmZpZyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY29uZmlndXJlKGNvbmZpZz86IElUZW1wbGF0ZVBvcHVwQ29uZmlnPFQ+KTogdm9pZCB7XHJcbiAgICBzdXBlci5jb25maWd1cmUoY29uZmlnKTtcclxuXHJcbiAgICBpZiAoY29uZmlnKSB7XHJcbiAgICAgIHRoaXMudGVtcGxhdGUgPSBjb25maWcudGVtcGxhdGU7XHJcbiAgICAgIHRoaXMuY29udGV4dCA9IGNvbmZpZy5jb250ZXh0O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIG9wZW4oKTogdm9pZCB7XHJcbiAgICAvLyBJZiB0aGVyZSBpcyBhIHRlbXBsYXRlLCBpbmplY3QgaXQgaW50byB0aGUgdmlldy5cclxuICAgIGlmICh0aGlzLnRlbXBsYXRlKSB7XHJcbiAgICAgIHRoaXMucG9wdXAudGVtcGxhdGVTaWJsaW5nLmNsZWFyKCk7XHJcblxyXG4gICAgICB0aGlzLl9jb21wb25lbnRGYWN0b3J5LmNyZWF0ZVZpZXcodGhpcy5wb3B1cC50ZW1wbGF0ZVNpYmxpbmcsIHRoaXMudGVtcGxhdGUsIHtcclxuICAgICAgICAkaW1wbGljaXQ6IHRoaXMucG9wdXAsXHJcbiAgICAgICAgY29udGV4dDogdGhpcy5jb250ZXh0XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn1cclxuIl19