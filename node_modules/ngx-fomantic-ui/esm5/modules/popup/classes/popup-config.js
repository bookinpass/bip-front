/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PositioningPlacement } from '../../../misc/util/internal';
/** @type {?} */
export var PopupTrigger = {
    Hover: (/** @type {?} */ ('hover')),
    Click: (/** @type {?} */ ('click')),
    OutsideClick: (/** @type {?} */ ('outsideClick')),
    Focus: (/** @type {?} */ ('focus')),
    Manual: (/** @type {?} */ ('manual'))
};
/**
 * @record
 */
export function IPopupConfig() { }
if (false) {
    /** @type {?|undefined} */
    IPopupConfig.prototype.header;
    /** @type {?|undefined} */
    IPopupConfig.prototype.text;
    /** @type {?|undefined} */
    IPopupConfig.prototype.placement;
    /** @type {?|undefined} */
    IPopupConfig.prototype.trigger;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isInverted;
    /** @type {?|undefined} */
    IPopupConfig.prototype.delay;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isBasic;
    /** @type {?|undefined} */
    IPopupConfig.prototype.transition;
    /** @type {?|undefined} */
    IPopupConfig.prototype.transitionDuration;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isFlowing;
    /** @type {?|undefined} */
    IPopupConfig.prototype.isInline;
}
var PopupConfig = /** @class */ (function () {
    function PopupConfig(defaults) {
        if (defaults === void 0) { defaults = {}; }
        this.placement = PositioningPlacement.TopLeft;
        this.trigger = PopupTrigger.Hover;
        this.isInverted = false;
        this.delay = 0;
        this.isBasic = false;
        this.transition = 'scale';
        this.transitionDuration = 200;
        this.isFlowing = false;
        this.isInline = false;
        Object.assign(this, defaults);
    }
    return PopupConfig;
}());
export { PopupConfig };
if (false) {
    /** @type {?} */
    PopupConfig.prototype.header;
    /** @type {?} */
    PopupConfig.prototype.text;
    /** @type {?} */
    PopupConfig.prototype.placement;
    /** @type {?} */
    PopupConfig.prototype.trigger;
    /** @type {?} */
    PopupConfig.prototype.isInverted;
    /** @type {?} */
    PopupConfig.prototype.delay;
    /** @type {?} */
    PopupConfig.prototype.isBasic;
    /** @type {?} */
    PopupConfig.prototype.transition;
    /** @type {?} */
    PopupConfig.prototype.size;
    /** @type {?} */
    PopupConfig.prototype.width;
    /** @type {?} */
    PopupConfig.prototype.transitionDuration;
    /** @type {?} */
    PopupConfig.prototype.isFlowing;
    /** @type {?} */
    PopupConfig.prototype.isInline;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtY29uZmlnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy9wb3B1cC9jbGFzc2VzL3BvcHVwLWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sNkJBQTZCLENBQUM7O0FBTWpFLE1BQU0sS0FBTyxZQUFZLEdBQUc7SUFDMUIsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsWUFBWSxFQUFFLG1CQUFBLGNBQWMsRUFBZ0I7SUFDNUMsS0FBSyxFQUFFLG1CQUFBLE9BQU8sRUFBZ0I7SUFDOUIsTUFBTSxFQUFFLG1CQUFBLFFBQVEsRUFBZ0I7Q0FDakM7Ozs7QUFFRCxrQ0FZQzs7O0lBWEMsOEJBQWdCOztJQUNoQiw0QkFBYzs7SUFDZCxpQ0FBaUM7O0lBQ2pDLCtCQUF1Qjs7SUFDdkIsa0NBQXFCOztJQUNyQiw2QkFBZTs7SUFDZiwrQkFBa0I7O0lBQ2xCLGtDQUFvQjs7SUFDcEIsMENBQTRCOztJQUM1QixpQ0FBb0I7O0lBQ3BCLGdDQUFtQjs7QUFHckI7SUFlRSxxQkFBWSxRQUEyQjtRQUEzQix5QkFBQSxFQUFBLGFBQTJCO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsT0FBTyxDQUFDO1FBQzlDLElBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUNsQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDO1FBQzFCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLENBQUM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxBQTNCRCxJQTJCQzs7OztJQTFCQyw2QkFBdUI7O0lBQ3ZCLDJCQUFxQjs7SUFDckIsZ0NBQXVDOztJQUN2Qyw4QkFBNkI7O0lBQzdCLGlDQUEyQjs7SUFDM0IsNEJBQXFCOztJQUNyQiw4QkFBd0I7O0lBQ3hCLGlDQUEwQjs7SUFDMUIsMkJBQXVCOztJQUN2Qiw0QkFBeUI7O0lBQ3pCLHlDQUFrQzs7SUFDbEMsZ0NBQTBCOztJQUMxQiwrQkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1Bvc2l0aW9uaW5nUGxhY2VtZW50fSBmcm9tICcuLi8uLi8uLi9taXNjL3V0aWwvaW50ZXJuYWwnO1xyXG5cclxuZXhwb3J0IHR5cGUgUG9wdXBUcmlnZ2VyID0gJ2hvdmVyJyB8ICdjbGljaycgfCAnb3V0c2lkZUNsaWNrJyB8ICdmb2N1cycgfCAnbWFudWFsJztcclxuZXhwb3J0IHR5cGUgUG9wdXBTaXplID0gJ21pbmknIHwgJ3RpbnknIHwgJ3NtYWxsJyB8ICdsYXJnZScgfCAnaHVnZSc7XHJcbmV4cG9ydCB0eXBlIFBvcHVwV2lkdGggPSAnd2lkZScgfCAndmVyeSB3aWRlJyB8ICdmbG93aW5nJztcclxuXHJcbmV4cG9ydCBjb25zdCBQb3B1cFRyaWdnZXIgPSB7XHJcbiAgSG92ZXI6ICdob3ZlcicgYXMgUG9wdXBUcmlnZ2VyLFxyXG4gIENsaWNrOiAnY2xpY2snIGFzIFBvcHVwVHJpZ2dlcixcclxuICBPdXRzaWRlQ2xpY2s6ICdvdXRzaWRlQ2xpY2snIGFzIFBvcHVwVHJpZ2dlcixcclxuICBGb2N1czogJ2ZvY3VzJyBhcyBQb3B1cFRyaWdnZXIsXHJcbiAgTWFudWFsOiAnbWFudWFsJyBhcyBQb3B1cFRyaWdnZXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVBvcHVwQ29uZmlnIHtcclxuICBoZWFkZXI/OiBzdHJpbmc7XHJcbiAgdGV4dD86IHN0cmluZztcclxuICBwbGFjZW1lbnQ/OiBQb3NpdGlvbmluZ1BsYWNlbWVudDtcclxuICB0cmlnZ2VyPzogUG9wdXBUcmlnZ2VyO1xyXG4gIGlzSW52ZXJ0ZWQ/OiBib29sZWFuO1xyXG4gIGRlbGF5PzogbnVtYmVyO1xyXG4gIGlzQmFzaWM/OiBib29sZWFuO1xyXG4gIHRyYW5zaXRpb24/OiBzdHJpbmc7XHJcbiAgdHJhbnNpdGlvbkR1cmF0aW9uPzogbnVtYmVyO1xyXG4gIGlzRmxvd2luZz86IGJvb2xlYW47XHJcbiAgaXNJbmxpbmU/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBDb25maWcgaW1wbGVtZW50cyBJUG9wdXBDb25maWcge1xyXG4gIHB1YmxpYyBoZWFkZXI/OiBzdHJpbmc7XHJcbiAgcHVibGljIHRleHQ/OiBzdHJpbmc7XHJcbiAgcHVibGljIHBsYWNlbWVudDogUG9zaXRpb25pbmdQbGFjZW1lbnQ7XHJcbiAgcHVibGljIHRyaWdnZXI6IFBvcHVwVHJpZ2dlcjtcclxuICBwdWJsaWMgaXNJbnZlcnRlZDogYm9vbGVhbjtcclxuICBwdWJsaWMgZGVsYXk6IG51bWJlcjtcclxuICBwdWJsaWMgaXNCYXNpYzogYm9vbGVhbjtcclxuICBwdWJsaWMgdHJhbnNpdGlvbjogc3RyaW5nO1xyXG4gIHB1YmxpYyBzaXplOiBQb3B1cFNpemU7XHJcbiAgcHVibGljIHdpZHRoOiBQb3B1cFdpZHRoO1xyXG4gIHB1YmxpYyB0cmFuc2l0aW9uRHVyYXRpb246IG51bWJlcjtcclxuICBwdWJsaWMgaXNGbG93aW5nOiBib29sZWFuO1xyXG4gIHB1YmxpYyBpc0lubGluZTogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoZGVmYXVsdHM6IElQb3B1cENvbmZpZyA9IHt9KSB7XHJcbiAgICB0aGlzLnBsYWNlbWVudCA9IFBvc2l0aW9uaW5nUGxhY2VtZW50LlRvcExlZnQ7XHJcbiAgICB0aGlzLnRyaWdnZXIgPSBQb3B1cFRyaWdnZXIuSG92ZXI7XHJcbiAgICB0aGlzLmlzSW52ZXJ0ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuZGVsYXkgPSAwO1xyXG4gICAgdGhpcy5pc0Jhc2ljID0gZmFsc2U7XHJcbiAgICB0aGlzLnRyYW5zaXRpb24gPSAnc2NhbGUnO1xyXG4gICAgdGhpcy50cmFuc2l0aW9uRHVyYXRpb24gPSAyMDA7XHJcbiAgICB0aGlzLmlzRmxvd2luZyA9IGZhbHNlO1xyXG4gICAgdGhpcy5pc0lubGluZSA9IGZhbHNlO1xyXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBkZWZhdWx0cyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==