/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter } from '@angular/core';
/** @type {?} */
export var SidebarTransition = {
    Overlay: (/** @type {?} */ ('overlay')),
    Push: (/** @type {?} */ ('push')),
    ScaleDown: (/** @type {?} */ ('scale down')),
    Uncover: (/** @type {?} */ ('uncover')),
    SlideAlong: (/** @type {?} */ ('slide along')),
    SlideOut: (/** @type {?} */ ('slide out'))
};
/** @type {?} */
export var SidebarDirection = {
    Left: (/** @type {?} */ ('left')),
    Right: (/** @type {?} */ ('right')),
    Top: (/** @type {?} */ ('top')),
    Bottom: (/** @type {?} */ ('bottom'))
};
var SidebarService = /** @class */ (function () {
    function SidebarService(isVisible) {
        if (isVisible === void 0) { isVisible = false; }
        this.isVisible = isVisible;
        this.isAnimating = false;
        this.wasJustOpened = false;
        this.isVisibleChange = new EventEmitter();
        this.widthChange = new EventEmitter();
        this.heightChange = new EventEmitter();
        this.width = 260;
        this.height = 0;
        this.transition = SidebarTransition.Uncover;
    }
    Object.defineProperty(SidebarService.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.direction === SidebarDirection.Left) {
                return this._width;
            }
            if (this.direction === SidebarDirection.Right) {
                return -this._width;
            }
            return 0;
        },
        set: /**
         * @param {?} width
         * @return {?}
         */
        function (width) {
            this._width = width;
            this.widthChange.emit();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SidebarService.prototype, "height", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.direction === SidebarDirection.Top) {
                return this._height;
            }
            if (this.direction === SidebarDirection.Bottom) {
                return -this._height;
            }
            return 0;
        },
        set: /**
         * @param {?} height
         * @return {?}
         */
        function (height) {
            this._height = height;
            this.heightChange.emit();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} isVisible
     * @return {?}
     */
    SidebarService.prototype.setVisibleState = /**
     * @param {?} isVisible
     * @return {?}
     */
    function (isVisible) {
        var _this = this;
        if (this.isVisible !== isVisible) {
            this.isVisible = isVisible;
            this.isAnimating = true;
            this.wasJustOpened = true;
            this.isVisibleChange.emit(isVisible);
            setTimeout((/**
             * @return {?}
             */
            function () { return _this.wasJustOpened = false; }));
            clearTimeout(this._isAnimatingTimeout);
            this._isAnimatingTimeout = window.setTimeout((/**
             * @return {?}
             */
            function () { return _this.isAnimating = false; }), 500);
        }
    };
    /**
     * @return {?}
     */
    SidebarService.prototype.toggleVisibleState = /**
     * @return {?}
     */
    function () {
        this.setVisibleState(!this.isVisible);
    };
    return SidebarService;
}());
export { SidebarService };
if (false) {
    /** @type {?} */
    SidebarService.prototype.isVisible;
    /** @type {?} */
    SidebarService.prototype.isAnimating;
    /** @type {?} */
    SidebarService.prototype.wasJustOpened;
    /** @type {?} */
    SidebarService.prototype.direction;
    /** @type {?} */
    SidebarService.prototype.isVisibleChange;
    /** @type {?} */
    SidebarService.prototype.widthChange;
    /** @type {?} */
    SidebarService.prototype.heightChange;
    /** @type {?} */
    SidebarService.prototype.transition;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._isAnimatingTimeout;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._width;
    /**
     * @type {?}
     * @private
     */
    SidebarService.prototype._height;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsibW9kdWxlcy9zaWRlYmFyL3NlcnZpY2VzL3NpZGViYXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFJM0MsTUFBTSxLQUFPLGlCQUFpQixHQUFHO0lBQy9CLE9BQU8sRUFBRSxtQkFBQSxTQUFTLEVBQXFCO0lBQ3ZDLElBQUksRUFBRSxtQkFBQSxNQUFNLEVBQXFCO0lBQ2pDLFNBQVMsRUFBRSxtQkFBQSxZQUFZLEVBQXFCO0lBQzVDLE9BQU8sRUFBRSxtQkFBQSxTQUFTLEVBQXFCO0lBQ3ZDLFVBQVUsRUFBRSxtQkFBQSxhQUFhLEVBQXFCO0lBQzlDLFFBQVEsRUFBRSxtQkFBQSxXQUFXLEVBQXFCO0NBQzNDOztBQUlELE1BQU0sS0FBTyxnQkFBZ0IsR0FBRztJQUM5QixJQUFJLEVBQUUsbUJBQUEsTUFBTSxFQUFvQjtJQUNoQyxLQUFLLEVBQUUsbUJBQUEsT0FBTyxFQUFvQjtJQUNsQyxHQUFHLEVBQUUsbUJBQUEsS0FBSyxFQUFvQjtJQUM5QixNQUFNLEVBQUUsbUJBQUEsUUFBUSxFQUFvQjtDQUNyQztBQUVEO0lBWUUsd0JBQVksU0FBMEI7UUFBMUIsMEJBQUEsRUFBQSxpQkFBMEI7UUFDcEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFFM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBQ25ELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFFN0MsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFaEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDOUMsQ0FBQztJQUlELHNCQUFXLGlDQUFLOzs7O1FBQWhCO1lBQ0UsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLElBQUksRUFBRTtnQkFDNUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO2FBQ3BCO1lBQ0QsSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLEtBQUssRUFBRTtnQkFDN0MsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7YUFDckI7WUFDRCxPQUFPLENBQUMsQ0FBQztRQUNYLENBQUM7Ozs7O1FBRUQsVUFBaUIsS0FBYTtZQUM1QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNwQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzFCLENBQUM7OztPQUxBO0lBU0Qsc0JBQVcsa0NBQU07Ozs7UUFBakI7WUFDRSxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssZ0JBQWdCLENBQUMsR0FBRyxFQUFFO2dCQUMzQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7YUFDckI7WUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssZ0JBQWdCLENBQUMsTUFBTSxFQUFFO2dCQUM5QyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQzthQUN0QjtZQUNELE9BQU8sQ0FBQyxDQUFDO1FBQ1gsQ0FBQzs7Ozs7UUFFRCxVQUFrQixNQUFjO1lBQzlCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BTEE7Ozs7O0lBT00sd0NBQWU7Ozs7SUFBdEIsVUFBdUIsU0FBa0I7UUFBekMsaUJBWUM7UUFYQyxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBRTFCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRXJDLFVBQVU7OztZQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssRUFBMUIsQ0FBMEIsRUFBQyxDQUFDO1lBQzdDLFlBQVksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsTUFBTSxDQUFDLFVBQVU7OztZQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssRUFBeEIsQ0FBd0IsR0FBRSxHQUFHLENBQUMsQ0FBQztTQUNuRjtJQUNILENBQUM7Ozs7SUFFTSwyQ0FBa0I7OztJQUF6QjtRQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQTlFRCxJQThFQzs7OztJQTVFQyxtQ0FBMEI7O0lBQzFCLHFDQUE0Qjs7SUFDNUIsdUNBQThCOztJQUM5QixtQ0FBbUM7O0lBQ25DLHlDQUE4Qzs7SUFDOUMscUNBQXVDOztJQUN2QyxzQ0FBd0M7O0lBQ3hDLG9DQUFxQzs7Ozs7SUFDckMsNkNBQW9DOzs7OztJQWlCcEMsZ0NBQXVCOzs7OztJQWlCdkIsaUNBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZXhwb3J0IHR5cGUgU2lkZWJhclRyYW5zaXRpb24gPSAnb3ZlcmxheScgfCAncHVzaCcgfCAnc2NhbGUgZG93bicgfCAndW5jb3ZlcicgfCAnc2xpZGUgYWxvbmcnIHwgJ3NsaWRlIG91dCc7XHJcblxyXG5leHBvcnQgY29uc3QgU2lkZWJhclRyYW5zaXRpb24gPSB7XHJcbiAgT3ZlcmxheTogJ292ZXJsYXknIGFzIFNpZGViYXJUcmFuc2l0aW9uLFxyXG4gIFB1c2g6ICdwdXNoJyBhcyBTaWRlYmFyVHJhbnNpdGlvbixcclxuICBTY2FsZURvd246ICdzY2FsZSBkb3duJyBhcyBTaWRlYmFyVHJhbnNpdGlvbixcclxuICBVbmNvdmVyOiAndW5jb3ZlcicgYXMgU2lkZWJhclRyYW5zaXRpb24sXHJcbiAgU2xpZGVBbG9uZzogJ3NsaWRlIGFsb25nJyBhcyBTaWRlYmFyVHJhbnNpdGlvbixcclxuICBTbGlkZU91dDogJ3NsaWRlIG91dCcgYXMgU2lkZWJhclRyYW5zaXRpb25cclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIFNpZGViYXJEaXJlY3Rpb24gPSAnbGVmdCcgfCAncmlnaHQnIHwgJ3RvcCcgfCAnYm90dG9tJztcclxuXHJcbmV4cG9ydCBjb25zdCBTaWRlYmFyRGlyZWN0aW9uID0ge1xyXG4gIExlZnQ6ICdsZWZ0JyBhcyBTaWRlYmFyRGlyZWN0aW9uLFxyXG4gIFJpZ2h0OiAncmlnaHQnIGFzIFNpZGViYXJEaXJlY3Rpb24sXHJcbiAgVG9wOiAndG9wJyBhcyBTaWRlYmFyRGlyZWN0aW9uLFxyXG4gIEJvdHRvbTogJ2JvdHRvbScgYXMgU2lkZWJhckRpcmVjdGlvblxyXG59O1xyXG5cclxuZXhwb3J0IGNsYXNzIFNpZGViYXJTZXJ2aWNlIHtcclxuXHJcbiAgcHVibGljIGlzVmlzaWJsZTogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNBbmltYXRpbmc6IGJvb2xlYW47XHJcbiAgcHVibGljIHdhc0p1c3RPcGVuZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIGRpcmVjdGlvbjogU2lkZWJhckRpcmVjdGlvbjtcclxuICBwdWJsaWMgaXNWaXNpYmxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcbiAgcHVibGljIHdpZHRoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8dm9pZD47XHJcbiAgcHVibGljIGhlaWdodENoYW5nZTogRXZlbnRFbWl0dGVyPHZvaWQ+O1xyXG4gIHB1YmxpYyB0cmFuc2l0aW9uOiBTaWRlYmFyVHJhbnNpdGlvbjtcclxuICBwcml2YXRlIF9pc0FuaW1hdGluZ1RpbWVvdXQ6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoaXNWaXNpYmxlOiBib29sZWFuID0gZmFsc2UpIHtcclxuICAgIHRoaXMuaXNWaXNpYmxlID0gaXNWaXNpYmxlO1xyXG4gICAgdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xyXG4gICAgdGhpcy53YXNKdXN0T3BlbmVkID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5pc1Zpc2libGVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcbiAgICB0aGlzLndpZHRoQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xyXG4gICAgdGhpcy5oZWlnaHRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XHJcblxyXG4gICAgdGhpcy53aWR0aCA9IDI2MDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gMDtcclxuXHJcbiAgICB0aGlzLnRyYW5zaXRpb24gPSBTaWRlYmFyVHJhbnNpdGlvbi5VbmNvdmVyO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfd2lkdGg6IG51bWJlcjtcclxuXHJcbiAgcHVibGljIGdldCB3aWR0aCgpOiBudW1iZXIge1xyXG4gICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSBTaWRlYmFyRGlyZWN0aW9uLkxlZnQpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSBTaWRlYmFyRGlyZWN0aW9uLlJpZ2h0KSB7XHJcbiAgICAgIHJldHVybiAtdGhpcy5fd2lkdGg7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gMDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXQgd2lkdGgod2lkdGg6IG51bWJlcikge1xyXG4gICAgdGhpcy5fd2lkdGggPSB3aWR0aDtcclxuICAgIHRoaXMud2lkdGhDaGFuZ2UuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBfaGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gIHB1YmxpYyBnZXQgaGVpZ2h0KCk6IG51bWJlciB7XHJcbiAgICBpZiAodGhpcy5kaXJlY3Rpb24gPT09IFNpZGViYXJEaXJlY3Rpb24uVG9wKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5kaXJlY3Rpb24gPT09IFNpZGViYXJEaXJlY3Rpb24uQm90dG9tKSB7XHJcbiAgICAgIHJldHVybiAtdGhpcy5faGVpZ2h0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IGhlaWdodChoZWlnaHQ6IG51bWJlcikge1xyXG4gICAgdGhpcy5faGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgdGhpcy5oZWlnaHRDaGFuZ2UuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNldFZpc2libGVTdGF0ZShpc1Zpc2libGU6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmlzVmlzaWJsZSAhPT0gaXNWaXNpYmxlKSB7XHJcbiAgICAgIHRoaXMuaXNWaXNpYmxlID0gaXNWaXNpYmxlO1xyXG4gICAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcclxuICAgICAgdGhpcy53YXNKdXN0T3BlbmVkID0gdHJ1ZTtcclxuXHJcbiAgICAgIHRoaXMuaXNWaXNpYmxlQ2hhbmdlLmVtaXQoaXNWaXNpYmxlKTtcclxuXHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy53YXNKdXN0T3BlbmVkID0gZmFsc2UpO1xyXG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5faXNBbmltYXRpbmdUaW1lb3V0KTtcclxuICAgICAgdGhpcy5faXNBbmltYXRpbmdUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlLCA1MDApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHRvZ2dsZVZpc2libGVTdGF0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuc2V0VmlzaWJsZVN0YXRlKCF0aGlzLmlzVmlzaWJsZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==