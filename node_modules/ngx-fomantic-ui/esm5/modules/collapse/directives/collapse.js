/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';
var FuiCollapse = /** @class */ (function () {
    function FuiCollapse(_element, _renderer) {
        this._element = _element;
        this._renderer = _renderer;
        this._pristine = true;
        // Collapse animation duration is 350ms by default.
        this.collapseDuration = 350;
        this._isExpanded = false;
        this._isCollapsing = false;
    }
    Object.defineProperty(FuiCollapse.prototype, "isCollapsed", {
        // Set when the collapse is closed, and not animating.
        get: 
        // Set when the collapse is closed, and not animating.
        /**
         * @return {?}
         */
        function () {
            return !this.isExpanded && !this.isCollapsing;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCollapse.prototype, "fuiCollapse", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isExpanded;
        },
        // Sets the state of the collapse, `true` is collapsed.
        set: 
        // Sets the state of the collapse, `true` is collapsed.
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this.hide();
            }
            else {
                this.show();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCollapse.prototype, "isExpanded", {
        // Set when the collapse is open, and not animating.
        get: 
        // Set when the collapse is open, and not animating.
        /**
         * @return {?}
         */
        function () {
            return this._isExpanded;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCollapse.prototype, "isCollapsing", {
        // Set when the collapse is animating.
        get: 
        // Set when the collapse is animating.
        /**
         * @return {?}
         */
        function () {
            return this._isCollapsing;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCollapse.prototype, "_animationDuration", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return this._pristine ? 0 : this.collapseDuration;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FuiCollapse.prototype.hide = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._isCollapsing = true;
        this._isExpanded = false;
        // Forcibly hide the overflow so that content is not visible past the boundaries of its container.
        this._renderer.setStyle(this._element.nativeElement, 'overflow', 'hidden');
        // Animate the host element from its scroll height to 0.
        this.animate(this._element.nativeElement.scrollHeight, 0, false, (/**
         * @return {?}
         */
        function () {
            _this._isCollapsing = false;
        }));
    };
    /**
     * @return {?}
     */
    FuiCollapse.prototype.show = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._isCollapsing = true;
        // Animate the host element from its offset height to its scroll height.
        this.animate(this._element.nativeElement.offsetHeight, this._element.nativeElement.scrollHeight, true, (/**
         * @return {?}
         */
        function () {
            // Remove the overflow override to enable user styling once again.
            _this._renderer.removeStyle(_this._element.nativeElement, 'overflow');
            _this._isCollapsing = false;
            _this._isExpanded = true;
        }));
    };
    /**
     * @private
     * @param {?} startHeight
     * @param {?} endHeight
     * @param {?=} removeOnComplete
     * @param {?=} callback
     * @return {?}
     */
    FuiCollapse.prototype.animate = /**
     * @private
     * @param {?} startHeight
     * @param {?} endHeight
     * @param {?=} removeOnComplete
     * @param {?=} callback
     * @return {?}
     */
    function (startHeight, endHeight, removeOnComplete, callback) {
        if (removeOnComplete === void 0) { removeOnComplete = false; }
        if (callback === void 0) { callback = (/**
         * @return {?}
         */
        function () {
        }); }
        /** @type {?} */
        var heightFrames = [
            {
                offset: 0,
                height: startHeight + "px"
            },
            {
                offset: 1,
                height: endHeight + "px"
            }
        ];
        if (removeOnComplete) {
            heightFrames.push({
                offset: 1,
                height: "auto"
            });
        }
        // Animate the collapse using the web animations API.
        // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.
        this._element.nativeElement.animate(heightFrames, {
            delay: 0,
            // Disable animation on 1st collapse / expansion.
            duration: this._animationDuration,
            iterations: 1,
            easing: 'ease',
            fill: 'both'
        });
        if (this._pristine) {
            // Remove pristine flag when first hit.
            this._pristine = false;
        }
        setTimeout((/**
         * @return {?}
         */
        function () { return callback(); }), this.collapseDuration);
    };
    FuiCollapse.decorators = [
        { type: Directive, args: [{
                    selector: '[fuiCollapse]'
                },] }
    ];
    /** @nocollapse */
    FuiCollapse.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    FuiCollapse.propDecorators = {
        collapseDuration: [{ type: Input }],
        isCollapsed: [{ type: HostBinding, args: ['class.collapsed',] }],
        fuiCollapse: [{ type: Input }],
        isExpanded: [{ type: HostBinding, args: ['class.expanded',] }],
        isCollapsing: [{ type: HostBinding, args: ['class.collapsing',] }]
    };
    return FuiCollapse;
}());
export { FuiCollapse };
if (false) {
    /** @type {?} */
    FuiCollapse.prototype.collapseDuration;
    /**
     * @type {?}
     * @private
     */
    FuiCollapse.prototype._pristine;
    /**
     * @type {?}
     * @private
     */
    FuiCollapse.prototype._isExpanded;
    /**
     * @type {?}
     * @private
     */
    FuiCollapse.prototype._isCollapsing;
    /**
     * @type {?}
     * @private
     */
    FuiCollapse.prototype._element;
    /**
     * @type {?}
     * @private
     */
    FuiCollapse.prototype._renderer;
}
//# sourceMappingURL=data:application/json;base64,