/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Directive, EventEmitter, HostBinding, HostListener, Input } from '@angular/core';
var CalendarItem = /** @class */ (function () {
    function CalendarItem(date) {
        this.date = date;
    }
    return CalendarItem;
}());
export { CalendarItem };
if (false) {
    /** @type {?} */
    CalendarItem.prototype.date;
    /** @type {?} */
    CalendarItem.prototype.humanReadable;
    /** @type {?} */
    CalendarItem.prototype.isDisabled;
    /** @type {?} */
    CalendarItem.prototype.isActive;
    /** @type {?} */
    CalendarItem.prototype.isOutsideRange;
    /** @type {?} */
    CalendarItem.prototype.isToday;
    /** @type {?} */
    CalendarItem.prototype.isSelectable;
}
var FuiCalendarItem = /** @class */ (function () {
    function FuiCalendarItem(changeDetector) {
        this.changeDetector = changeDetector;
        this.hasFocus = false;
        this.onFocussed = new EventEmitter();
    }
    Object.defineProperty(FuiCalendarItem.prototype, "isSelectable", {
        get: /**
         * @return {?}
         */
        function () {
            return this.item.isSelectable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCalendarItem.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.item.isActive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiCalendarItem.prototype, "isToday", {
        get: /**
         * @return {?}
         */
        function () {
            return this.item.isToday;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FuiCalendarItem.prototype.onMouseMove = /**
     * @return {?}
     */
    function () {
        if (!this.hasFocus) {
            this.hasFocus = true;
            this.onFocussed.emit(this.hasFocus);
        }
    };
    /**
     * @return {?}
     */
    FuiCalendarItem.prototype.onMouseLeave = /**
     * @return {?}
     */
    function () {
        this.hasFocus = false;
        this.onFocussed.emit(this.hasFocus);
    };
    FuiCalendarItem.decorators = [
        { type: Directive, args: [{
                    selector: '[calendarItem]'
                },] }
    ];
    /** @nocollapse */
    FuiCalendarItem.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    FuiCalendarItem.propDecorators = {
        item: [{ type: Input, args: ['calendarItem',] }],
        hasFocus: [{ type: HostBinding, args: ['class.focus',] }],
        isSelectable: [{ type: HostBinding, args: ['class.disabled',] }],
        isActive: [{ type: HostBinding, args: ['class.active',] }],
        isToday: [{ type: HostBinding, args: ['class.today',] }],
        onMouseMove: [{ type: HostListener, args: ['mousemove',] }],
        onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]
    };
    return FuiCalendarItem;
}());
export { FuiCalendarItem };
if (false) {
    /** @type {?} */
    FuiCalendarItem.prototype.item;
    /** @type {?} */
    FuiCalendarItem.prototype.hasFocus;
    /** @type {?} */
    FuiCalendarItem.prototype.onFocussed;
    /** @type {?} */
    FuiCalendarItem.prototype.changeDetector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItaXRlbS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1mb21hbnRpYy11aS8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvZGF0ZXBpY2tlci9kaXJlY3RpdmVzL2NhbGVuZGFyLWl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTNHO0lBU0Usc0JBQVksSUFBVTtRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBWkQsSUFZQzs7OztJQVhDLDRCQUFrQjs7SUFDbEIscUNBQTZCOztJQUM3QixrQ0FBMkI7O0lBQzNCLGdDQUF5Qjs7SUFDekIsc0NBQStCOztJQUMvQiwrQkFBd0I7O0lBQ3hCLG9DQUE2Qjs7QUFPL0I7SUFVRSx5QkFBbUIsY0FBaUM7UUFBakMsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBQ2xELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXRCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQUNoRCxDQUFDO0lBRUQsc0JBQ1cseUNBQVk7Ozs7UUFEdkI7WUFFRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ2hDLENBQUM7OztPQUFBO0lBRUQsc0JBQ1cscUNBQVE7Ozs7UUFEbkI7WUFFRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzVCLENBQUM7OztPQUFBO0lBRUQsc0JBQ1csb0NBQU87Ozs7UUFEbEI7WUFFRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzNCLENBQUM7OztPQUFBOzs7O0lBR00scUNBQVc7OztJQURsQjtRQUVFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7Ozs7SUFHTSxzQ0FBWTs7O0lBRG5CO1FBRUUsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7O2dCQTNDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtpQkFDM0I7Ozs7Z0JBbEJPLGlCQUFpQjs7O3VCQW9CdEIsS0FBSyxTQUFDLGNBQWM7MkJBRXBCLFdBQVcsU0FBQyxhQUFhOytCQVV6QixXQUFXLFNBQUMsZ0JBQWdCOzJCQUs1QixXQUFXLFNBQUMsY0FBYzswQkFLMUIsV0FBVyxTQUFDLGFBQWE7OEJBS3pCLFlBQVksU0FBQyxXQUFXOytCQVF4QixZQUFZLFNBQUMsWUFBWTs7SUFLNUIsc0JBQUM7Q0FBQSxBQTVDRCxJQTRDQztTQXpDWSxlQUFlOzs7SUFDMUIsK0JBQzBCOztJQUMxQixtQ0FDeUI7O0lBQ3pCLHFDQUF5Qzs7SUFFN0IseUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3RvclJlZiwgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDYWxlbmRhckl0ZW0ge1xyXG4gIHB1YmxpYyBkYXRlOiBEYXRlO1xyXG4gIHB1YmxpYyBodW1hblJlYWRhYmxlOiBzdHJpbmc7XHJcbiAgcHVibGljIGlzRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuO1xyXG4gIHB1YmxpYyBpc091dHNpZGVSYW5nZTogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNUb2RheTogYm9vbGVhbjtcclxuICBwdWJsaWMgaXNTZWxlY3RhYmxlOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihkYXRlOiBEYXRlKSB7XHJcbiAgICB0aGlzLmRhdGUgPSBkYXRlO1xyXG4gIH1cclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbY2FsZW5kYXJJdGVtXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aUNhbGVuZGFySXRlbSB7XHJcbiAgQElucHV0KCdjYWxlbmRhckl0ZW0nKVxyXG4gIHB1YmxpYyBpdGVtOiBDYWxlbmRhckl0ZW07XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mb2N1cycpXHJcbiAgcHVibGljIGhhc0ZvY3VzOiBib29sZWFuO1xyXG4gIHB1YmxpYyBvbkZvY3Vzc2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcclxuICAgIHRoaXMuaGFzRm9jdXMgPSBmYWxzZTtcclxuXHJcbiAgICB0aGlzLm9uRm9jdXNzZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcbiAgfVxyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmRpc2FibGVkJylcclxuICBwdWJsaWMgZ2V0IGlzU2VsZWN0YWJsZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLml0ZW0uaXNTZWxlY3RhYmxlO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3RpdmUnKVxyXG4gIHB1YmxpYyBnZXQgaXNBY3RpdmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5pdGVtLmlzQWN0aXZlO1xyXG4gIH1cclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy50b2RheScpXHJcbiAgcHVibGljIGdldCBpc1RvZGF5KCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuaXRlbS5pc1RvZGF5O1xyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vtb3ZlJylcclxuICBwdWJsaWMgb25Nb3VzZU1vdmUoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuaGFzRm9jdXMpIHtcclxuICAgICAgdGhpcy5oYXNGb2N1cyA9IHRydWU7XHJcbiAgICAgIHRoaXMub25Gb2N1c3NlZC5lbWl0KHRoaXMuaGFzRm9jdXMpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpXHJcbiAgcHVibGljIG9uTW91c2VMZWF2ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuaGFzRm9jdXMgPSBmYWxzZTtcclxuICAgIHRoaXMub25Gb2N1c3NlZC5lbWl0KHRoaXMuaGFzRm9jdXMpO1xyXG4gIH1cclxufVxyXG4iXX0=