/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostListener } from '@angular/core';
import { Util } from '../../../misc/util/internal';
/** @type {?} */
export var MessagePosition = {
    Top: (/** @type {?} */ ('top')),
    TopLeft: (/** @type {?} */ ('top-left')),
    TopRight: (/** @type {?} */ ('top-right')),
    Bottom: (/** @type {?} */ ('bottom')),
    BottomLeft: (/** @type {?} */ ('bottom-left')),
    BottomRight: (/** @type {?} */ ('bottom-right'))
};
var FuiMessageGlobalContainer = /** @class */ (function () {
    function FuiMessageGlobalContainer() {
    }
    Object.defineProperty(FuiMessageGlobalContainer.prototype, "dynamicClasses", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var classes = {};
            this.position
                .split('-')
                .forEach((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return classes[p] = true; }));
            return classes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FuiMessageGlobalContainer.prototype, "dynamicWidth", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var margin = Util.DOM.getDocumentFontSize();
            /** @type {?} */
            var width = this.width;
            if (this.position === MessagePosition.Top ||
                this.position === MessagePosition.Bottom ||
                window.innerWidth < width + margin * 2) {
                width = window.innerWidth - margin * 2;
            }
            return width;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FuiMessageGlobalContainer.prototype.onDocumentResize = /**
     * @return {?}
     */
    function () {
    };
    FuiMessageGlobalContainer.decorators = [
        { type: Component, args: [{
                    selector: 'fui-message-global-container',
                    template: "\n<div class=\"global container\" [ngClass]=\"dynamicClasses\" [style.width.px]=\"dynamicWidth\">\n    <fui-message-container [controller]=\"controller\"></fui-message-container>\n</div>\n",
                    styles: ["\n.global.container {\n    display: block;\n    position: fixed;\n}\n.global.container.top {\n    top: 1rem;\n}\n.global.container.bottom {\n    bottom: 1rem;\n}\n.global.container.left {\n    left: 1rem;\n}\n.global.container.right {\n    right: 1rem;\n}\n.global.container:not(.left):not(.right) {\n    left: 1rem;\n}\n"]
                }] }
    ];
    FuiMessageGlobalContainer.propDecorators = {
        onDocumentResize: [{ type: HostListener, args: ['window:resize',] }]
    };
    return FuiMessageGlobalContainer;
}());
export { FuiMessageGlobalContainer };
if (false) {
    /** @type {?} */
    FuiMessageGlobalContainer.prototype.controller;
    /** @type {?} */
    FuiMessageGlobalContainer.prototype.position;
    /** @type {?} */
    FuiMessageGlobalContainer.prototype.width;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1nbG9iYWwtY29udGFpbmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZvbWFudGljLXVpLyIsInNvdXJjZXMiOlsiY29sbGVjdGlvbnMvbWVzc2FnZS9jb21wb25lbnRzL21lc3NhZ2UtZ2xvYmFsLWNvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFdEQsT0FBTyxFQUFrQixJQUFJLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7QUFLbEUsTUFBTSxLQUFPLGVBQWUsR0FBRztJQUM3QixHQUFHLEVBQUUsbUJBQUEsS0FBSyxFQUFtQjtJQUM3QixPQUFPLEVBQUUsbUJBQUEsVUFBVSxFQUFtQjtJQUN0QyxRQUFRLEVBQUUsbUJBQUEsV0FBVyxFQUFtQjtJQUN4QyxNQUFNLEVBQUUsbUJBQUEsUUFBUSxFQUFtQjtJQUNuQyxVQUFVLEVBQUUsbUJBQUEsYUFBYSxFQUFtQjtJQUM1QyxXQUFXLEVBQUUsbUJBQUEsY0FBYyxFQUFtQjtDQUMvQztBQUVEO0lBQUE7SUE4REEsQ0FBQztJQTNCQyxzQkFBVyxxREFBYzs7OztRQUF6Qjs7Z0JBQ1EsT0FBTyxHQUFvQixFQUFFO1lBRW5DLElBQUksQ0FBQyxRQUFRO2lCQUNWLEtBQUssQ0FBQyxHQUFHLENBQUM7aUJBQ1YsT0FBTzs7OztZQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBakIsQ0FBaUIsRUFBQyxDQUFDO1lBRW5DLE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsbURBQVk7Ozs7UUFBdkI7O2dCQUNRLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFOztnQkFDekMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLO1lBRXRCLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxlQUFlLENBQUMsR0FBRztnQkFDdkMsSUFBSSxDQUFDLFFBQVEsS0FBSyxlQUFlLENBQUMsTUFBTTtnQkFDeEMsTUFBTSxDQUFDLFVBQVUsR0FBRyxLQUFLLEdBQUcsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFFeEMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN4QztZQUVELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQzs7O09BQUE7Ozs7SUFHTSxvREFBZ0I7OztJQUR2QjtJQUVBLENBQUM7O2dCQTdERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsUUFBUSxFQUFFLDhMQUlYOzZCQUNVLG1VQW9CVjtpQkFDQTs7O21DQStCRSxZQUFZLFNBQUMsZUFBZTs7SUFHL0IsZ0NBQUM7Q0FBQSxBQTlERCxJQThEQztTQWpDWSx5QkFBeUI7OztJQUNwQywrQ0FBcUM7O0lBRXJDLDZDQUFpQzs7SUFDakMsMENBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEhvc3RMaXN0ZW5lcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7TWVzc2FnZUNvbnRyb2xsZXJ9IGZyb20gJy4uL2NsYXNzZXMvbWVzc2FnZS1jb250cm9sbGVyJztcclxuaW1wb3J0IHtJRHluYW1pY0NsYXNzZXMsIFV0aWx9IGZyb20gJy4uLy4uLy4uL21pc2MvdXRpbC9pbnRlcm5hbCc7XHJcblxyXG5leHBvcnQgdHlwZSBNZXNzYWdlUG9zaXRpb24gPSAndG9wJyB8ICd0b3AtbGVmdCcgfCAndG9wLXJpZ2h0JyB8XHJcbiAgJ2JvdHRvbScgfCAnYm90dG9tLWxlZnQnIHwgJ2JvdHRvbS1yaWdodCc7XHJcblxyXG5leHBvcnQgY29uc3QgTWVzc2FnZVBvc2l0aW9uID0ge1xyXG4gIFRvcDogJ3RvcCcgYXMgTWVzc2FnZVBvc2l0aW9uLFxyXG4gIFRvcExlZnQ6ICd0b3AtbGVmdCcgYXMgTWVzc2FnZVBvc2l0aW9uLFxyXG4gIFRvcFJpZ2h0OiAndG9wLXJpZ2h0JyBhcyBNZXNzYWdlUG9zaXRpb24sXHJcbiAgQm90dG9tOiAnYm90dG9tJyBhcyBNZXNzYWdlUG9zaXRpb24sXHJcbiAgQm90dG9tTGVmdDogJ2JvdHRvbS1sZWZ0JyBhcyBNZXNzYWdlUG9zaXRpb24sXHJcbiAgQm90dG9tUmlnaHQ6ICdib3R0b20tcmlnaHQnIGFzIE1lc3NhZ2VQb3NpdGlvblxyXG59O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmdWktbWVzc2FnZS1nbG9iYWwtY29udGFpbmVyJyxcclxuICB0ZW1wbGF0ZTogYFxyXG48ZGl2IGNsYXNzPVwiZ2xvYmFsIGNvbnRhaW5lclwiIFtuZ0NsYXNzXT1cImR5bmFtaWNDbGFzc2VzXCIgW3N0eWxlLndpZHRoLnB4XT1cImR5bmFtaWNXaWR0aFwiPlxyXG4gICAgPGZ1aS1tZXNzYWdlLWNvbnRhaW5lciBbY29udHJvbGxlcl09XCJjb250cm9sbGVyXCI+PC9mdWktbWVzc2FnZS1jb250YWluZXI+XHJcbjwvZGl2PlxyXG5gLFxyXG4gIHN0eWxlczogW2BcclxuLmdsb2JhbC5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbn1cclxuLmdsb2JhbC5jb250YWluZXIudG9wIHtcclxuICAgIHRvcDogMXJlbTtcclxufVxyXG4uZ2xvYmFsLmNvbnRhaW5lci5ib3R0b20ge1xyXG4gICAgYm90dG9tOiAxcmVtO1xyXG59XHJcbi5nbG9iYWwuY29udGFpbmVyLmxlZnQge1xyXG4gICAgbGVmdDogMXJlbTtcclxufVxyXG4uZ2xvYmFsLmNvbnRhaW5lci5yaWdodCB7XHJcbiAgICByaWdodDogMXJlbTtcclxufVxyXG4uZ2xvYmFsLmNvbnRhaW5lcjpub3QoLmxlZnQpOm5vdCgucmlnaHQpIHtcclxuICAgIGxlZnQ6IDFyZW07XHJcbn1cclxuYF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZ1aU1lc3NhZ2VHbG9iYWxDb250YWluZXIge1xyXG4gIHB1YmxpYyBjb250cm9sbGVyOiBNZXNzYWdlQ29udHJvbGxlcjtcclxuXHJcbiAgcHVibGljIHBvc2l0aW9uOiBNZXNzYWdlUG9zaXRpb247XHJcbiAgcHVibGljIHdpZHRoOiBudW1iZXI7XHJcblxyXG4gIHB1YmxpYyBnZXQgZHluYW1pY0NsYXNzZXMoKTogSUR5bmFtaWNDbGFzc2VzIHtcclxuICAgIGNvbnN0IGNsYXNzZXM6IElEeW5hbWljQ2xhc3NlcyA9IHt9O1xyXG5cclxuICAgIHRoaXMucG9zaXRpb25cclxuICAgICAgLnNwbGl0KCctJylcclxuICAgICAgLmZvckVhY2gocCA9PiBjbGFzc2VzW3BdID0gdHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGNsYXNzZXM7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGR5bmFtaWNXaWR0aCgpOiBudW1iZXIge1xyXG4gICAgY29uc3QgbWFyZ2luID0gVXRpbC5ET00uZ2V0RG9jdW1lbnRGb250U2l6ZSgpO1xyXG4gICAgbGV0IHdpZHRoID0gdGhpcy53aWR0aDtcclxuXHJcbiAgICBpZiAodGhpcy5wb3NpdGlvbiA9PT0gTWVzc2FnZVBvc2l0aW9uLlRvcCB8fFxyXG4gICAgICB0aGlzLnBvc2l0aW9uID09PSBNZXNzYWdlUG9zaXRpb24uQm90dG9tIHx8XHJcbiAgICAgIHdpbmRvdy5pbm5lcldpZHRoIDwgd2lkdGggKyBtYXJnaW4gKiAyKSB7XHJcblxyXG4gICAgICB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoIC0gbWFyZ2luICogMjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gd2lkdGg7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6cmVzaXplJylcclxuICBwdWJsaWMgb25Eb2N1bWVudFJlc2l6ZSgpOiB2b2lkIHtcclxuICB9XHJcbn1cclxuIl19