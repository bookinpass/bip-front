import { EventEmitter } from '@angular/core';
import { CustomValueAccessor, ICustomValueAccessorHost } from '../../../misc/util/internal';
export declare class FuiCheckbox implements ICustomValueAccessorHost<boolean> {
    readonly hasClasses: boolean;
    name: string;
    isChecked: boolean;
    onCheckChange: EventEmitter<boolean>;
    onTouched: EventEmitter<void>;
    isDisabled: boolean;
    isReadonly: boolean;
    private _checkboxElement;
    constructor();
    readonly checkedAttribute: string | undefined;
    readonly isDisabledAttribute: string | undefined;
    onMouseDown(e: MouseEvent): void;
    onClick(): void;
    onFocusOut(): void;
    toggle(): void;
    writeValue(value: boolean): void;
    private focusCheckbox;
}
export declare class FuiCheckboxValueAccessor extends CustomValueAccessor<boolean, FuiCheckbox> {
    constructor(host: FuiCheckbox);
}
