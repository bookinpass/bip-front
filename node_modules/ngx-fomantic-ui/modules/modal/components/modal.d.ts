import { AfterViewInit, ElementRef, EventEmitter, OnInit, Renderer2, ViewContainerRef } from '@angular/core';
import { IDynamicClasses, FuiComponentFactory } from '../../../misc/util/internal';
import { TransitionController } from '../../transition/internal';
import { ModalControls, ModalResult } from '../classes/modal-controls';
import { ModalConfig, ModalSize } from '../classes/modal-config';
import * as ɵngcc0 from '@angular/core';
export declare class FuiModal<T, U> implements OnInit, AfterViewInit {
    private _renderer;
    private _element;
    private _componentFactory;
    isClosable: boolean;
    closeResult: U;
    controls: ModalControls<T, U>;
    onApprove: EventEmitter<T>;
    onDeny: EventEmitter<U>;
    onDismiss: EventEmitter<void>;
    size: ModalSize;
    isCentered: boolean;
    isBasic: boolean;
    transitionController: TransitionController;
    transition: string;
    transitionDuration: number;
    dimBackground: boolean;
    templateSibling: ViewContainerRef;
    private _modalElement;
    private _mustAlwaysScroll;
    private _isClosing;
    private _originalContainer?;
    constructor(_renderer: Renderer2, _element: ElementRef, _componentFactory: FuiComponentFactory);
    readonly approve: ModalResult<T>;
    readonly deny: ModalResult<U>;
    readonly dynamicClasses: IDynamicClasses;
    private _isFullScreen;
    isFullScreen: boolean;
    private _mustScroll;
    mustScroll: boolean;
    private _isInverted;
    isInverted: boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    loadConfig<V>(config: ModalConfig<V, T, U>): void;
    close(): void;
    onClick(e: MouseEvent): void;
    onDocumentKeyUp(e: KeyboardEvent): void;
    onDocumentResize(): void;
    private dismiss;
    private updateScroll;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiModal<any, any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FuiModal<any, any>, "fui-modal", never, { "isFullScreen": "isFullScreen"; "mustScroll": "mustScroll"; "isInverted": "isInverted"; "isClosable": "isClosable"; "closeResult": "closeResult"; "size": "size"; "isBasic": "isBasic"; "isCentered": "isCentered"; "transition": "transition"; "transitionDuration": "transitionDuration"; }, { "onApprove": "approved"; "onDeny": "denied"; "onDismiss": "dismissed"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuZC50cyIsInNvdXJjZXMiOlsibW9kYWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIFJlbmRlcmVyMiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJRHluYW1pY0NsYXNzZXMsIEZ1aUNvbXBvbmVudEZhY3RvcnkgfSBmcm9tICcuLi8uLi8uLi9taXNjL3V0aWwvaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBUcmFuc2l0aW9uQ29udHJvbGxlciB9IGZyb20gJy4uLy4uL3RyYW5zaXRpb24vaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBNb2RhbENvbnRyb2xzLCBNb2RhbFJlc3VsdCB9IGZyb20gJy4uL2NsYXNzZXMvbW9kYWwtY29udHJvbHMnO1xyXG5pbXBvcnQgeyBNb2RhbENvbmZpZywgTW9kYWxTaXplIH0gZnJvbSAnLi4vY2xhc3Nlcy9tb2RhbC1jb25maWcnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGdWlNb2RhbDxULCBVPiBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgICBwcml2YXRlIF9yZW5kZXJlcjtcclxuICAgIHByaXZhdGUgX2VsZW1lbnQ7XHJcbiAgICBwcml2YXRlIF9jb21wb25lbnRGYWN0b3J5O1xyXG4gICAgaXNDbG9zYWJsZTogYm9vbGVhbjtcclxuICAgIGNsb3NlUmVzdWx0OiBVO1xyXG4gICAgY29udHJvbHM6IE1vZGFsQ29udHJvbHM8VCwgVT47XHJcbiAgICBvbkFwcHJvdmU6IEV2ZW50RW1pdHRlcjxUPjtcclxuICAgIG9uRGVueTogRXZlbnRFbWl0dGVyPFU+O1xyXG4gICAgb25EaXNtaXNzOiBFdmVudEVtaXR0ZXI8dm9pZD47XHJcbiAgICBzaXplOiBNb2RhbFNpemU7XHJcbiAgICBpc0NlbnRlcmVkOiBib29sZWFuO1xyXG4gICAgaXNCYXNpYzogYm9vbGVhbjtcclxuICAgIHRyYW5zaXRpb25Db250cm9sbGVyOiBUcmFuc2l0aW9uQ29udHJvbGxlcjtcclxuICAgIHRyYW5zaXRpb246IHN0cmluZztcclxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogbnVtYmVyO1xyXG4gICAgZGltQmFja2dyb3VuZDogYm9vbGVhbjtcclxuICAgIHRlbXBsYXRlU2libGluZzogVmlld0NvbnRhaW5lclJlZjtcclxuICAgIHByaXZhdGUgX21vZGFsRWxlbWVudDtcclxuICAgIHByaXZhdGUgX211c3RBbHdheXNTY3JvbGw7XHJcbiAgICBwcml2YXRlIF9pc0Nsb3Npbmc7XHJcbiAgICBwcml2YXRlIF9vcmlnaW5hbENvbnRhaW5lcj87XHJcbiAgICBjb25zdHJ1Y3RvcihfcmVuZGVyZXI6IFJlbmRlcmVyMiwgX2VsZW1lbnQ6IEVsZW1lbnRSZWYsIF9jb21wb25lbnRGYWN0b3J5OiBGdWlDb21wb25lbnRGYWN0b3J5KTtcclxuICAgIHJlYWRvbmx5IGFwcHJvdmU6IE1vZGFsUmVzdWx0PFQ+O1xyXG4gICAgcmVhZG9ubHkgZGVueTogTW9kYWxSZXN1bHQ8VT47XHJcbiAgICByZWFkb25seSBkeW5hbWljQ2xhc3NlczogSUR5bmFtaWNDbGFzc2VzO1xyXG4gICAgcHJpdmF0ZSBfaXNGdWxsU2NyZWVuO1xyXG4gICAgaXNGdWxsU2NyZWVuOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfbXVzdFNjcm9sbDtcclxuICAgIG11c3RTY3JvbGw6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9pc0ludmVydGVkO1xyXG4gICAgaXNJbnZlcnRlZDogYm9vbGVhbjtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcclxuICAgIGxvYWRDb25maWc8Vj4oY29uZmlnOiBNb2RhbENvbmZpZzxWLCBULCBVPik6IHZvaWQ7XHJcbiAgICBjbG9zZSgpOiB2b2lkO1xyXG4gICAgb25DbGljayhlOiBNb3VzZUV2ZW50KTogdm9pZDtcclxuICAgIG9uRG9jdW1lbnRLZXlVcChlOiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIG9uRG9jdW1lbnRSZXNpemUoKTogdm9pZDtcclxuICAgIHByaXZhdGUgZGlzbWlzcztcclxuICAgIHByaXZhdGUgdXBkYXRlU2Nyb2xsO1xyXG59XHJcbiJdfQ==