import { AfterContentInit, ChangeDetectorRef, ElementRef, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { FuiTransition } from '../../transition/internal';
import { HandledEvent, KeyCode } from '../../../misc/util/internal';
import { DropdownService } from '../services/dropdown.service';
import 'element-closest';
export declare class FuiDropdownMenuItem {
    private _renderer;
    element: ElementRef;
    selectedClass: string;
    childDropdownMenu: FuiDropdownMenu;
    constructor(_renderer: Renderer2, element: ElementRef);
    readonly isDisabled: boolean;
    readonly hasChildDropdown: boolean;
    private _isSelected;
    isSelected: boolean;
    performClick(): void;
}
export declare class FuiDropdownMenu extends FuiTransition implements AfterContentInit, OnDestroy {
    menuTransition: string;
    menuTransitionDuration: number;
    selectedItems: FuiDropdownMenuItem[];
    menuAutoSelectFirst: boolean;
    menuSelectedItemClass: string;
    private _transitionController;
    private _itemsQueryInternal;
    private _itemsQueryOverride;
    private _parentKeyDownListener;
    constructor(renderer: Renderer2, element: ElementRef, changeDetector: ChangeDetectorRef);
    parentElement: ElementRef;
    items: QueryList<FuiDropdownMenuItem>;
    private _service;
    service: DropdownService;
    private readonly _itemsQuery;
    private readonly _items;
    onClick(e: HandledEvent & MouseEvent): void;
    onParentKeyDown(e: KeyboardEvent): void;
    resetSelection(): void;
    updateSelection(selectedItem: FuiDropdownMenuItem, keyCode: KeyCode): FuiDropdownMenuItem;
    scrollToItem(item: FuiDropdownMenuItem): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private onItemsChanged;
}
