import { AfterContentInit, ChangeDetectorRef, ElementRef, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { FuiTransition } from '../../transition/internal';
import { HandledEvent, KeyCode } from '../../../misc/util/internal';
import { DropdownService } from '../services/dropdown.service';
import 'element-closest';
import * as ɵngcc0 from '@angular/core';
export declare class FuiDropdownMenuItem {
    private _renderer;
    element: ElementRef;
    selectedClass: string;
    childDropdownMenu: FuiDropdownMenu;
    constructor(_renderer: Renderer2, element: ElementRef);
    readonly isDisabled: boolean;
    readonly hasChildDropdown: boolean;
    private _isSelected;
    isSelected: boolean;
    performClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDropdownMenuItem, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDropdownMenuItem, ".item", never, {}, {}, ["childDropdownMenu"]>;
}
export declare class FuiDropdownMenu extends FuiTransition implements AfterContentInit, OnDestroy {
    menuTransition: string;
    menuTransitionDuration: number;
    selectedItems: FuiDropdownMenuItem[];
    menuAutoSelectFirst: boolean;
    menuSelectedItemClass: string;
    private _transitionController;
    private _itemsQueryInternal;
    private _itemsQueryOverride;
    private _parentKeyDownListener;
    constructor(renderer: Renderer2, element: ElementRef, changeDetector: ChangeDetectorRef);
    parentElement: ElementRef;
    items: QueryList<FuiDropdownMenuItem>;
    private _service;
    service: DropdownService;
    private readonly _itemsQuery;
    private readonly _items;
    onClick(e: HandledEvent & MouseEvent): void;
    onParentKeyDown(e: KeyboardEvent): void;
    resetSelection(): void;
    updateSelection(selectedItem: FuiDropdownMenuItem, keyCode: KeyCode): FuiDropdownMenuItem;
    scrollToItem(item: FuiDropdownMenuItem): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private onItemsChanged;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDropdownMenu, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDropdownMenu, "[fuiDropdownMenu]", never, { "menuTransition": "menuTransition"; "menuTransitionDuration": "menuTransitionDuration"; "menuAutoSelectFirst": "menuAutoSelectFirst"; "menuSelectedItemClass": "menuSelectedItemClass"; }, {}, ["_itemsQueryInternal"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tbWVudS5kLnRzIiwic291cmNlcyI6WyJkcm9wZG93bi1tZW51LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIFF1ZXJ5TGlzdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZ1aVRyYW5zaXRpb24gfSBmcm9tICcuLi8uLi90cmFuc2l0aW9uL2ludGVybmFsJztcclxuaW1wb3J0IHsgSGFuZGxlZEV2ZW50LCBLZXlDb2RlIH0gZnJvbSAnLi4vLi4vLi4vbWlzYy91dGlsL2ludGVybmFsJztcclxuaW1wb3J0IHsgRHJvcGRvd25TZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvZHJvcGRvd24uc2VydmljZSc7XHJcbmltcG9ydCAnZWxlbWVudC1jbG9zZXN0JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRnVpRHJvcGRvd25NZW51SXRlbSB7XHJcbiAgICBwcml2YXRlIF9yZW5kZXJlcjtcclxuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBzZWxlY3RlZENsYXNzOiBzdHJpbmc7XHJcbiAgICBjaGlsZERyb3Bkb3duTWVudTogRnVpRHJvcGRvd25NZW51O1xyXG4gICAgY29uc3RydWN0b3IoX3JlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xyXG4gICAgcmVhZG9ubHkgaXNEaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIHJlYWRvbmx5IGhhc0NoaWxkRHJvcGRvd246IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9pc1NlbGVjdGVkO1xyXG4gICAgaXNTZWxlY3RlZDogYm9vbGVhbjtcclxuICAgIHBlcmZvcm1DbGljaygpOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZ1aURyb3Bkb3duTWVudSBleHRlbmRzIEZ1aVRyYW5zaXRpb24gaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgbWVudVRyYW5zaXRpb246IHN0cmluZztcclxuICAgIG1lbnVUcmFuc2l0aW9uRHVyYXRpb246IG51bWJlcjtcclxuICAgIHNlbGVjdGVkSXRlbXM6IEZ1aURyb3Bkb3duTWVudUl0ZW1bXTtcclxuICAgIG1lbnVBdXRvU2VsZWN0Rmlyc3Q6IGJvb2xlYW47XHJcbiAgICBtZW51U2VsZWN0ZWRJdGVtQ2xhc3M6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3RyYW5zaXRpb25Db250cm9sbGVyO1xyXG4gICAgcHJpdmF0ZSBfaXRlbXNRdWVyeUludGVybmFsO1xyXG4gICAgcHJpdmF0ZSBfaXRlbXNRdWVyeU92ZXJyaWRlO1xyXG4gICAgcHJpdmF0ZSBfcGFyZW50S2V5RG93bkxpc3RlbmVyO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudDogRWxlbWVudFJlZiwgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKTtcclxuICAgIHBhcmVudEVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBpdGVtczogUXVlcnlMaXN0PEZ1aURyb3Bkb3duTWVudUl0ZW0+O1xyXG4gICAgcHJpdmF0ZSBfc2VydmljZTtcclxuICAgIHNlcnZpY2U6IERyb3Bkb3duU2VydmljZTtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgX2l0ZW1zUXVlcnk7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9pdGVtcztcclxuICAgIG9uQ2xpY2soZTogSGFuZGxlZEV2ZW50ICYgTW91c2VFdmVudCk6IHZvaWQ7XHJcbiAgICBvblBhcmVudEtleURvd24oZTogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XHJcbiAgICByZXNldFNlbGVjdGlvbigpOiB2b2lkO1xyXG4gICAgdXBkYXRlU2VsZWN0aW9uKHNlbGVjdGVkSXRlbTogRnVpRHJvcGRvd25NZW51SXRlbSwga2V5Q29kZTogS2V5Q29kZSk6IEZ1aURyb3Bkb3duTWVudUl0ZW07XHJcbiAgICBzY3JvbGxUb0l0ZW0oaXRlbTogRnVpRHJvcGRvd25NZW51SXRlbSk6IHZvaWQ7XHJcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBwcml2YXRlIG9uSXRlbXNDaGFuZ2VkO1xyXG59XHJcbiJdfQ==