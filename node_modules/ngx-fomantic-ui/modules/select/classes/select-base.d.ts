import { AfterContentInit, ElementRef, EventEmitter, OnDestroy, QueryList, TemplateRef, ViewContainerRef } from '@angular/core';
import { DropdownService, FuiDropdownMenu } from '../../dropdown/internal';
import { FilterFn, LookupFn, SearchService } from '../../search/internal';
import { HandledEvent, IFocusEvent, ITemplateRefContext } from '../../../misc/util/internal';
import { ISelectLocaleValues, RecursivePartial, FuiLocalizationService } from '../../../behaviors/localization/internal';
import { FuiSelectOption } from '../components/select-option';
import { FuiSelectSearch } from '../directives/select-search';
import * as ɵngcc0 from '@angular/core';
export interface IOptionContext<T> extends ITemplateRefContext<T> {
    query?: string;
}
export declare abstract class FuiSelectBase<T, U> implements AfterContentInit, OnDestroy {
    private _element;
    protected _localizationService: FuiLocalizationService;
    dropdownService: DropdownService;
    searchService: SearchService<T, U>;
    readonly hasClasses: boolean;
    isClearable: boolean;
    isSearchable: boolean;
    isSearchExternal: boolean;
    valueField: string;
    optionTemplate: TemplateRef<IOptionContext<T>>;
    localeOverrides: RecursivePartial<ISelectLocaleValues>;
    icon: string;
    transition: string;
    transitionDuration: number;
    onTouched: EventEmitter<void>;
    protected _menu: FuiDropdownMenu;
    protected _renderedOptions: QueryList<FuiSelectOption<T>>;
    private _renderedSubscriptions;
    private _internalSearch?;
    private _manualSearch?;
    private _tabIndex?;
    constructor(_element: ElementRef, _localizationService: FuiLocalizationService);
    readonly isActive: boolean;
    readonly isVisible: boolean;
    readonly hasSearchClass: boolean;
    readonly isSearching: boolean;
    readonly isClearing: boolean;
    readonly searchInput: FuiSelectSearch | undefined;
    readonly tabindex: number;
    isDisabled: boolean;
    options: T[];
    optionsFilter: FilterFn<T> | undefined;
    optionsLookup: LookupFn<T, U> | undefined;
    readonly filteredOptions: T[];
    readonly availableOptions: T[];
    query: string | undefined;
    labelField: string | undefined;
    readonly labelGetter: (obj: T) => string;
    readonly valueGetter: (obj: T) => U;
    readonly configuredFormatter: (option: T) => string;
    private _optionFormatter?;
    optionFormatter: ((option: T, query?: string) => string) | undefined;
    private _localeValues;
    readonly localeValues: ISelectLocaleValues;
    ngAfterContentInit(): void;
    abstract selectOption(option: T): void;
    onCaretClick(e: HandledEvent): void;
    onClick(e: HandledEvent): void;
    onFocusIn(): void;
    onFocusOut(e: IFocusEvent): void;
    onKeyPress(e: KeyboardEvent): void;
    onKeyDown(e: KeyboardEvent): void;
    onQueryInputKeydown(event: KeyboardEvent): void;
    ngOnDestroy(): void;
    protected optionsUpdateHook(): void;
    protected queryUpdateHook(): void;
    protected updateQuery(query: string): void;
    protected resetQuery(delayed?: boolean): void;
    protected onAvailableOptionsRendered(): void;
    protected initialiseRenderedOption(option: FuiSelectOption<T>): void;
    protected findOption(options: T[], value: U): T | undefined;
    protected focus(): void;
    protected drawTemplate(siblingRef: ViewContainerRef, value: T): void;
    private onLocaleUpdate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiSelectBase<any, any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiSelectBase<any, any>, never, never, { "isSearchable": "isSearchable"; "icon": "icon"; "transition": "transition"; "transitionDuration": "transitionDuration"; "isDisabled": "isDisabled"; "options": "options"; "optionsFilter": "optionsFilter"; "optionsLookup": "optionsLookup"; "labelField": "labelField"; "optionFormatter": "optionFormatter"; "isClearable": "isClearable"; "valueField": "valueField"; "optionTemplate": "optionTemplate"; "_tabIndex": "tabindex"; }, { "onTouched": "touched"; }, ["_manualSearch", "_renderedOptions"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWJhc2UuZC50cyIsInNvdXJjZXMiOlsic2VsZWN0LWJhc2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERyb3Bkb3duU2VydmljZSwgRnVpRHJvcGRvd25NZW51IH0gZnJvbSAnLi4vLi4vZHJvcGRvd24vaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBGaWx0ZXJGbiwgTG9va3VwRm4sIFNlYXJjaFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZWFyY2gvaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBIYW5kbGVkRXZlbnQsIElGb2N1c0V2ZW50LCBJVGVtcGxhdGVSZWZDb250ZXh0IH0gZnJvbSAnLi4vLi4vLi4vbWlzYy91dGlsL2ludGVybmFsJztcclxuaW1wb3J0IHsgSVNlbGVjdExvY2FsZVZhbHVlcywgUmVjdXJzaXZlUGFydGlhbCwgRnVpTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2JlaGF2aW9ycy9sb2NhbGl6YXRpb24vaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBGdWlTZWxlY3RPcHRpb24gfSBmcm9tICcuLi9jb21wb25lbnRzL3NlbGVjdC1vcHRpb24nO1xyXG5pbXBvcnQgeyBGdWlTZWxlY3RTZWFyY2ggfSBmcm9tICcuLi9kaXJlY3RpdmVzL3NlbGVjdC1zZWFyY2gnO1xyXG5leHBvcnQgaW50ZXJmYWNlIElPcHRpb25Db250ZXh0PFQ+IGV4dGVuZHMgSVRlbXBsYXRlUmVmQ29udGV4dDxUPiB7XHJcbiAgICBxdWVyeT86IHN0cmluZztcclxufVxyXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBGdWlTZWxlY3RCYXNlPFQsIFU+IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgX2VsZW1lbnQ7XHJcbiAgICBwcm90ZWN0ZWQgX2xvY2FsaXphdGlvblNlcnZpY2U6IEZ1aUxvY2FsaXphdGlvblNlcnZpY2U7XHJcbiAgICBkcm9wZG93blNlcnZpY2U6IERyb3Bkb3duU2VydmljZTtcclxuICAgIHNlYXJjaFNlcnZpY2U6IFNlYXJjaFNlcnZpY2U8VCwgVT47XHJcbiAgICByZWFkb25seSBoYXNDbGFzc2VzOiBib29sZWFuO1xyXG4gICAgaXNDbGVhcmFibGU6IGJvb2xlYW47XHJcbiAgICBpc1NlYXJjaGFibGU6IGJvb2xlYW47XHJcbiAgICBpc1NlYXJjaEV4dGVybmFsOiBib29sZWFuO1xyXG4gICAgdmFsdWVGaWVsZDogc3RyaW5nO1xyXG4gICAgb3B0aW9uVGVtcGxhdGU6IFRlbXBsYXRlUmVmPElPcHRpb25Db250ZXh0PFQ+PjtcclxuICAgIGxvY2FsZU92ZXJyaWRlczogUmVjdXJzaXZlUGFydGlhbDxJU2VsZWN0TG9jYWxlVmFsdWVzPjtcclxuICAgIGljb246IHN0cmluZztcclxuICAgIHRyYW5zaXRpb246IHN0cmluZztcclxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogbnVtYmVyO1xyXG4gICAgb25Ub3VjaGVkOiBFdmVudEVtaXR0ZXI8dm9pZD47XHJcbiAgICBwcm90ZWN0ZWQgX21lbnU6IEZ1aURyb3Bkb3duTWVudTtcclxuICAgIHByb3RlY3RlZCBfcmVuZGVyZWRPcHRpb25zOiBRdWVyeUxpc3Q8RnVpU2VsZWN0T3B0aW9uPFQ+PjtcclxuICAgIHByaXZhdGUgX3JlbmRlcmVkU3Vic2NyaXB0aW9ucztcclxuICAgIHByaXZhdGUgX2ludGVybmFsU2VhcmNoPztcclxuICAgIHByaXZhdGUgX21hbnVhbFNlYXJjaD87XHJcbiAgICBwcml2YXRlIF90YWJJbmRleD87XHJcbiAgICBjb25zdHJ1Y3RvcihfZWxlbWVudDogRWxlbWVudFJlZiwgX2xvY2FsaXphdGlvblNlcnZpY2U6IEZ1aUxvY2FsaXphdGlvblNlcnZpY2UpO1xyXG4gICAgcmVhZG9ubHkgaXNBY3RpdmU6IGJvb2xlYW47XHJcbiAgICByZWFkb25seSBpc1Zpc2libGU6IGJvb2xlYW47XHJcbiAgICByZWFkb25seSBoYXNTZWFyY2hDbGFzczogYm9vbGVhbjtcclxuICAgIHJlYWRvbmx5IGlzU2VhcmNoaW5nOiBib29sZWFuO1xyXG4gICAgcmVhZG9ubHkgaXNDbGVhcmluZzogYm9vbGVhbjtcclxuICAgIHJlYWRvbmx5IHNlYXJjaElucHV0OiBGdWlTZWxlY3RTZWFyY2ggfCB1bmRlZmluZWQ7XHJcbiAgICByZWFkb25seSB0YWJpbmRleDogbnVtYmVyO1xyXG4gICAgaXNEaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIG9wdGlvbnM6IFRbXTtcclxuICAgIG9wdGlvbnNGaWx0ZXI6IEZpbHRlckZuPFQ+IHwgdW5kZWZpbmVkO1xyXG4gICAgb3B0aW9uc0xvb2t1cDogTG9va3VwRm48VCwgVT4gfCB1bmRlZmluZWQ7XHJcbiAgICByZWFkb25seSBmaWx0ZXJlZE9wdGlvbnM6IFRbXTtcclxuICAgIHJlYWRvbmx5IGF2YWlsYWJsZU9wdGlvbnM6IFRbXTtcclxuICAgIHF1ZXJ5OiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgICBsYWJlbEZpZWxkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgICByZWFkb25seSBsYWJlbEdldHRlcjogKG9iajogVCkgPT4gc3RyaW5nO1xyXG4gICAgcmVhZG9ubHkgdmFsdWVHZXR0ZXI6IChvYmo6IFQpID0+IFU7XHJcbiAgICByZWFkb25seSBjb25maWd1cmVkRm9ybWF0dGVyOiAob3B0aW9uOiBUKSA9PiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF9vcHRpb25Gb3JtYXR0ZXI/O1xyXG4gICAgb3B0aW9uRm9ybWF0dGVyOiAoKG9wdGlvbjogVCwgcXVlcnk/OiBzdHJpbmcpID0+IHN0cmluZykgfCB1bmRlZmluZWQ7XHJcbiAgICBwcml2YXRlIF9sb2NhbGVWYWx1ZXM7XHJcbiAgICByZWFkb25seSBsb2NhbGVWYWx1ZXM6IElTZWxlY3RMb2NhbGVWYWx1ZXM7XHJcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcclxuICAgIGFic3RyYWN0IHNlbGVjdE9wdGlvbihvcHRpb246IFQpOiB2b2lkO1xyXG4gICAgb25DYXJldENsaWNrKGU6IEhhbmRsZWRFdmVudCk6IHZvaWQ7XHJcbiAgICBvbkNsaWNrKGU6IEhhbmRsZWRFdmVudCk6IHZvaWQ7XHJcbiAgICBvbkZvY3VzSW4oKTogdm9pZDtcclxuICAgIG9uRm9jdXNPdXQoZTogSUZvY3VzRXZlbnQpOiB2b2lkO1xyXG4gICAgb25LZXlQcmVzcyhlOiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIG9uS2V5RG93bihlOiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIG9uUXVlcnlJbnB1dEtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBvcHRpb25zVXBkYXRlSG9vaygpOiB2b2lkO1xyXG4gICAgcHJvdGVjdGVkIHF1ZXJ5VXBkYXRlSG9vaygpOiB2b2lkO1xyXG4gICAgcHJvdGVjdGVkIHVwZGF0ZVF1ZXJ5KHF1ZXJ5OiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgcHJvdGVjdGVkIHJlc2V0UXVlcnkoZGVsYXllZD86IGJvb2xlYW4pOiB2b2lkO1xyXG4gICAgcHJvdGVjdGVkIG9uQXZhaWxhYmxlT3B0aW9uc1JlbmRlcmVkKCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgaW5pdGlhbGlzZVJlbmRlcmVkT3B0aW9uKG9wdGlvbjogRnVpU2VsZWN0T3B0aW9uPFQ+KTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBmaW5kT3B0aW9uKG9wdGlvbnM6IFRbXSwgdmFsdWU6IFUpOiBUIHwgdW5kZWZpbmVkO1xyXG4gICAgcHJvdGVjdGVkIGZvY3VzKCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgZHJhd1RlbXBsYXRlKHNpYmxpbmdSZWY6IFZpZXdDb250YWluZXJSZWYsIHZhbHVlOiBUKTogdm9pZDtcclxuICAgIHByaXZhdGUgb25Mb2NhbGVVcGRhdGU7XHJcbn1cclxuIl19