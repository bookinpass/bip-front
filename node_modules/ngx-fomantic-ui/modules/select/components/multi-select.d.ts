import { ElementRef, EventEmitter } from '@angular/core';
import { CustomValueAccessor, ICustomValueAccessorHost } from '../../../misc/util/internal';
import { FuiLocalizationService } from '../../../behaviors/localization/internal';
import { FuiSelectBase } from '../classes/select-base';
import { FuiSelectOption } from './select-option';
import * as ɵngcc0 from '@angular/core';
export declare class FuiMultiSelect<T, U> extends FuiSelectBase<T, U> implements ICustomValueAccessorHost<U[]> {
    selectedOptions: T[];
    selectedOptionsChange: EventEmitter<U[]>;
    maxSelected: number;
    readonly hasClasses: boolean;
    private _writtenOptions?;
    constructor(element: ElementRef, localizationService: FuiLocalizationService);
    readonly filteredOptions: T[];
    readonly availableOptions: T[];
    readonly maxSelectedReached: boolean;
    readonly maxSelectedMessage: string;
    readonly selectedMessage: string;
    private _hasLabels;
    hasLabels: boolean;
    private _showCountText;
    showCountText: string;
    private _placeholder;
    placeholder: string;
    selectOption(option: T): void;
    writeValue(values: U[]): void;
    deselectOption(option: T): void;
    onQueryInputKeydown(event: KeyboardEvent): void;
    protected optionsUpdateHook(): void;
    protected initialiseRenderedOption(option: FuiSelectOption<T>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiMultiSelect<any, any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FuiMultiSelect<any, any>, "fui-multi-select", never, { "hasLabels": "hasLabels"; "showCountText": "showCountText"; "placeholder": "placeholder"; "maxSelected": "maxSelected"; }, { "selectedOptionsChange": "selectedOptionsChange"; }, never, ["*"]>;
}
export declare class FuiMultiSelectValueAccessor<T, U> extends CustomValueAccessor<U[], FuiMultiSelect<T, U>> {
    constructor(host: FuiMultiSelect<T, U>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiMultiSelectValueAccessor<any, any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiMultiSelectValueAccessor<any, any>, "fui-multi-select", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LmQudHMiLCJzb3VyY2VzIjpbIm11bHRpLXNlbGVjdC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEN1c3RvbVZhbHVlQWNjZXNzb3IsIElDdXN0b21WYWx1ZUFjY2Vzc29ySG9zdCB9IGZyb20gJy4uLy4uLy4uL21pc2MvdXRpbC9pbnRlcm5hbCc7XHJcbmltcG9ydCB7IEZ1aUxvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9iZWhhdmlvcnMvbG9jYWxpemF0aW9uL2ludGVybmFsJztcclxuaW1wb3J0IHsgRnVpU2VsZWN0QmFzZSB9IGZyb20gJy4uL2NsYXNzZXMvc2VsZWN0LWJhc2UnO1xyXG5pbXBvcnQgeyBGdWlTZWxlY3RPcHRpb24gfSBmcm9tICcuL3NlbGVjdC1vcHRpb24nO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGdWlNdWx0aVNlbGVjdDxULCBVPiBleHRlbmRzIEZ1aVNlbGVjdEJhc2U8VCwgVT4gaW1wbGVtZW50cyBJQ3VzdG9tVmFsdWVBY2Nlc3Nvckhvc3Q8VVtdPiB7XHJcbiAgICBzZWxlY3RlZE9wdGlvbnM6IFRbXTtcclxuICAgIHNlbGVjdGVkT3B0aW9uc0NoYW5nZTogRXZlbnRFbWl0dGVyPFVbXT47XHJcbiAgICBtYXhTZWxlY3RlZDogbnVtYmVyO1xyXG4gICAgcmVhZG9ubHkgaGFzQ2xhc3NlczogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX3dyaXR0ZW5PcHRpb25zPztcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGxvY2FsaXphdGlvblNlcnZpY2U6IEZ1aUxvY2FsaXphdGlvblNlcnZpY2UpO1xyXG4gICAgcmVhZG9ubHkgZmlsdGVyZWRPcHRpb25zOiBUW107XHJcbiAgICByZWFkb25seSBhdmFpbGFibGVPcHRpb25zOiBUW107XHJcbiAgICByZWFkb25seSBtYXhTZWxlY3RlZFJlYWNoZWQ6IGJvb2xlYW47XHJcbiAgICByZWFkb25seSBtYXhTZWxlY3RlZE1lc3NhZ2U6IHN0cmluZztcclxuICAgIHJlYWRvbmx5IHNlbGVjdGVkTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfaGFzTGFiZWxzO1xyXG4gICAgaGFzTGFiZWxzOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfc2hvd0NvdW50VGV4dDtcclxuICAgIHNob3dDb3VudFRleHQ6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3BsYWNlaG9sZGVyO1xyXG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcclxuICAgIHNlbGVjdE9wdGlvbihvcHRpb246IFQpOiB2b2lkO1xyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZXM6IFVbXSk6IHZvaWQ7XHJcbiAgICBkZXNlbGVjdE9wdGlvbihvcHRpb246IFQpOiB2b2lkO1xyXG4gICAgb25RdWVyeUlucHV0S2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgb3B0aW9uc1VwZGF0ZUhvb2soKTogdm9pZDtcclxuICAgIHByb3RlY3RlZCBpbml0aWFsaXNlUmVuZGVyZWRPcHRpb24ob3B0aW9uOiBGdWlTZWxlY3RPcHRpb248VD4pOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZ1aU11bHRpU2VsZWN0VmFsdWVBY2Nlc3NvcjxULCBVPiBleHRlbmRzIEN1c3RvbVZhbHVlQWNjZXNzb3I8VVtdLCBGdWlNdWx0aVNlbGVjdDxULCBVPj4ge1xyXG4gICAgY29uc3RydWN0b3IoaG9zdDogRnVpTXVsdGlTZWxlY3Q8VCwgVT4pO1xyXG59XHJcbiJdfQ==