import { ElementRef, EventEmitter } from '@angular/core';
import { CustomValueAccessor, HandledEvent, ICustomValueAccessorHost } from '../../../misc/util/internal';
import { FuiLocalizationService } from '../../../behaviors/localization/internal';
import { FuiSelectBase } from '../classes/select-base';
import { FuiSelectOption } from './select-option';
export declare class FuiSelect<T, U> extends FuiSelectBase<T, U> implements ICustomValueAccessorHost<U> {
    selectedOption?: T;
    selectedOptionChange: EventEmitter<U>;
    private _writtenOption?;
    private _optionTemplateSibling;
    constructor(element: ElementRef, localizationService: FuiLocalizationService);
    private _placeholder;
    placeholder: string;
    selectOption(option: T): void;
    writeValue(value: U): void;
    onRemoveClick(e: HandledEvent): void;
    protected optionsUpdateHook(): void;
    protected queryUpdateHook(): void;
    protected initialiseRenderedOption(option: FuiSelectOption<T>): void;
    private drawSelectedOption;
}
export declare class FuiSelectValueAccessor<T, U> extends CustomValueAccessor<U, FuiSelect<T, U>> {
    constructor(host: FuiSelect<T, U>);
}
