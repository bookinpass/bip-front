import { FilterFn, LookupFn, LookupFnResult } from '../helpers/lookup-fn';
export declare class SearchService<T, U> {
    optionsFilter: FilterFn<T>;
    allowEmptyQuery: boolean;
    searchDelay: number;
    private _resultsCache;
    private _searchDelayTimeout;
    constructor(allowEmptyQuery?: boolean);
    readonly hasItemLookup: boolean;
    private _options;
    options: T[];
    private _optionsLookup?;
    optionsLookup: LookupFn<T, U> | undefined;
    private _optionsField?;
    optionsField: string | undefined;
    private _results;
    readonly results: T[];
    private _query;
    readonly query: string;
    private _isSearching;
    readonly isSearching: boolean;
    updateQueryDelayed(query: string, callback?: (err?: Error) => void): void;
    updateQuery(query: string, callback?: (err?: Error) => void): void;
    initialLookup(initial: U): LookupFnResult<T>;
    initialLookup(initial: U[]): LookupFnResult<T[]>;
    highlightMatches(text: string, query: string): string;
    private updateResults;
    private toRegex;
    private reset;
}
