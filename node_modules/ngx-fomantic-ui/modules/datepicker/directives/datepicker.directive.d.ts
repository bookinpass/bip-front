import { ElementRef, EventEmitter, OnChanges, Renderer2, SimpleChanges } from '@angular/core';
import { AbstractControl, ValidationErrors } from '@angular/forms';
import { CustomValidator, CustomValueAccessor, ICustomValidatorHost, ICustomValueAccessorHost, PositioningPlacement, FuiComponentFactory } from '../../../misc/util/internal';
import { IDatepickerLocaleValues, RecursivePartial, FuiLocalizationService } from '../../../behaviors/localization/internal';
import { PopupAfterOpen, FuiPopupComponentController } from '../../popup/internal';
import { DatepickerMode, FuiDatepicker } from '../components/datepicker';
import { CalendarConfig } from '../classes/calendar-config';
import * as ɵngcc0 from '@angular/core';
export declare class FuiDatepickerDirective extends FuiPopupComponentController<FuiDatepicker> implements ICustomValueAccessorHost<Date>, ICustomValidatorHost, OnChanges, PopupAfterOpen {
    localizationService: FuiLocalizationService;
    config: CalendarConfig;
    initialDate?: Date;
    maxDate?: Date;
    minDate?: Date;
    firstDayOfWeek?: number;
    localeOverrides: RecursivePartial<IDatepickerLocaleValues>;
    onSelectedDateChange: EventEmitter<Date>;
    onValidatorChange: EventEmitter<void>;
    constructor(renderer: Renderer2, element: ElementRef, componentFactory: FuiComponentFactory, localizationService: FuiLocalizationService);
    placement: PositioningPlacement;
    transition: string;
    transitionDuration: number;
    private _selectedDate?;
    selectedDate: Date | undefined;
    private _mode;
    mode: DatepickerMode;
    private _localeValues;
    readonly localeValues: IDatepickerLocaleValues;
    popupOnOpen(): void;
    ngOnChanges({ maxDate, minDate, mode }: SimpleChanges): void;
    validate(c: AbstractControl): ValidationErrors | null;
    writeValue(value: Date | undefined): void;
    onKeyDown(e: KeyboardEvent): void;
    private onLocaleUpdate;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDatepickerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDatepickerDirective, "[fuiDatepicker]", never, { "mode": "pickerMode"; "placement": "pickerPlacement"; "transition": "pickerTransition"; "transitionDuration": "pickerTransitionDuration"; "initialDate": "pickerInitialDate"; "maxDate": "pickerMaxDate"; "minDate": "pickerMinDate"; "firstDayOfWeek": "pickerFirstDayOfWeek"; "localeOverrides": "pickerLocaleOverrides"; }, { "onSelectedDateChange": "pickerSelectedDateChange"; "onValidatorChange": "pickerValidatorChange"; }, never>;
}
export declare class FuiDatepickerDirectiveValueAccessor extends CustomValueAccessor<Date, FuiDatepickerDirective> {
    host: FuiDatepickerDirective;
    constructor(host: FuiDatepickerDirective);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDatepickerDirectiveValueAccessor, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDatepickerDirectiveValueAccessor, "[fuiDatepicker]", never, {}, {}, never>;
}
export declare class FuiDatepickerDirectiveValidator extends CustomValidator<FuiDatepickerDirective> {
    host: FuiDatepickerDirective;
    constructor(host: FuiDatepickerDirective);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDatepickerDirectiveValidator, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDatepickerDirectiveValidator, "[fuiDatepicker]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZGF0ZXBpY2tlci5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IEN1c3RvbVZhbGlkYXRvciwgQ3VzdG9tVmFsdWVBY2Nlc3NvciwgSUN1c3RvbVZhbGlkYXRvckhvc3QsIElDdXN0b21WYWx1ZUFjY2Vzc29ySG9zdCwgUG9zaXRpb25pbmdQbGFjZW1lbnQsIEZ1aUNvbXBvbmVudEZhY3RvcnkgfSBmcm9tICcuLi8uLi8uLi9taXNjL3V0aWwvaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBJRGF0ZXBpY2tlckxvY2FsZVZhbHVlcywgUmVjdXJzaXZlUGFydGlhbCwgRnVpTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2JlaGF2aW9ycy9sb2NhbGl6YXRpb24vaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBQb3B1cEFmdGVyT3BlbiwgRnVpUG9wdXBDb21wb25lbnRDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vcG9wdXAvaW50ZXJuYWwnO1xyXG5pbXBvcnQgeyBEYXRlcGlja2VyTW9kZSwgRnVpRGF0ZXBpY2tlciB9IGZyb20gJy4uL2NvbXBvbmVudHMvZGF0ZXBpY2tlcic7XHJcbmltcG9ydCB7IENhbGVuZGFyQ29uZmlnIH0gZnJvbSAnLi4vY2xhc3Nlcy9jYWxlbmRhci1jb25maWcnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGdWlEYXRlcGlja2VyRGlyZWN0aXZlIGV4dGVuZHMgRnVpUG9wdXBDb21wb25lbnRDb250cm9sbGVyPEZ1aURhdGVwaWNrZXI+IGltcGxlbWVudHMgSUN1c3RvbVZhbHVlQWNjZXNzb3JIb3N0PERhdGU+LCBJQ3VzdG9tVmFsaWRhdG9ySG9zdCwgT25DaGFuZ2VzLCBQb3B1cEFmdGVyT3BlbiB7XHJcbiAgICBsb2NhbGl6YXRpb25TZXJ2aWNlOiBGdWlMb2NhbGl6YXRpb25TZXJ2aWNlO1xyXG4gICAgY29uZmlnOiBDYWxlbmRhckNvbmZpZztcclxuICAgIGluaXRpYWxEYXRlPzogRGF0ZTtcclxuICAgIG1heERhdGU/OiBEYXRlO1xyXG4gICAgbWluRGF0ZT86IERhdGU7XHJcbiAgICBmaXJzdERheU9mV2Vlaz86IG51bWJlcjtcclxuICAgIGxvY2FsZU92ZXJyaWRlczogUmVjdXJzaXZlUGFydGlhbDxJRGF0ZXBpY2tlckxvY2FsZVZhbHVlcz47XHJcbiAgICBvblNlbGVjdGVkRGF0ZUNoYW5nZTogRXZlbnRFbWl0dGVyPERhdGU+O1xyXG4gICAgb25WYWxpZGF0b3JDaGFuZ2U6IEV2ZW50RW1pdHRlcjx2b2lkPjtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNvbXBvbmVudEZhY3Rvcnk6IEZ1aUNvbXBvbmVudEZhY3RvcnksIGxvY2FsaXphdGlvblNlcnZpY2U6IEZ1aUxvY2FsaXphdGlvblNlcnZpY2UpO1xyXG4gICAgcGxhY2VtZW50OiBQb3NpdGlvbmluZ1BsYWNlbWVudDtcclxuICAgIHRyYW5zaXRpb246IHN0cmluZztcclxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBfc2VsZWN0ZWREYXRlPztcclxuICAgIHNlbGVjdGVkRGF0ZTogRGF0ZSB8IHVuZGVmaW5lZDtcclxuICAgIHByaXZhdGUgX21vZGU7XHJcbiAgICBtb2RlOiBEYXRlcGlja2VyTW9kZTtcclxuICAgIHByaXZhdGUgX2xvY2FsZVZhbHVlcztcclxuICAgIHJlYWRvbmx5IGxvY2FsZVZhbHVlczogSURhdGVwaWNrZXJMb2NhbGVWYWx1ZXM7XHJcbiAgICBwb3B1cE9uT3BlbigpOiB2b2lkO1xyXG4gICAgbmdPbkNoYW5nZXMoeyBtYXhEYXRlLCBtaW5EYXRlLCBtb2RlIH06IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xyXG4gICAgdmFsaWRhdGUoYzogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGw7XHJcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBEYXRlIHwgdW5kZWZpbmVkKTogdm9pZDtcclxuICAgIG9uS2V5RG93bihlOiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIHByaXZhdGUgb25Mb2NhbGVVcGRhdGU7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZVZhbHVlQWNjZXNzb3IgZXh0ZW5kcyBDdXN0b21WYWx1ZUFjY2Vzc29yPERhdGUsIEZ1aURhdGVwaWNrZXJEaXJlY3RpdmU+IHtcclxuICAgIGhvc3Q6IEZ1aURhdGVwaWNrZXJEaXJlY3RpdmU7XHJcbiAgICBjb25zdHJ1Y3Rvcihob3N0OiBGdWlEYXRlcGlja2VyRGlyZWN0aXZlKTtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGdWlEYXRlcGlja2VyRGlyZWN0aXZlVmFsaWRhdG9yIGV4dGVuZHMgQ3VzdG9tVmFsaWRhdG9yPEZ1aURhdGVwaWNrZXJEaXJlY3RpdmU+IHtcclxuICAgIGhvc3Q6IEZ1aURhdGVwaWNrZXJEaXJlY3RpdmU7XHJcbiAgICBjb25zdHJ1Y3Rvcihob3N0OiBGdWlEYXRlcGlja2VyRGlyZWN0aXZlKTtcclxufVxyXG4iXX0=