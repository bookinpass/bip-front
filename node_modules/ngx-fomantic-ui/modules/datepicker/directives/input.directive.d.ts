import { ElementRef, Renderer2 } from '@angular/core';
import { FuiLocalizationService } from '../../../behaviors/localization/internal';
import { FuiDatepickerDirective, FuiDatepickerDirectiveValueAccessor } from './datepicker.directive';
import { DateParser } from '../classes/date-parser';
import * as ɵngcc0 from '@angular/core';
export declare class FuiDatepickerInputDirective {
    datepicker: FuiDatepickerDirective;
    valueAccessor: FuiDatepickerDirectiveValueAccessor;
    private _renderer;
    private _element;
    private _currentInputValue;
    private _lastUpdateTyped;
    constructor(datepicker: FuiDatepickerDirective, valueAccessor: FuiDatepickerDirectiveValueAccessor, _renderer: Renderer2, _element: ElementRef, localizationService: FuiLocalizationService);
    readonly parser: DateParser;
    readonly selectedDateString: string | undefined;
    readonly type: string;
    readonly max: string | undefined;
    readonly min: string | undefined;
    private _useNativeOnMobile;
    useNativeOnMobile: boolean;
    private _fallbackActive;
    fallbackActive: boolean;
    typeValue(value: string | undefined): void;
    onFocusOut(): void;
    private updateValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FuiDatepickerInputDirective, [{ host: true; }, { host: true; }, null, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FuiDatepickerInputDirective, "input[fuiDatepicker]", never, { "useNativeOnMobile": "pickerUseNativeOnMobile"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImlucHV0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZ1aUxvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9iZWhhdmlvcnMvbG9jYWxpemF0aW9uL2ludGVybmFsJztcclxuaW1wb3J0IHsgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZSwgRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZVZhbHVlQWNjZXNzb3IgfSBmcm9tICcuL2RhdGVwaWNrZXIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRGF0ZVBhcnNlciB9IGZyb20gJy4uL2NsYXNzZXMvZGF0ZS1wYXJzZXInO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGdWlEYXRlcGlja2VySW5wdXREaXJlY3RpdmUge1xyXG4gICAgZGF0ZXBpY2tlcjogRnVpRGF0ZXBpY2tlckRpcmVjdGl2ZTtcclxuICAgIHZhbHVlQWNjZXNzb3I6IEZ1aURhdGVwaWNrZXJEaXJlY3RpdmVWYWx1ZUFjY2Vzc29yO1xyXG4gICAgcHJpdmF0ZSBfcmVuZGVyZXI7XHJcbiAgICBwcml2YXRlIF9lbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBfY3VycmVudElucHV0VmFsdWU7XHJcbiAgICBwcml2YXRlIF9sYXN0VXBkYXRlVHlwZWQ7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRlcGlja2VyOiBGdWlEYXRlcGlja2VyRGlyZWN0aXZlLCB2YWx1ZUFjY2Vzc29yOiBGdWlEYXRlcGlja2VyRGlyZWN0aXZlVmFsdWVBY2Nlc3NvciwgX3JlbmRlcmVyOiBSZW5kZXJlcjIsIF9lbGVtZW50OiBFbGVtZW50UmVmLCBsb2NhbGl6YXRpb25TZXJ2aWNlOiBGdWlMb2NhbGl6YXRpb25TZXJ2aWNlKTtcclxuICAgIHJlYWRvbmx5IHBhcnNlcjogRGF0ZVBhcnNlcjtcclxuICAgIHJlYWRvbmx5IHNlbGVjdGVkRGF0ZVN0cmluZzogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG4gICAgcmVhZG9ubHkgdHlwZTogc3RyaW5nO1xyXG4gICAgcmVhZG9ubHkgbWF4OiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgICByZWFkb25seSBtaW46IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICAgIHByaXZhdGUgX3VzZU5hdGl2ZU9uTW9iaWxlO1xyXG4gICAgdXNlTmF0aXZlT25Nb2JpbGU6IGJvb2xlYW47XHJcbiAgICBwcml2YXRlIF9mYWxsYmFja0FjdGl2ZTtcclxuICAgIGZhbGxiYWNrQWN0aXZlOiBib29sZWFuO1xyXG4gICAgdHlwZVZhbHVlKHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQpOiB2b2lkO1xyXG4gICAgb25Gb2N1c091dCgpOiB2b2lkO1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVWYWx1ZTtcclxufVxyXG4iXX0=